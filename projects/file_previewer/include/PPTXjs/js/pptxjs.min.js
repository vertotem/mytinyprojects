/**
 * pptxjs.min.js
 * Ver. : 1.10.4
 * last update: 14/05/2020
 * Author: meshesha , https://github.com/meshesha
 * LICENSE: MIT
 * url:https://meshesha.github.io/pptxjs
 * New:
 *  - fixed security issue
 *  - new divs2slides (v.1.3.2)
 *  - fixed div width issue
 */
!function (r) { r.fn.pptxToHtml = function (t) { var e = r(this), s = e.attr("id"), o = !1, i = new Array, l = null, n = "", d = 0, h = 1, c = !1, p = {}, f = r.extend(!0, { pptxFileUrl: "", fileInputId: "", slidesScale: "", slideMode: !1, keyBoardShortCut: !1, mediaProcess: !0, jsZipV2: !1, slideModeConfig: { first: 1, nav: !0, navTxtColor: "black", keyBoardShortCut: !0, showSlideNum: !0, showTotalSlideNum: !0, autoSlide: !0, randomAutoSlide: !1, loop: !1, background: !1, transition: "default", transitionTime: 1 } }, t); function u(a) { for (var t = new JSZip, n = function (a) { var r = [], t = new Date; if (null !== a.file("docProps/thumbnail.jpeg")) { var e = ia(a.file("docProps/thumbnail.jpeg").asArrayBuffer()); r.push({ type: "pptx-thumb", data: e }) } var s = function (a) { for (var r = L(a, "[Content_Types].xml").Types.Override, t = [], e = [], s = 0; s < r.length; s++)switch (r[s].attrs.ContentType) { case "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": t.push(r[s].attrs.PartName.substr(1)); break; case "application/vnd.openxmlformats-officedocument.presentationml.slideLayout+xml": e.push(r[s].attrs.PartName.substr(1)) }return { slides: t, slideLayouts: e } }(a), o = function (a) { var r = L(a, "ppt/presentation.xml")["p:presentation"]["p:sldSz"].attrs; return { width: 96 * parseInt(r.cx) / 914400, height: 96 * parseInt(r.cy) / 914400 } }(a); l = function (a) { var r = L(a, "ppt/_rels/presentation.xml.rels").Relationships.Relationship, t = void 0; if (r.constructor === Array) { for (var e = 0; e < r.length; e++)if ("http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme" === r[e].attrs.Type) { t = r[e].attrs.Target; break } } else "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme" === r.attrs.Type && (t = r.attrs.Target); if (void 0 === t) throw Error("Can't open theme file."); return L(a, "ppt/" + t) }(a), tableStyles = L(a, "ppt/tableStyles.xml"), r.push({ type: "slideSize", data: o }); for (var i = s.slides.length, n = 0; n < i; n++) { var d = s.slides[n], h = v(a, d, n, o); r.push({ type: "slide", data: h }), r.push({ type: "progress-update", data: 100 * (n + 1) / i }) } r.push({ type: "globalCSS", data: C() }); var c = new Date; return r.push({ type: "ExecutionTime", data: c - t }), r }(t = t.load(a)), d = r("#" + s + " .slide").height(), h = 0; h < n.length; h++)switch (n[h].type) { case "slide": e.append(n[h].data); break; case "pptx-thumb": case "slideSize": break; case "globalCSS": e.append("<style>" + n[h].data + "</style>"); break; case "ExecutionTime": K(i), ra(r(".block")), ra(r("table td")), o = !0, f.slideMode && !c ? (c = !0, r("#" + s + " .slide").hide(), setTimeout(function () { var a = f.slideModeConfig; r(".slides-loadnig-msg").remove(), r("#" + s).divs2slides({ first: a.first, nav: a.nav, showPlayPauseBtn: f.showPlayPauseBtn, navTxtColor: a.navTxtColor, keyBoardShortCut: a.keyBoardShortCut, showSlideNum: a.showSlideNum, showTotalSlideNum: a.showTotalSlideNum, autoSlide: a.autoSlide, randomAutoSlide: a.randomAutoSlide, loop: a.loop, background: a.background, transition: a.transition, transitionTime: a.transitionTime }); var t = f.slidesScale, e = ""; if ("" != t) { var o = parseInt(t) / 100; e = "transform:scale(" + o + "); transform-origin:top" } var i = "" != t ? o : 1; r("#all_slides_warpper").attr({ style: e + ";height: " + 1 * d * i + "px" }) }, 1500)) : f.slideMode || r(".slides-loadnig-msg").remove() }f.slideMode || null === document.getElementById("all_slides_warpper") && r("#" + s + " .slide").wrapAll("<div id='all_slides_warpper'></div>"); var p = f.slidesScale, u = ""; if ("" != p) { var m = parseInt(p) / 100; u = "transform:scale(" + m + "); transform-origin:top" } d = r("#" + s + " .slide").height(); var g = r("#" + s + " .slide").length, b = "" != p ? m : 1; r("#all_slides_warpper").attr({ style: u + ";height: " + g * d * b + "px" }) } function L(a, r) { var t = da(a.file(r).asText(), { simplify: 1 }); return void 0 !== t["?xml"] ? t["?xml"] : t } function v(a, r, t, e) { var s = L(a, r.replace("slides/slide", "slides/_rels/slide") + ".rels").Relationships.Relationship, o = "", i = {}; if (s.constructor === Array) for (var d = 0; d < s.length; d++)switch (s[d].attrs.Type) { case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideLayout": o = s[d].attrs.Target.replace("../", "ppt/"); break; case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/notesSlide": case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image": case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/chart": case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink": default: i[s[d].attrs.Id] = { type: s[d].attrs.Type.replace("http://schemas.openxmlformats.org/officeDocument/2006/relationships/", ""), target: s[d].attrs.Target.replace("../", "ppt/") } } else o = s.attrs.Target.replace("../", "ppt/"); var h = L(a, o), c = m(h), p = h["p:sldLayout"]["p:clrMapOvr"]["a:overrideClrMapping"]; void 0 !== p && (n = p.attrs); var f = "", u = {}; if ((s = L(a, o.replace("slideLayouts/slideLayout", "slideLayouts/_rels/slideLayout") + ".rels").Relationships.Relationship).constructor === Array) for (d = 0; d < s.length; d++)switch (s[d].attrs.Type) { case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/slideMaster": f = s[d].attrs.Target.replace("../", "ppt/"); break; default: u[s[d].attrs.Id] = { type: s[d].attrs.Type.replace("http://schemas.openxmlformats.org/officeDocument/2006/relationships/", ""), target: s[d].attrs.Target.replace("../", "ppt/") } } else f = s.attrs.Target.replace("../", "ppt/"); var v = L(a, f), b = Y(v, ["p:sldMaster", "p:txStyles"]), M = m(v), k = "", y = {}; if ((s = L(a, f.replace("slideMasters/slideMaster", "slideMasters/_rels/slideMaster") + ".rels").Relationships.Relationship).constructor === Array) for (d = 0; d < s.length; d++)switch (s[d].attrs.Type) { case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme": k = s[d].attrs.Target.replace("../", "ppt/"); break; default: y[s[d].attrs.Id] = { type: s[d].attrs.Type.replace("http://schemas.openxmlformats.org/officeDocument/2006/relationships/", ""), target: s[d].attrs.Target.replace("../", "ppt/") } } else k = s.attrs.Target.replace("../", "ppt/"); void 0 !== k && (l = L(a, k)); var w = L(a, r), I = w["p:sld"]["p:cSld"]["p:spTree"], P = { zip: a, slideLayoutTables: c, slideMasterTables: M, slideResObj: i, slideMasterTextStyles: b, layoutResObj: u, masterResObj: y }, C = function (a, r, t, e) { var s, o = Y(a, ["p:sld", "p:cSld", "p:bg", "p:bgPr"]), i = Y(a, ["p:sld", "p:cSld", "p:bg", "p:bgRef"]); if (void 0 !== o) { var n = O(o); if ("SOLID_FILL" == n) { var d = o["a:solidFill"], h = q(d), c = Q(d); s = "background: rgba(" + B(h) + "," + c + ");" } else "GRADIENT_FILL" == n ? s = A(o, void 0, t) : "PIC_FILL" == n && (s = R(o, "slideBg", e)) } else if (void 0 !== i) { if (void 0 !== i["a:srgbClr"]) b = Y(i, ["a:srgbClr", "attrs", "val"]); else if (void 0 !== i["a:schemeClr"]) { var p = Y(i, ["a:schemeClr", "attrs", "val"]); b = X("a:" + p, t) } var f = Number(i.attrs.idx); if (0 == f || 1e3 == f); else if (f > 0 && f < 1e3); else if (f > 1e3) { var u = f - 1e3, L = l["a:theme"]["a:themeElements"]["a:fmtScheme"]["a:bgFillStyleLst"], v = []; Object.keys(L).forEach(function (a) { var r = L[a]; if ("attrs" != a) if (r.constructor === Array) for (var t = 0; t < r.length; t++) { var e = {}; e[a] = r[t], e.idex = r[t].attrs.order, v.push(e) } else { var e = {}; e[a] = r, e.idex = r.attrs.order, v.push(e) } }); var m = v.slice(0); m.sort(function (a, r) { return a.idex - r.idex }); var g = m[u - 1], n = O(g); if ("SOLID_FILL" == n) { var d = g["a:solidFill"], c = Q(d); s = "background: rgba(" + B(b) + "," + c + ");" } else "GRADIENT_FILL" == n && (s = A(g, b, t)) } } else if (o = Y(r, ["p:sldLayout", "p:cSld", "p:bg", "p:bgPr"]), i = Y(r, ["p:sldLayout", "p:cSld", "p:bg", "p:bgRef"]), void 0 !== o) { var n = O(o); if ("SOLID_FILL" == n) { var d = o["a:solidFill"], h = q(d), c = Q(d); s = "background: rgba(" + B(h) + "," + c + ");" } else "GRADIENT_FILL" == n ? s = A(o, void 0, t) : "PIC_FILL" == n && (s = R(o, "layoutBg", e)) } else if (void 0 !== i) s = "background: red;"; else if (o = Y(t, ["p:sldMaster", "p:cSld", "p:bg", "p:bgPr"]), i = Y(t, ["p:sldMaster", "p:cSld", "p:bg", "p:bgRef"]), void 0 !== o) { var n = O(o); if ("SOLID_FILL" == n) { var d = o["a:solidFill"], h = q(d), c = Q(d); s = "background: rgba(" + B(h) + "," + c + ");" } else "GRADIENT_FILL" == n ? s = A(o, void 0, t) : "PIC_FILL" == n && (s = R(o, "masterBg", e)) } else if (void 0 !== i) { var b; if (void 0 !== i["a:srgbClr"]) b = Y(i, ["a:srgbClr", "attrs", "val"]); else if (void 0 !== i["a:schemeClr"]) { var p = Y(i, ["a:schemeClr", "attrs", "val"]); b = X("a:" + p, t) } var f = Number(i.attrs.idx); if (0 == f || 1e3 == f); else if (f > 0 && f < 1e3); else if (f > 1e3) { var u = f - 1e3, L = l["a:theme"]["a:themeElements"]["a:fmtScheme"]["a:bgFillStyleLst"], v = []; Object.keys(L).forEach(function (a) { var r = L[a]; if ("attrs" != a) if (r.constructor === Array) for (var t = 0; t < r.length; t++) { var e = {}; e[a] = r[t], e.idex = r[t].attrs.order, v.push(e) } else { var e = {}; e[a] = r, e.idex = r.attrs.order, v.push(e) } }); var m = v.slice(0); m.sort(function (a, r) { return a.idex - r.idex }); var g = m[u - 1], n = O(g); if ("SOLID_FILL" == n) { var d = g["a:solidFill"], c = Q(d); s = "background: rgba(" + B(b) + "," + c + ");" } else "GRADIENT_FILL" == n ? s = A(g, b, t) : console.log(n) } } return s }(w, h, v, P), _ = "<div class='slide' style='width:" + e.width + "px; height:" + e.height + "px;" + C + "'>"; for (var x in I) if (I[x].constructor === Array) for (d = 0; d < I[x].length; d++)_ += g(x, I[x][d], P); else _ += g(x, I[x], P); return _ + "</div>" } function m(a) { var r = a[Object.keys(a)[0]]["p:cSld"]["p:spTree"], t = {}, e = {}, s = {}; for (var o in r) if ("p:nvGrpSpPr" != o && "p:grpSpPr" != o) { var i = r[o]; if (i.constructor === Array) for (var l = 0; l < i.length; l++) { var n = Y(c = i[l]["p:nvSpPr"], ["p:cNvPr", "attrs", "id"]), d = Y(c, ["p:nvPr", "p:ph", "attrs", "idx"]), h = Y(c, ["p:nvPr", "p:ph", "attrs", "type"]); void 0 !== n && (t[n] = i[l]), void 0 !== d && (e[d] = i[l]), void 0 !== h && (s[h] = i[l]) } else { var c; n = Y(c = i["p:nvSpPr"], ["p:cNvPr", "attrs", "id"]), d = Y(c, ["p:nvPr", "p:ph", "attrs", "idx"]), h = Y(c, ["p:nvPr", "p:ph", "attrs", "type"]); void 0 !== n && (t[n] = i), void 0 !== d && (e[d] = i), void 0 !== h && (s[h] = i) } } return { idTable: t, idxTable: e, typeTable: s } } function g(a, r, t) { var e = ""; switch (a) { case "p:sp": e = b(r, t); break; case "p:cxnSp": e = function (a, r) { var t = a["p:nvCxnSpPr"]["p:cNvPr"].attrs.id, e = a["p:nvCxnSpPr"]["p:cNvPr"].attrs.name, s = a.attrs.order; return M(a, void 0, void 0, t, e, void 0, void 0, s, r) }(r, t); break; case "p:pic": e = function (a, r) { var t = "", e = !1, s = a.attrs.order, o = a["p:blipFill"]["a:blip"].attrs["r:embed"], i = r.slideResObj[o].target, l = la(i).toLowerCase(), n = r.zip, d = n.file(i).asArrayBuffer(), h = "", c = a["p:spPr"]["a:xfrm"], p = 0, u = Y(a, ["p:spPr", "a:xfrm", "attrs", "rot"]); void 0 !== u && (p = Z(u)); var L, v, m, g, b, M, k, y = Y(a, ["p:nvPicPr", "p:nvPr", "a:videoFile"]), w = !1, I = f.mediaProcess; void 0 !== y & I && (L = y.attrs["r:link"], v = r.slideResObj[L].target, b = n.file(v).asArrayBuffer(), "mp4" != (m = la(v).toLowerCase()) && "webm" != m && "ogg" != m || (g = $(m), M = new Blob([b], { type: g }), k = URL.createObjectURL(M), w = !0, e = !0)); var P, C, D, G, S, j, z, T = Y(a, ["p:nvPicPr", "p:nvPr", "a:audioFile"]), A = !1; if (void 0 !== T & I && (P = T.attrs["r:link"], C = r.slideResObj[P].target, "mp3" == (D = la(C).toLowerCase()) || "wav" == D || "ogg" == D)) { G = n.file(C).asArrayBuffer(), S = new Blob([G]), j = URL.createObjectURL(S); var R = 20 * parseInt(c["a:ext"].attrs.cx), B = c["a:ext"].attrs.cy, N = parseInt(c["a:off"].attrs.x) / 2.5, O = c["a:off"].attrs.y; z = { "a:ext": { attrs: { cx: R, cy: B } }, "a:off": { attrs: { x: N, y: O } } }, A = !0, w = !0, e = !0 } h = $(l), t = "<div class='block content' style='" + _(I && A ? z : c, void 0, void 0) + x(I && A ? z : c, void 0, void 0) + " z-index: " + s + ";transform: rotate(" + p + "deg);'>", void 0 === y && void 0 === T || !I || !w ? t += "<img src='data:" + h + ";base64," + ia(d) + "' style='width: 100%; height: 100%'/>" : (void 0 !== y || void 0 !== T) && I && w && (void 0 !== y && (t += "<video  src='" + k + "' controls style='width: 100%; height: 100%'>Your browser does not support the video tag.</video>"), void 0 !== T && (t += '<audio id="audio_player" controls ><source src="' + j + '"></audio>')); !w && e && (t += "<span style='color:red;font-size:40px;position: absolute;'>This media file Not supported by HTML5</span>"); void 0 === y && void 0 === T || I || !w || console.log("Founded supported media file but media process disabled (mediaProcess=false)"); return t += "</div>" }(r, t); break; case "p:graphicFrame": e = function (a, r) { var t = ""; switch (Y(a, ["a:graphic", "a:graphicData", "attrs", "uri"])) { case "http://schemas.openxmlformats.org/drawingml/2006/table": t = function (a, r) { var t = a.attrs.order, e = Y(a, ["a:graphic", "a:graphicData", "a:tbl"]), s = Y(a, ["p:xfrm"]), o = Y(a, ["a:graphic", "a:graphicData", "a:tbl", "a:tblPr"]), i = Y(a, ["a:graphic", "a:graphicData", "a:tbl", "a:tblGrid", "a:gridCol"]), l = ""; if (void 0 !== o) { var n = o.attrs.rtl; l = 1 == n ? "dir=rtl" : "dir=ltr" } var d = o.attrs.firstRow, h = (o.attrs.firstCol, o.attrs.lastRow, o.attrs.lastCol, o.attrs.bandRow), c = (o.attrs.bandCol, "<table " + l + " style='border-collapse: collapse;" + _(s, void 0, void 0) + x(s, void 0, void 0) + " z-index: " + t + ";'>"), p = e["a:tr"]; if (p.constructor === Array) for (var f = 0; f < p.length; f++) { var u, L = p[f].attrs.h, v = 0, m = ""; void 0 !== L && (v = 96 * parseInt(L) / 914400, m += "height:" + v + "px;"); var g = o["a:tableStyleId"]; if (void 0 !== g) { var b = tableStyles["a:tblStyleLst"]["a:tblStyle"]; if (b.constructor === Array) for (var M = 0; M < b.length; M++)b[M].attrs.styleId == g && (u = b[M]); else b.attrs.styleId == g && (u = b) } if (0 == f && void 0 !== d) { var k = "fff", y = 1; if (void 0 !== u["a:firstRow"]) { var I = Y(u, ["a:firstRow", "a:tcStyle", "a:fill", "a:solidFill"]); void 0 !== I && (k = q(I), y = Q(I)); var P = Y(u, ["a:firstRow", "a:tcStyle", "a:tcBdr"]); if (void 0 !== P) { var C = z(P); m += C } Y(u, ["a:firstRow", "a:tcTxStyle"]) } m += " background-color:#" + k + "; opacity:" + y + ";" } else if (f > 0 && void 0 !== h) { var k = "fff", y = 1; if (f % 2 == 0) { if (void 0 !== u["a:band2H"]) { var I = Y(u, ["a:band2H", "a:tcStyle", "a:fill", "a:solidFill"]); void 0 !== I && (k = q(I), y = Q(I)); var P = Y(u, ["a:band2H", "a:tcStyle", "a:tcBdr"]); if (void 0 !== P) { var C = z(P); m += C } Y(u, ["a:band2H", "a:tcTxStyle"]) } } else if (void 0 !== u["a:band1H"]) { var I = Y(u, ["a:band1H", "a:tcStyle", "a:fill", "a:solidFill"]); void 0 !== I && (k = q(I), y = Q(I)); var P = Y(u, ["a:band1H", "a:tcStyle", "a:tcBdr"]); if (void 0 !== P) { var C = z(P); m += C } Y(u, ["a:band1H", "a:tcTxStyle"]) } m += " background-color:#" + k + "; opacity:" + y + ";" } c += "<tr style='" + m + "'>"; var D = p[f]["a:tc"]; if (D.constructor === Array) for (var G = 0; G < D.length; G++) { var S = w(D[G]["a:txBody"], a, void 0, void 0, void 0, r), j = Y(D[G], ["attrs", "rowSpan"]), T = Y(D[G], ["attrs", "gridSpan"]), A = Y(D[G], ["attrs", "vMerge"]), R = Y(D[G], ["attrs", "hMerge"]), B = i[G].attrs.w, N = ""; if (void 0 !== B) { var O = 96 * parseInt(B) / 914400; N += "width:" + O + "px;" } var F = D[G]["a:tcPr"]["a:solidFill"], k = "", y = 1; if (void 0 !== F) k = q(F), y = Q(F); else { var g = o["a:tableStyleId"]; if (void 0 !== g) for (var b = tableStyles["a:tblStyleLst"]["a:tblStyle"], M = 0; M < b.length; M++)b[M].attrs.styleId } "" != k && (N += " background-color:#" + k + ";", N += " opacity" + y + ";"), void 0 !== j ? c += "<td rowspan='" + parseInt(j) + "' style='" + N + "'>" + S + "</td>" : void 0 !== T ? c += "<td colspan='" + parseInt(T) + "' style='" + N + "'>" + S + "</td>" : void 0 === A && void 0 === R && (c += "<td style='" + N + "'>" + S + "</td>") } else { var S = w(D["a:txBody"]), B = i[0].attrs.w, N = ""; if (void 0 !== B) { var O = 96 * parseInt(B) / 914400; N += "width:" + O + "px;" } var F = D["a:tcPr"]["a:solidFill"], k = "", y = 1; void 0 !== F && (k = q(F), y = Q(F)), "" != k && (N += " background-color:#" + k + ";", N += " opacity" + y + ";"), c += "<td style='" + N + "'>" + S + "</td>" } c += "</tr>" } else { var L = p.attrs.h, v = 0; void 0 !== L ? (v = 96 * parseInt(L) / 914400, c += "<tr style='height:" + v + "px;'>") : c += "<tr>"; var D = p["a:tc"]; if (D.constructor === Array) for (var G = 0; G < D.length; G++) { var S = w(D[G]["a:txBody"]), B = i[G].attrs.w, N = ""; if (void 0 !== B) { var O = 96 * parseInt(B) / 914400; N += "width:" + O + "px;" } var F = D[G]["a:tcPr"]["a:solidFill"], k = "", y = 1; void 0 !== F && (k = q(F), y = Q(F)), "" != k && (N += " background-color:#" + k + ";", N += " opacity" + y + ";"), c += "<td style='" + N + "'>" + S + "</td>" } else { var S = w(D["a:txBody"]), B = i[0].attrs.w, N = ""; if (void 0 !== B) { var O = 96 * parseInt(B) / 914400; N += "width:" + O + "px;" } var F = D[G]["a:tcPr"]["a:solidFill"], k = "", y = 1; void 0 !== F && (k = q(F), y = Q(F)), "" != k && (N += " background-color:#" + k + ";", N += " opacity" + y + ";"), c += "<td style='" + N + "'>" + S + "</td>" } c += "</tr>" } return c }(a, r); break; case "http://schemas.openxmlformats.org/drawingml/2006/chart": t = function (a, r) { var t = a.attrs.order, e = Y(a, ["p:xfrm"]), s = "<div id='chart" + d + "' class='block content' style='" + _(e, void 0, void 0) + x(e, void 0, void 0) + " z-index: " + t + ";'></div>", o = a["a:graphic"]["a:graphicData"]["c:chart"].attrs["r:id"], l = r.slideResObj[o].target, n = Y(L(r.zip, l), ["c:chartSpace", "c:chart", "c:plotArea"]), h = null; for (var c in n) switch (c) { case "c:lineChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "lineChart", chartData: V(n[c]["c:ser"]) } }; break; case "c:barChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "barChart", chartData: V(n[c]["c:ser"]) } }; break; case "c:pieChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "pieChart", chartData: V(n[c]["c:ser"]) } }; break; case "c:pie3DChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "pie3DChart", chartData: V(n[c]["c:ser"]) } }; break; case "c:areaChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "areaChart", chartData: V(n[c]["c:ser"]) } }; break; case "c:scatterChart": h = { type: "createChart", data: { chartID: "chart" + d, chartType: "scatterChart", chartData: V(n[c]["c:ser"]) } } }null !== h && i.push(h); return d++, s }(a, r); break; case "http://schemas.openxmlformats.org/drawingml/2006/diagram": t = function (a, r) { a.attrs.order; var t = r.zip, e = Y(a, ["p:xfrm"]), s = Y(a, ["a:graphic", "a:graphicData", "dgm:relIds", "attrs"]), o = s["r:cs"], i = s["r:dm"], l = s["r:lo"], n = s["r:qs"], d = r.slideResObj[o].target, h = r.slideResObj[i].target, c = r.slideResObj[l].target; dgmQuickStyleFileName = r.slideResObj[n].target; L(t, d); var p = L(t, h), f = (L(t, c), L(t, dgmQuickStyleFileName), ""), u = Y(p, ["dgm:dataModel", "dgm:extLst", "a:ext", "dsp:dataModelExt", "attrs"]); if (void 0 !== u) { var v = u.relId; f = r.slideResObj[v].target } var m = ""; "" != f && (m = L(t, f)); var g = Y(m, ["dsp:drawing", "dsp:spTree", "dsp:sp"]), M = ""; if (void 0 !== g) for (var k = g.length, y = 0; y < k; y++) { var w = g[y], I = JSON.stringify(w), P = I.replace(/dsp:/g, "p:"), C = JSON.parse(P); M += b(C, r) } return "<div class='block content' style='" + _(e, void 0, void 0) + x(e, void 0, void 0) + "'>" + M + "</div>" }(a, r) }return t }(r, t); break; case "p:grpSp": e = function (a, r) { var t = 96 / 914400, e = a["p:grpSpPr"]["a:xfrm"], s = parseInt(e["a:off"].attrs.x) * t, o = parseInt(e["a:off"].attrs.y) * t, i = parseInt(e["a:chOff"].attrs.x) * t, l = parseInt(e["a:chOff"].attrs.y) * t, n = parseInt(e["a:ext"].attrs.cx) * t, d = parseInt(e["a:ext"].attrs.cy) * t, h = parseInt(e["a:chExt"].attrs.cx) * t, c = parseInt(e["a:chExt"].attrs.cy) * t, p = "<div class='block group' style='z-index: " + a.attrs.order + "; top: " + (o - l) + "px; left: " + (s - i) + "px; width: " + (n - h) + "px; height: " + (d - c) + "px;'>"; for (var f in a) if (a[f].constructor === Array) for (var u = 0; u < a[f].length; u++)p += g(f, a[f][u], r); else p += g(f, a[f], r); return p += "</div>" }(r, t); break; case "mc:AlternateContent": e = b(Y(r, ["mc:Fallback", "p:sp"]), t) }return e } function b(a, r) { var t = Y(a, ["p:nvSpPr", "p:cNvPr", "attrs", "id"]), e = Y(a, ["p:nvSpPr", "p:cNvPr", "attrs", "name"]), s = void 0 === Y(a, ["p:nvSpPr", "p:nvPr", "p:ph"]) ? void 0 : Y(a, ["p:nvSpPr", "p:nvPr", "p:ph", "attrs", "idx"]), o = void 0 === Y(a, ["p:nvSpPr", "p:nvPr", "p:ph"]) ? void 0 : Y(a, ["p:nvSpPr", "p:nvPr", "p:ph", "attrs", "type"]), i = Y(a, ["attrs", "order"]), l = void 0, n = void 0; return void 0 !== o ? (l = r.slideLayoutTables.typeTable[o], n = r.slideMasterTables.typeTable[o]) : void 0 !== s && (l = r.slideLayoutTables.idxTable[s], n = r.slideMasterTables.idxTable[s]), void 0 === o && void 0 === (o = Y(l, ["p:nvSpPr", "p:nvPr", "p:ph", "attrs", "type"])) && (o = Y(n, ["p:nvSpPr", "p:nvPr", "p:ph", "attrs", "type"])), M(a, l, n, t, e, s, o, i, r) } function M(a, r, t, e, s, o, i, l, n) { var d = ["p:spPr", "a:xfrm"], h = Y(a, d), c = Y(r, d), p = Y(t, d), f = "", u = Y(a, ["attrs", "order"]), L = Y(a, ["p:spPr", "a:prstGeom", "attrs", "prst"]), v = Y(a, ["p:spPr", "a:custGeom"]), m = !1; "1" !== Y(h, ["attrs", "flipV"]) && "1" !== Y(h, ["attrs", "flipH"]) || (m = !0); var g, b = Z(Y(h, ["attrs", "rot"])), M = Y(a, ["p:txXfrm"]); if (void 0 !== M) { var I = Y(M, ["attrs", "rot"]); void 0 !== I && (g = Z(I) + 90) } else g = b; if (void 0 !== L || void 0 !== v) { var P = Y(h, ["a:off", "attrs"]), C = (parseInt(P.x), parseInt(P.y), Y(h, ["a:ext", "attrs"])), D = 96 * parseInt(C.cx) / 914400, S = 96 * parseInt(C.cy) / 914400; f += "<svg class='drawing' _id='" + e + "' _idx='" + o + "' _type='" + i + "' _name='" + s + "' style='" + _(h, void 0, void 0) + x(h, void 0, void 0) + " z-index: " + l + ";transform: rotate(" + b + "deg);'>", f += "<defs>"; var j = N(a, !0, n), z = !1, A = !1, R = O(Y(a, ["p:spPr"])); if ("GRADIENT_FILL" == R) { z = !0; var B = j.color; f += function (a, r, t, e, s) { var o = function (a) { var r = ["0%", "100%"]; if (0 == a) return !0; for (var t = a; t--;) { var e = 100 - 100 / (a + 1) * (t + 1), s = e + "%"; r.splice(-1, 0, s) } return r }(e.length - 2), i = "", l = function (a, r, t) { var e = parseFloat(t), s = parseFloat(r), o = parseFloat(a), i = 2, l = 2, n = e / 2, d = s / 2, h = 2, c = 2, p = 2, f = 2, u = (o % 360 + 360) % 360, L = (360 - u) * Math.PI / 180, v = Math.tan(L), m = d - v * n; 0 == u ? (h = e, c = d, p = 0, f = d) : u < 90 ? (l = e, i = 0) : 90 == u ? (h = n, c = 0, p = n, f = s) : u < 180 ? (l = 0, i = 0) : 180 == u ? (h = 0, c = d, p = e, f = d) : u < 270 ? (l = 0, i = s) : 270 == u ? (h = n, c = s, p = n, f = 0) : (l = e, i = s); var g = i + l / v, h = 2 == h ? v * (g - m) / (Math.pow(v, 2) + 1) : h, c = 2 == c ? v * h + m : c, p = 2 == p ? e - h : p, f = 2 == f ? s - c : f, b = Math.round(p / e * 100 * 100) / 100, M = Math.round(f / s * 100 * 100) / 100, k = Math.round(h / e * 100 * 100) / 100, y = Math.round(c / s * 100 * 100) / 100; return [b, M, k, y] }(t, r, a), n = l[0], d = l[1], h = l[2], c = l[3], p = o.length, f = p < 20 ? 100 : 1e3; i += '<linearGradient id="linGrd_' + s + '"' + (' gradientUnits="userSpaceOnUse" x1="' + n + '%" y1="' + d + '%" x2="' + h + '%" y2="' + c + '%"') + ">\n"; for (var u = 0; u < p; u++)i += '<stop offset="' + Math.round(parseFloat(o[u]) / 100 * f) / f + '" stop-color="' + e[u] + '"', i += "/>\n"; return i += "</linearGradient>\n" }(D, S, j.rot, B, u) } else if ("PIC_FILL" == R) { A = !0, f += function (a, r) { var t = '<pattern id="imgPtrn_' + r + '"  patternContentUnits="objectBoundingBox"  width="1" height="1">'; return a = na(a), t += '<image  xlink:href="' + a + '" preserveAspectRatio="none" width="1" height="1"></image>', t += "</pattern>" }(j, u) } else "SOLID_FILL" == R || "PATTERN_FILL" == R || "arc" != L && "bracketPair" != L && "bracePair" != L && "leftBracket" != L && "leftBrace" != L && "rightBrace" != L && "rightBracket" != L || (j = "none"); var F = T(a, !0, "shape"), E = Y(a, ["p:spPr", "a:ln", "a:headEnd", "attrs"]), q = Y(a, ["p:spPr", "a:ln", "a:tailEnd", "attrs"]); if (void 0 !== E && ("triangle" === E.type || "arrow" === E.type) || void 0 !== q && ("triangle" === q.type || "arrow" === q.type)) f += "<marker id='markerTriangle_" + u + "' viewBox='0 0 10 10' refX='1' refY='5' markerWidth='5' markerHeight='5' stroke='" + F.color + "' fill='" + F.color + "' orient='auto-start-reverse' markerUnits='strokeWidth'><path d='M 0 0 L 10 5 L 0 10 z' /></marker>"; f += "</defs>" } if (void 0 !== L && void 0 === v) { switch (L) { case "rect": case "flowChartProcess": case "flowChartPredefinedProcess": case "flowChartInternalStorage": case "actionButtonBlank": f += "<rect x='0' y='0' width='" + D + "' height='" + S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", "flowChartPredefinedProcess" == L ? f += "<rect x='" + D * (1 / 8) + "' y='0' width='" + .75 * D + "' height='" + S + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />" : "flowChartInternalStorage" == L && (f += " <polyline points='" + D * (1 / 8) + " 0," + D * (1 / 8) + " " + S + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", f += " <polyline points='0 " + S * (1 / 8) + "," + D + " " + S * (1 / 8) + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"); break; case "flowChartCollate": f += "<path d='" + (ka = "M 0,0 L" + D + ",0 L0," + S + " L" + D + "," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartDocument": f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + (Ri = 17322 * S / 21600) + " C" + (ji = 10800 * D / 21600) + "," + Ri + " " + ji + "," + (Ni = 23922 * S / 21600) + " 0," + (Bi = 20172 * S / 21600) + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartMultidocument": f += "<path d='" + (ka = "M0," + (Bi = 3675 * S / 21600) + " L" + (ai = 18595 * D / 21600) + "," + Bi + " L" + ai + "," + (Ri = 18022 * S / 21600) + " C" + (Ti = 9298 * D / 21600) + "," + Ri + " " + Ti + "," + (Ni = 23542 * S / 21600) + " 0," + (st = 20782 * S / 21600) + " zM" + (ji = 1532 * D / 21600) + "," + Bi + " L" + ji + "," + (ut = 1815 * S / 21600) + " L" + (zi = 2e4 * D / 21600) + "," + ut + " L" + zi + "," + (mi = 16252 * S / 21600) + " C" + (ft = 19298 * D / 21600) + "," + mi + " " + ai + "," + (Go = 16352 * S / 21600) + " " + ai + "," + Go + "M" + (Ko = 2972 * D / 21600) + "," + ut + " L" + Ko + ",0 L" + D + ",0 L" + D + "," + (Do = 14392 * S / 21600) + " C" + ($o = 20800 * D / 21600) + "," + Do + " " + zi + "," + (ot = 14467 * S / 21600) + " " + zi + "," + ot) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonBackPrevious": var H = S / 2; f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + (Pe = (U = D / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + "," + H + " L" + (Ce = U + Si) + "," + (we = H - Si) + " L" + Ce + "," + (Ie = H + Si) + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonBeginning": H = S / 2; f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + (Se = (Pe = (U = D / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + (De = (_e = 3 * qe / 4) / 4)) + "," + H + " L" + (Ce = U + Si) + "," + (we = H - Si) + " L" + Ce + "," + (Ie = H + Si) + " zM" + (Ge = Pe + (xe = _e / 8)) + "," + we + " L" + Pe + "," + we + " L" + Pe + "," + Ie + " L" + Ge + "," + Ie + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonDocument": var U = D / 2; H = S / 2; Si = 3 * (qe = Math.min(D, S)) / 8, f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + (Pe = U - (Ui = 9 * qe / 32)) + "," + (we = H - Si) + " L" + (xe = (Ce = U + Ui) - (_e = 3 * qe / 16)) + "," + we + " L" + Ce + "," + (De = we + _e) + " L" + Ce + "," + (Ie = H + Si) + " L" + Pe + "," + Ie + " zM" + xe + "," + we + " L" + xe + "," + De + " L" + Ce + "," + De + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonEnd": H = S / 2; f += "<path d='" + (ka = "M0," + S + " L" + D + "," + S + " L" + D + ",0 L0,0 z M" + (Se = (Pe = (U = D / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + (De = 7 * (_e = 3 * qe / 4) / 8)) + "," + (we = H - Si) + " L" + (Ce = U + Si) + "," + we + " L" + Ce + "," + (Ie = H + Si) + " L" + Se + "," + Ie + " z M" + (Ge = Pe + (xe = 3 * _e / 4)) + "," + H + " L" + Pe + "," + we + " L" + Pe + "," + Ie + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonForwardNext": H = S / 2; f += "<path d='" + (ka = "M0," + S + " L" + D + "," + S + " L" + D + ",0 L0,0 z M" + (Ce = (U = D / 2) + (Si = 3 * (qe = Math.min(D, S)) / 8)) + "," + H + " L" + (Pe = U - Si) + "," + (we = H - Si) + " L" + Pe + "," + (Ie = H + Si) + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonHelp": U = D / 2; $ = (we = (H = S / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + (Ae = 17 * (_e = 3 * qe / 4) / 28), K = we + 21 * _e / 28, ca = _e / 14; var Q = (oa = (Pe = U - Si) + (ze = 3 * _e / 7)) + (xe = _e / 7), X = (aa = we + (Be = 11 * _e / 14)) + (pa = 3 * _e / 28), V = ((ia = Pe + (Te = 4 * _e / 7)) + oa + (Ge = 2 * _e / 7)) / 2; f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + (ta = Pe + (De = 3 * _e / 14)) + "," + (ga = we + Ge) + y(He = ta + Ge, ga, Ge, Ge, 180, 360, !1).replace("M", "L") + y(V, ga, xe, De, 0, 90, !1).replace("M", "L") + y(V, $, ca, pa, 270, 180, !1).replace("M", "L") + " L" + ia + "," + K + " L" + oa + "," + K + " L" + oa + "," + $ + y(Q, $, xe, De, 180, 270, !1).replace("M", "L") + y(ia, ga, ca, pa, 90, 0, !1).replace("M", "L") + y(He, ga, xe, xe, 0, -180, !1).replace("M", "L") + " zM" + U + "," + aa + y(U, X, pa, pa, 270, 630, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonHome": f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (U = D / 2) + "," + (we = (H = S / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + " L" + (Pe = U - Si) + "," + H + " L" + (J = Pe + (De = (_e = 3 * qe / 4) / 8)) + "," + H + " L" + J + "," + (Ie = H + Si) + " L" + (ta = Pe + 7 * _e / 8) + "," + Ie + " L" + ta + "," + H + " L" + (Ce = U + Si) + "," + H + " L" + (ra = Pe + (Re = 13 * _e / 16)) + "," + (Oe = we + (Se = 5 * _e / 16)) + " L" + ra + "," + (Be = we + (xe = _e / 16)) + " L" + (aa = Pe + (Te = 11 * _e / 16)) + "," + Be + " L" + aa + "," + (Ne = we + (Ge = 3 * _e / 16)) + " z M" + ($ = Pe + (je = 7 * _e / 16)) + "," + (ga = we + (Ae = 3 * _e / 4)) + " L" + (K = Pe + (ze = 9 * _e / 16)) + "," + ga + " L" + K + "," + Ie + " L" + $ + "," + Ie + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonInformation": U = D / 2; J = (we = (H = S / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + (Se = 5 * (_e = 3 * qe / 4) / 16), $ = we + (je = 3 * _e / 8), K = we + 13 * _e / 16, aa = we + (Be = 7 * _e / 8), ra = (Pe = U - Si) + Se, ea = Pe + (ze = 13 * _e / 32), sa = Pe + (Te = 19 * _e / 32), ia = Pe + (Re = 11 * _e / 16); var W = (Ne = we + (xe = _e / 32)) + (la = 3 * _e / 32); f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + U + "," + we + y(U, Ue = we + Si, Si, Si, 270, 630, !1).replace("M", "L") + " zM" + U + "," + Ne + y(U, W, la, la, 270, 630, !1).replace("M", "L") + "M" + ra + "," + J + " L" + sa + "," + J + " L" + sa + "," + K + " L" + ia + "," + K + " L" + ia + "," + aa + " L" + ra + "," + aa + " L" + ra + "," + K + " L" + ea + "," + K + " L" + ea + "," + $ + " L" + ra + "," + $ + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonMovie": var J, $, K, aa, ra, ta, ea, sa, oa, ia, la, da, ha, ca, pa, fa, ua, La, va, ma; U = D / 2; Ie = (H = S / 2) + (Si = 3 * (qe = Math.min(D, S)) / 8), (we = H - Si) + (aa = (Pe = U - Si) + (xe = 1455 * (_e = 3 * qe / 4) / 21600)), f += "<path d='" + (ka = "M0," + S + " L" + D + "," + S + " L" + D + ",0 L0,0 zM" + Pe + "," + (da = we + (Re = 5280 * _e / 21600)) + " L" + Pe + "," + (ua = we + (ga = 9555 * _e / 21600)) + " L" + aa + "," + ua + " L" + (ra = Pe + (De = 1905 * _e / 21600)) + "," + (fa = we + (Oe = 9067 * _e / 21600)) + " L" + (ta = Pe + (Ge = 2325 * _e / 21600)) + "," + fa + " L" + ta + "," + (ma = we + (K = 15592 * _e / 21600)) + " L" + (sa = Pe + (je = 17010 * _e / 21600)) + "," + ma + " L" + sa + "," + (La = we + (J = 13342 * _e / 21600)) + " L" + (oa = Pe + (ze = 19335 * _e / 21600)) + "," + La + " L" + (la = Pe + (Ae = 20595 * _e / 21600)) + "," + (va = we + ($ = 14580 * _e / 21600)) + " L" + (Ce = U + Si) + "," + va + " L" + Ce + "," + (ca = we + (Be = 6630 * _e / 21600)) + " L" + la + "," + ca + " L" + (ia = Pe + (Te = 19725 * _e / 21600)) + "," + (pa = we + (Ne = 7492 * _e / 21600)) + " L" + sa + "," + pa + " L" + sa + "," + ca + " L" + (ea = Pe + (Se = 16155 * _e / 21600)) + "," + (ha = we + 5730 * _e / 21600) + " L" + ra + "," + ha + " L" + aa + "," + da + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonReturn": var ga; H = S / 2; Re = (Pe = (U = D / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + (xe = 7 * (_e = 3 * qe / 4) / 8), Ne = Pe + (Se = 3 * _e / 8), Oe = Pe + (je = _e / 4); W = (ze = (we = H - Si) + (De = 3 * _e / 4)) - (ga = _e / 8); var ba = Pe + Se, Ma = (Ie = H + Si) - Se; f += "<path d='" + (ka = "M0," + S + " L" + D + "," + S + " L" + D + ",0 L0,0 z M" + (Ce = U + Si) + "," + (Ae = we + je) + " L" + (Pe + De) + "," + we + " L" + U + "," + Ae + " L" + (Be = Pe + (Ge = 5 * _e / 8)) + "," + Ae + " L" + Be + "," + (Te = we + Ge) + y(He = Be - ga, Te, ga, ga, 0, 90, !1).replace("M", "L") + " L" + Ne + "," + ze + y(Ne, W, ga, ga, 90, 180, !1).replace("M", "L") + " L" + Oe + "," + Ae + " L" + Pe + "," + Ae + " L" + Pe + "," + Te + y(ba, Te, Se, Se, 180, 90, !1).replace("M", "L") + " L" + U + "," + Ie + y(U, Ma, Se, Se, 90, 0, !1).replace("M", "L") + " L" + Re + "," + Ae + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "actionButtonSound": H = S / 2; f += "<path d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (Pe = (U = D / 2) - (Si = 3 * (qe = Math.min(D, S)) / 8)) + "," + (Ae = (we = H - Si) + (De = 5 * (_e = 3 * qe / 4) / 16)) + " L" + (Be = Pe + De) + "," + Ae + " L" + (Ne = Pe + (Ge = 5 * _e / 8)) + "," + we + " L" + Ne + "," + (Ie = H + Si) + " L" + Be + "," + (Re = we + (Se = 11 * _e / 16)) + " L" + Pe + "," + Re + " z M" + (Oe = Pe + (je = 3 * _e / 4)) + "," + Ae + " L" + (Ce = U + Si) + "," + (Te = we + (xe = _e / 8)) + " M" + Oe + "," + H + " L" + Ce + "," + H + " M" + Oe + "," + Re + " L" + Ce + "," + (we + (ze = 7 * _e / 8))) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "irregularSeal1": case "irregularSeal2": if ("irregularSeal1" == L) var ka = "M" + 10800 * D / 21600 + "," + 5800 * S / 21600 + " L" + 14522 * D / 21600 + ",0 L" + 14155 * D / 21600 + "," + 5325 * S / 21600 + " L" + 18380 * D / 21600 + "," + 4457 * S / 21600 + " L" + 16702 * D / 21600 + "," + 7315 * S / 21600 + " L" + 21097 * D / 21600 + "," + 8137 * S / 21600 + " L" + 17607 * D / 21600 + "," + 10475 * S / 21600 + " L" + D + "," + 13290 * S / 21600 + " L" + 16837 * D / 21600 + "," + 12942 * S / 21600 + " L" + 18145 * D / 21600 + "," + 18095 * S / 21600 + " L" + 14020 * D / 21600 + "," + 14457 * S / 21600 + " L" + 13247 * D / 21600 + "," + 19737 * S / 21600 + " L" + 10532 * D / 21600 + "," + 14935 * S / 21600 + " L" + 8485 * D / 21600 + "," + S + " L" + 7715 * D / 21600 + "," + 15627 * S / 21600 + " L" + 4762 * D / 21600 + "," + 17617 * S / 21600 + " L" + 5667 * D / 21600 + "," + 13937 * S / 21600 + " L" + 135 * D / 21600 + "," + 14587 * S / 21600 + " L" + 3722 * D / 21600 + "," + 11775 * S / 21600 + " L0," + 8615 * S / 21600 + " L" + 4627 * D / 21600 + "," + 7617 * S / 21600 + " L" + 370 * D / 21600 + "," + 2295 * S / 21600 + " L" + 7312 * D / 21600 + "," + 6320 * S / 21600 + " L" + 8352 * D / 21600 + "," + 2295 * S / 21600 + " z"; else if ("irregularSeal2" == L) ka = "M" + 11462 * D / 21600 + "," + 4342 * S / 21600 + " L" + 14790 * D / 21600 + ",0 L" + 14525 * D / 21600 + "," + 5777 * S / 21600 + " L" + 18007 * D / 21600 + "," + 3172 * S / 21600 + " L" + 16380 * D / 21600 + "," + 6532 * S / 21600 + " L" + D + "," + 6645 * S / 21600 + " L" + 16985 * D / 21600 + "," + 9402 * S / 21600 + " L" + 18270 * D / 21600 + "," + 11290 * S / 21600 + " L" + 16380 * D / 21600 + "," + 12310 * S / 21600 + " L" + 18877 * D / 21600 + "," + 15632 * S / 21600 + " L" + 14640 * D / 21600 + "," + 14350 * S / 21600 + " L" + 14942 * D / 21600 + "," + 17370 * S / 21600 + " L" + 12180 * D / 21600 + "," + 15935 * S / 21600 + " L" + 11612 * D / 21600 + "," + 18842 * S / 21600 + " L" + 9872 * D / 21600 + "," + 17370 * S / 21600 + " L" + 8700 * D / 21600 + "," + 19712 * S / 21600 + " L" + 7527 * D / 21600 + "," + 18125 * S / 21600 + " L" + 4917 * D / 21600 + "," + S + " L" + 4805 * D / 21600 + "," + 18240 * S / 21600 + " L" + 1285 * D / 21600 + "," + 17825 * S / 21600 + " L" + 3330 * D / 21600 + "," + 15370 * S / 21600 + " L0," + 12877 * S / 21600 + " L" + 3935 * D / 21600 + "," + 11592 * S / 21600 + " L" + 1172 * D / 21600 + "," + 8270 * S / 21600 + " L" + 5372 * D / 21600 + "," + 7817 * S / 21600 + " L" + 4502 * D / 21600 + "," + 3625 * S / 21600 + " L" + 8550 * D / 21600 + "," + 6382 * S / 21600 + " L" + 9722 * D / 21600 + "," + 1887 * S / 21600 + " z"; f += "<path d='" + ka + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartTerminator": var ya = 90; f += "<path d='" + (ka = "M" + (ji = 3475 * D / 21600) + ",0 L" + (zi = 18125 * D / 21600) + ",0" + y(zi, S / 2, ji, Ri = 10800 * S / 21600, Pa = 270, Pa + (Ia = 180), !1).replace("M", "L") + " L" + ji + "," + S + y(ji, S / 2, ji, Ri, ya, ya + Ia, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartPunchedTape": Bi = 18 * S / 20, f += "<path d='" + (ka = "M0," + (Ri = 2 * S / 20) + y(ji = 5 * D / 20, Ri, ji, Ri, Ia = 180, 0, !1).replace("M", "L") + y(.75 * D, Ri, ji, Ri, Ia, 360, !1).replace("M", "L") + " L" + D + "," + Bi + y(.75 * D, Bi, ji, Ri, 0, -Ia, !1).replace("M", "L") + y(ji, Bi, ji, Ri, 0, Ia, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartOnlineStorage": ya = 90; f += "<path d='" + (ka = "M" + (ji = 1 * D / 6) + ",0 L" + D + ",0" + y(D, S / 2, ji, Ri = 3 * S / 6, Pa = 270, 90, !1).replace("M", "L") + " L" + ji + "," + S + y(ji, S / 2, ji, Ri, ya, 270, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartDisplay": f += "<path d='" + (ka = "M0," + (Ri = 3 * S / 6) + " L" + (ji = 1 * D / 6) + ",0 L" + (zi = 5 * D / 6) + ",0" + y(D, S / 2, ji, Ri, Pa = 270, Pa + (Ia = 180), !1).replace("M", "L") + " L" + ji + "," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartDelay": ya = 90; f += "<path d='" + (ka = "M0,0 L" + (wa = D / 2) + ",0" + y(wa, Sa = S / 2, wa, Sa, Pa = 270, Pa + (Ia = 180), !1).replace("M", "L") + " L0," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "flowChartMagneticTape": var wa = D / 2, Ia = 180, Pa = 270; ya = 90; Ga = (Sa = S / 2) + (To = Sa * Math.sin(Math.PI / 4)); var Ca = 180 * Math.atan(S / D) / Math.PI; f += "<path d='" + (ka = "M" + wa + "," + S + y(wa, Sa, wa, Sa, ya, Ia, !1).replace("M", "L") + y(wa, Sa, wa, Sa, Ia, Pa, !1).replace("M", "L") + y(wa, Sa, wa, Sa, Pa, 360, !1).replace("M", "L") + y(wa, Sa, wa, Sa, 0, Ca, !1).replace("M", "L") + " L" + D + "," + Ga + " L" + D + "," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "ellipse": case "flowChartConnector": case "flowChartSummingJunction": case "flowChartOr": if (f += "<ellipse cx='" + D / 2 + "' cy='" + S / 2 + "' rx='" + D / 2 + "' ry='" + S / 2 + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", "flowChartOr" == L) f += " <polyline points='" + D / 2 + " 0," + D / 2 + " " + S + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", f += " <polyline points='0 " + S / 2 + "," + D + " " + S / 2 + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; else if ("flowChartSummingJunction" == L) { U = D / 2, H = S / 2, wa = D / 2; var _a, xa, Da, Ga, Sa = S / 2, ja = Math.PI / 4; f += " <polyline points='" + (_a = U - (o = wa * Math.cos(ja))) + " " + (Da = H - (To = Sa * Math.sin(ja))) + "," + (xa = U + o) + " " + (Ga = H + To) + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", f += " <polyline points='" + xa + " " + Da + "," + _a + " " + Ga + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />" } break; case "roundRect": case "round1Rect": case "round2DiagRect": case "round2SameRect": case "snip1Rect": case "snip2DiagRect": case "snip2SameRect": case "flowChartAlternateProcess": case "flowChartPunchedCard": var za, Ta; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"])) && Ji.constructor === Array) for (var Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = parseInt(tl.substr(4)) / 5e4) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 5e4) } else if (void 0 !== Ji && Ji.constructor !== Array) { var Ra = Y(Ji, ["attrs", "fmla"]); Na = parseInt(Ra.substr(4)) / 5e4, Oa = 0 } var Ba = ""; switch (L) { case "roundRect": case "flowChartAlternateProcess": za = "round", Ta = "cornrAll", void 0 === Na && (Na = .33334), Oa = 0; break; case "round1Rect": za = "round", Ta = "cornr1", void 0 === Na && (Na = .33334), Oa = 0; break; case "round2DiagRect": za = "round", Ta = "diag", void 0 === Na && (Na = .33334), void 0 === Oa && (Oa = 0); break; case "round2SameRect": za = "round", Ta = "cornr2", void 0 === Na && (Na = .33334), void 0 === Oa && (Oa = 0); break; case "snip1Rect": case "flowChartPunchedCard": za = "snip", Ta = "cornr1", void 0 === Na && (Na = .33334), Oa = 0, "flowChartPunchedCard" == L && (Ba = "transform='translate(" + D + ",0) scale(-1,1)'"); break; case "snip2DiagRect": za = "snip", Ta = "diag", void 0 === Na && (Na = 0), void 0 === Oa && (Oa = .33334); break; case "snip2SameRect": za = "snip", Ta = "cornr2", void 0 === Na && (Na = .33334), void 0 === Oa && (Oa = 0) }f += "<path " + Ba + "  d='" + (Xd = function (a, r, t, e, s, o) { var i, l, n, d, h; "cornr1" == o ? (i = 0, l = 0, n = 0, d = t) : "cornr2" == o ? (i = t, l = e, n = e, d = t) : "cornrAll" == o ? (i = t, l = t, n = t, d = t) : "diag" == o && (i = t, l = e, n = t, d = e); "round" == s ? h = "M0," + (r / 2 + r / 2 * (1 - l)) + " Q0," + r + " " + l * (a / 2) + "," + r + " L" + (a / 2 + a / 2 * (1 - n)) + "," + r + " Q" + a + "," + r + " " + a + "," + (r / 2 + r / 2 * (1 - n)) + "L" + a + "," + r / 2 * d + " Q" + a + ",0 " + (a / 2 + a / 2 * (1 - d)) + ",0 L" + a / 2 * i + ",0 Q0,0 0," + r / 2 * i + " z" : "snip" == s && (h = "M0," + i * (r / 2) + " L0," + (r / 2 + r / 2 * (1 - l)) + "L" + l * (a / 2) + "," + r + " L" + (a / 2 + a / 2 * (1 - n)) + "," + r + "L" + a + "," + (r / 2 + r / 2 * (1 - n)) + " L" + a + "," + d * (r / 2) + "L" + (a / 2 + a / 2 * (1 - d)) + ",0 L" + a / 2 * i + ",0 z"); return h }(D, S, Na, Oa, za, Ta)) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "snipRoundRect": var Na = .33334, Oa = .33334; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = parseInt(tl.substr(4)) / 5e4) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 5e4) } f += "<path   d='" + (Xd = "M0," + S + " L" + D + "," + S + " L" + D + "," + S / 2 * Oa + " L" + (D / 2 + D / 2 * (1 - Oa)) + ",0 L" + D / 2 * Na + ",0 Q0,0 0," + S / 2 * Na + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bentConnector2": ka = ""; f += "<path d='" + (ka = m ? "M 0 " + D + " L " + S + " " + D + " L " + S + " 0" : "M " + D + " 0 L " + D + " " + S + " L 0 " + S) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' fill='none' ", void 0 === E || "triangle" !== E.type && "arrow" !== E.type || (f += "marker-start='url(#markerTriangle_" + u + ")' "), void 0 === q || "triangle" !== q.type && "arrow" !== q.type || (f += "marker-end='url(#markerTriangle_" + u + ")' "), f += "/>"; break; case "rtTriangle": f += " <polygon points='0 0,0 " + S + "," + D + " " + S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "triangle": case "flowChartExtract": case "flowChartMerge": var Fa = .5; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Fa = 96 * parseInt(Ua.substr(4)) / 9144e3); Ba = ""; "flowChartMerge" == L && (Ba = "transform='rotate(180 " + D / 2 + "," + S / 2 + ")'"), f += " <polygon " + Ba + " points='" + D * Fa + " 0,0 " + S + "," + D + " " + S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "diamond": case "flowChartDecision": case "flowChartSort": f += " <polygon points='" + D / 2 + " 0,0 " + S / 2 + "," + D / 2 + " " + S + "," + D + " " + S / 2 + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />", "flowChartSort" == L && (f += " <polyline points='0 " + S / 2 + "," + D + " " + S / 2 + "' fill='none' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"); break; case "trapezoid": case "flowChartManualOperation": case "flowChartManualInput": var Ea = .2, qa = .7407; if (void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"]))) Ea = .5 * (96 * parseInt(Ua.substr(4)) / 9144e3) / qa; var Ha = 0; Ba = ""; "flowChartManualOperation" == L && (Ba = "transform='rotate(180 " + D / 2 + "," + S / 2 + ")'"), "flowChartManualInput" == L && (Ea = 0, Ha = S / 5), f += " <polygon " + Ba + " points='" + D * Ea + " " + Ha + ",0 " + S + "," + D + " " + S + "," + (1 - Ea) * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "parallelogram": case "flowChartInputOutput": Ea = .25; if (qa = D > S ? D / S : S / D, void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"]))) Ea = parseInt(Ua.substr(4)) / 1e5 / qa; f += " <polygon points='" + Ea * D + " 0,0 " + S + "," + (1 - Ea) * D + " " + S + "," + D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "pentagon": f += " <polygon points='" + .5 * D + " 0,0 " + .375 * S + "," + .15 * D + " " + S + "," + .85 * D + " " + S + "," + D + " " + .375 * S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "hexagon": case "flowChartPreparation": var Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"]), Qa = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Ya = 60 * Math.PI / 180; void 0 !== Ua && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); H = S / 2, Sa = S / 2; Tr = Xa * D / (qe = Math.min(D, S)), zi = D - (ji = qe * (Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa) / Va), f += "<path   d='" + (ka = "M0," + H + " L" + ji + "," + (Ri = H - (Gi = Sa * (11085120 / 914400) / Va * Math.sin(Ya))) + " L" + zi + "," + Ri + " L" + D + "," + H + " L" + zi + "," + (Bi = H + Gi) + " L" + ji + "," + Bi + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "heptagon": f += " <polygon points='" + .5 * D + " 0," + D / 8 + " " + S / 4 + ",0 " + 5 / 8 * S + "," + D / 4 + " " + S + "," + .75 * D + " " + S + "," + D + " " + 5 / 8 * S + "," + 7 / 8 * D + " " + S / 4 + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "octagon": var Wa = .25; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = parseInt(Ua.substr(4)) / 1e5), f += " <polygon points='" + Wa * D + " 0,0 " + Wa * S + ",0 " + (gr = 1 - Wa) * S + "," + Wa * D + " " + S + "," + gr * D + " " + S + "," + D + " " + gr * S + "," + D + " " + Wa * S + "," + gr * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "decagon": f += " <polygon points='" + 3 / 8 * D + " 0," + D / 8 + " " + S / 8 + ",0 " + S / 2 + "," + D / 8 + " " + 7 / 8 * S + "," + 3 / 8 * D + " " + S + "," + 5 / 8 * D + " " + S + "," + 7 / 8 * D + " " + 7 / 8 * S + "," + D + " " + S / 2 + "," + 7 / 8 * D + " " + S / 8 + "," + 5 / 8 * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "dodecagon": f += " <polygon points='" + 3 / 8 * D + " 0," + D / 8 + " " + S / 8 + ",0 " + 3 / 8 * S + ",0 " + 5 / 8 * S + "," + D / 8 + " " + 7 / 8 * S + "," + 3 / 8 * D + " " + S + "," + 5 / 8 * D + " " + S + "," + 7 / 8 * D + " " + 7 / 8 * S + "," + D + " " + 5 / 8 * S + "," + D + " " + 3 / 8 * S + "," + 7 / 8 * D + " " + S / 8 + "," + 5 / 8 * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "star4": case "star5": case "star6": case "star7": case "star8": case "star10": case "star12": case "star16": case "star24": case "star32": Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]); var Ja = L.substr(4); switch (Ja) { case "4": Qa = 30; break; case "5": Qa = 40; break; case "6": Qa = 60; break; case "7": Qa = 70; break; case "8": Qa = 77; break; case "10": Qa = 86; break; case "12": case "16": case "24": case "32": Qa = 75 }void 0 !== Ua && (void 0 === ($a = Y(Ua, ["attrs", "fmla"])) && ($a = Ua[0].attrs.fmla), void 0 !== $a && (Qa = 2 * parseInt($a.substr(4)) / 1e3)), f += " <polygon points='" + function (a, r) { for (var t = a, e = r, s = Math.max(t, 100), o = Math.PI / e, i = [], l = 0; l < 2 * e; l++) { var n = 1 & l ? t : 100; i.push(s + n * Math.sin(l * o)), i.push(s - n * Math.cos(l * o)) } return i }(Qa, Ja) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "pie": case "pieWedge": case "arc": var Za, $a, Ka, ar; "pie" == L ? (Wa = 0, gr = 270, Za = S, ar = !0) : "pieWedge" == L ? (Wa = 180, gr = 270, Za = 2 * S, ar = !0) : "arc" == L && (Wa = 270, gr = 0, Za = S, ar = !1), void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"])) && (Ka = $a = Y(Ua, ["attrs", "fmla"]), void 0 === $a && ($a = Ua[0].attrs.fmla, Ka = Ua[1].attrs.fmla), void 0 !== $a && (Wa = parseInt($a.substr(4)) / 6e4), void 0 !== Ka && (gr = parseInt(Ka.substr(4)) / 6e4)); var rr = function (a, r, t, e, s) { var o = parseInt(e), i = parseInt(t), l = parseInt(a) / 2, n = o - i; n < 0 && (n = 360 + n); n = Math.min(Math.max(n, 0), 360); var d, h, c = Math.cos(2 * Math.PI / (360 / n)), p = Math.sin(2 * Math.PI / (360 / n)); if (s) d = "M" + l + "," + l + " L" + l + ",0 A" + l + "," + l + " 0 " + (n <= 180 ? 0 : 1) + ",1 " + (l + p * l) + "," + (l - c * l) + " z", h = "rotate(" + (i - 270) + ", " + l + ", " + l + ")"; else { var f = l, u = r / 2; d = "M" + f + ",0 A" + u + "," + f + " 0 " + (n <= 180 ? 0 : 1) + ",1 " + (u + p * u) + "," + (f - c * f), h = "rotate(" + (i + 90) + ", " + l + ", " + l + ")" } return [d, h] }(Za, D, Wa, gr, ar); f += "<path   d='" + rr[0] + "' transform='" + rr[1] + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "chord": Na = 45, Oa = 270; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = parseInt(tl.substr(4)) / 6e4) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 6e4) } f += "<path d='" + (Xd = y(ih = D / 2, oh = S / 2, ih, oh, Na, Oa, !0)) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "frame": Wa = 12e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = 96 * parseInt(Ua.substr(4)) / 914400), dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa, f += "<path   d='" + (ka = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " zM" + (ji = Math.min(D, S) * dl / Va) + "," + ji + " L" + ji + "," + (ut = S - ji) + " L" + (ft = D - ji) + "," + ut + " L" + ft + "," + ji + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "donut": Qa = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400), Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa, Pr = D / 2 - (Ir = Math.min(D, S) * Ai / Va), Cr = S / 2 - Ir, f += "<path   d='" + (ka = "M0," + S / 2 + y(D / 2, S / 2, D / 2, S / 2, 180, 270, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 270, 360, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 0, 90, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 90, 180, !1).replace("M", "L") + " zM" + Ir + "," + S / 2 + y(D / 2, S / 2, Pr, Cr, 180, 90, !1).replace("M", "L") + y(D / 2, S / 2, Pr, Cr, 90, 0, !1).replace("M", "L") + y(D / 2, S / 2, Pr, Cr, 0, -90, !1).replace("M", "L") + y(D / 2, S / 2, Pr, Cr, 270, 180, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "noSmoking": var tr, er, sr, or, ir, lr, nr, dr, hr; Qa = 18e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400), Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa, Pr = D / 2 - (Ir = Math.min(D, S) * Ai / Va), Cr = S / 2 - Ir, tr = Math.atan(S / D), er = Cr * Math.cos(tr), sr = Pr * Math.sin(tr), or = Pr * Cr / Math.sqrt(er * er + sr * sr), ir = Ir / 2, Fo = 2 * (lr = Math.atan(ir / or)), nh = -Math.PI + Fo, Uo = (Ke = tr - lr) - Math.PI, nr = Cr * Math.cos(Ke), dr = Pr * Math.sin(Ke), ji = D / 2 + (Ui = (hr = Pr * Cr / Math.sqrt(nr * nr + dr * dr)) * Math.cos(Ke)), Ri = S / 2 + (Gi = hr * Math.sin(Ke)), zi = D / 2 - Ui, Bi = S / 2 - Gi; var cr = 180 * Ke / Math.PI, pr = 180 * Uo / Math.PI, fr = 180 * nh / Math.PI; f += "<path   d='" + (ka = "M0," + S / 2 + y(D / 2, S / 2, D / 2, S / 2, 180, 270, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 270, 360, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 0, 90, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 90, 180, !1).replace("M", "L") + " zM" + ji + "," + Ri + y(D / 2, S / 2, Pr, Cr, cr, cr + fr, !1).replace("M", "L") + " zM" + zi + "," + Bi + y(D / 2, S / 2, Pr, Cr, pr, pr + fr, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "halfFrame": Na = 3.5, Oa = 3.5; var ur = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = 96 * parseInt(el.substr(4)) / 914400) } var Lr = ur * D / (Mo = Math.min(D, S)), vr = ur * (ge = S - (Hr = S * (ji = Mo * (ql = Oa < 0 ? 0 : Oa > Lr ? Lr : Oa) / ur) / D)) / Mo; f += "<path   d='" + (ka = "M0,0 L" + D + ",0 L" + (zi = D - (Si = (Ri = Mo * (dl = Na < 0 ? 0 : Na > vr ? vr : Na) / ur) * D / S)) + "," + Ri + " L" + ji + "," + Ri + " L" + ji + "," + (Bi = S - (Qi = ji * S / D)) + " L0," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "blockArc": Wa = 180; var mr, gr = 0, br = 24e5 / 914400; Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) / 6e4) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) / 6e4) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } Li = br < 0 ? 0 : br > Xa ? Xa : br; var Mr, kr, yr, wr, Ir, Pr, Cr, _r, xr, Dr = (lh = Wa < 0 ? 0 : Wa > 360 ? 360 : Wa) + (nh = (mr = (jd = gr < 0 ? 0 : gr > 360 ? 360 : gr) - lh) > 0 ? mr : mr + 360), Gr = jd + (zd = -nh); yr = lh * Math.PI / 180, wr = jd * Math.PI / 180, wa = D / 2, Sa = S / 2, U = D / 2, H = S / 2, lh > 90 && lh < 270 ? (Mr = wa * Math.sin(Math.PI / 2 - yr), kr = Sa * Math.cos(Math.PI / 2 - yr), ji = U - (Ui = wa * Math.cos(Math.atan(kr / Mr))), Ri = H - (Gi = Sa * Math.sin(Math.atan(kr / Mr)))) : (Mr = wa * Math.sin(yr), kr = Sa * Math.cos(yr), ji = U + (Ui = wa * Math.cos(Math.atan(Mr / kr))), Ri = H + (Gi = Sa * Math.sin(Math.atan(Mr / kr)))), Pr = wa - (Ir = Math.min(D, S) * Li / Va), Cr = Sa - Ir, Dr <= 450 && Dr > 270 || Dr >= 630 && Dr < 720 ? (_r = Pr * Math.sin(wr), xr = Cr * Math.cos(wr), zi = U + (Si = Pr * Math.cos(Math.atan(_r / xr))), Bi = H + (Qi = Cr * Math.sin(Math.atan(_r / xr)))) : (_r = Pr * Math.sin(Math.PI / 2 - wr), xr = Cr * Math.cos(Math.PI / 2 - wr), zi = U - (Si = Pr * Math.cos(Math.atan(xr / _r))), Bi = H - (Qi = Cr * Math.sin(Math.atan(xr / _r)))), f += "<path   d='" + (ka = "M" + ji + "," + Ri + y(wa, Sa, wa, Sa, lh, Dr, !1).replace("M", "L") + " L" + zi + "," + Bi + y(wa, Sa, Pr, Cr, jd, Gr, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bracePair": Qa = 799968 / 914400, Xa = 24e5 / 914400, Va = 48e5 / 914400; var Sr = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); H = S / 2; var jr = 360; Ia = 180, ya = 90, Pa = 270; Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa, Ti = D - (zi = (Mo = Math.min(D, S)) * Ai / Va), ft = D - (ji = Mo * Ai / Sr), Bi = H - ji, Ni = H + ji, f += "<path   d='" + (ka = "M" + zi + "," + S + y(zi, ut = S - ji, ji, ji, ya, Ia, !1).replace("M", "L") + " L" + ji + "," + Ni + y(0, Ni, ji, ji, 0, -ya, !1).replace("M", "L") + y(0, Bi, ji, ji, ya, 0, !1).replace("M", "L") + " L" + ji + "," + ji + y(zi, ji, ji, ji, Ia, Pa, !1).replace("M", "L") + " M" + Ti + ",0" + y(Ti, ji, ji, ji, Pa, jr, !1).replace("M", "L") + " L" + ft + "," + Bi + y(D, Bi, ji, ji, Ia, ya, !1).replace("M", "L") + y(D, Ni, ji, ji, Pa, Ia, !1).replace("M", "L") + " L" + ft + "," + ut + y(Ti, ut, ji, ji, 0, ya, !1).replace("M", "L")) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftBrace": Wa = 799968 / 914400, gr = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } H = S / 2, Ia = 180, ya = 90, Pa = 270, vr = (kn = (Mn = Va - (ql = gr < 0 ? 0 : gr > Va ? Va : gr)) < ql ? Mn : ql) / 2 * S / (Mo = Math.min(D, S)); Bi = (Ni = S * ql / Va) - (Ri = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Va), ut = Ni + Ri, f += "<path   d='" + (ka = "M" + D + "," + S + y(D, S - Ri, D / 2, Ri, ya, Ia, !1).replace("M", "L") + " L" + D / 2 + "," + ut + y(0, ut, D / 2, Ri, 0, -ya, !1).replace("M", "L") + y(0, Bi, D / 2, Ri, ya, 0, !1).replace("M", "L") + " L" + D / 2 + "," + Ri + y(D, Ri, D / 2, Ri, Ia, Pa, !1).replace("M", "L")) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "rightBrace": Wa = 799968 / 914400, gr = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } H = S / 2, jr = 360, Ia = 180, ya = 90, Pa = 270, vr = (kn = (Mn = Va - (ql = gr < 0 ? 0 : gr > Va ? Va : gr)) < ql ? Mn : ql) / 2 * S / (Mo = Math.min(D, S)); Bi = (Ni = S * ql / Va) - (Ri = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Va), ut = S - Ri, f += "<path   d='" + (ka = "M0,0" + y(0, Ri, D / 2, Ri, Pa, jr, !1).replace("M", "L") + " L" + D / 2 + "," + Bi + y(D, Bi, D / 2, Ri, Ia, ya, !1).replace("M", "L") + y(D, Ni + Ri, D / 2, Ri, Pa, Ia, !1).replace("M", "L") + " L" + D / 2 + "," + ut + y(0, ut, D / 2, Ri, 0, ya, !1).replace("M", "L")) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bracketPair": Qa = 1600032 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); var zr = S; Ia = 180, ya = 90, Pa = 270; Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa, zi = (Ar = D) - (ji = Math.min(D, S) * Ai / Va), Bi = zr - ji, f += "<path   d='" + (ka = y(ji, ji, ji, ji, Pa, Ia, !1) + y(ji, Bi, ji, ji, Ia, ya, !1).replace("M", "L") + y(zi, ji, ji, ji, Pa, Pa + ya, !1) + y(zi, Bi, ji, ji, 0, ya, !1).replace("M", "L")) + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftBracket": Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"]), Qa = 799968 / 914400, Va = 96e5 / 914400; var Tr = (Xa = 48e5 / 914400) * S / Math.min(D, S); void 0 !== Ua && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); var Ar = D; zr = S, Ia = 180, ya = 90, Pa = 270; Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa, (Ri = Math.min(D, S) * Ai / Va) > D && (Ri = D), f += "<path   d='" + (ka = "M" + Ar + "," + zr + y(Ri, Bi = zr - Ri, Ri, Ri, ya, Ia, !1).replace("M", "L") + " L0," + Ri + y(Ri, Ri, Ri, Ri, Ia, Pa, !1).replace("M", "L") + " L" + Ar + ",0") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "rightBracket": Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"]), Qa = 799968 / 914400, Va = 96e5 / 914400, Tr = (Xa = 48e5 / 914400) * S / Math.min(D, S); void 0 !== Ua && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); jr = 360, Ia = 180, ya = 90, Pa = 270; Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa, f += "<path   d='" + (ka = "M0," + S + y(Ni = D - (Ri = Math.min(D, S) * Ai / Va), Bi = S - Ri, Ri, Ri, ya, 0, !1).replace("M", "L") + " L" + D + "," + S / 2 + y(Ni, Ri, Ri, Ri, jr, Pa, !1).replace("M", "L") + " L0,0") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "moon": Qa = .5; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) / 1e5); gr = (1 - Qa) * D; f += "<path   d='" + (ka = "M" + D + "," + S + y(D, Sa = S / 2, D, Sa, ya = 90, ya + (Ia = 180), !1).replace("M", "L") + y(D, Sa, gr, Sa, ya + Ia, ya, !1).replace("M", "L") + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "corner": Na = 48e5 / 914400, Oa = 48e5 / 914400, ur = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = 96 * parseInt(el.substr(4)) / 914400) } vr = ur * S / (Mo = Math.min(D, S)), Lr = ur * D / Mo; f += "<path   d='" + (ka = "M0,0 L" + (ji = Mo * (ql = Oa < 0 ? 0 : Oa > Lr ? Lr : Oa) / ur) + ",0 L" + ji + "," + (Ri = S - (Gi = Mo * (dl = Na < 0 ? 0 : Na > vr ? vr : Na) / ur)) + " L" + D + "," + Ri + " L" + D + "," + S + " L0," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "diagStripe": Na = 48e5 / 914400, ur = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Na = 96 * parseInt(Ua.substr(4)) / 914400), f += "<path   d='" + (ka = "M0," + (Bi = S * (dl = Na < 0 ? 0 : Na > ur ? ur : Na) / ur) + " L" + (zi = D * dl / ur) + ",0 L" + D + ",0 L0," + S + " z") + "'  fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "gear6": case "gear9": g = 0; var Rr = L.substr(4); f += "<path   d='" + (ka = k(D, S / 3.5, parseInt(Rr))) + "' transform='rotate(20," + 3 / 7 * S + "," + 3 / 7 * S + ")' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bentConnector3": Fa = .5; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Fa = parseInt(Ua.substr(4)) / 1e5, f += m ? " <polyline points='" + D + " 0," + (1 - Fa) * D + " 0," + (1 - Fa) * D + " " + S + ",0 " + S + "' fill='transparent'' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' " : " <polyline points='0 0," + Fa * D + " 0," + Fa * D + " " + S + "," + D + " " + S + "' fill='transparent'' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' ", void 0 === E || "triangle" !== E.type && "arrow" !== E.type || (f += "marker-start='url(#markerTriangle_" + u + ")' "), void 0 === q || "triangle" !== q.type && "arrow" !== q.type || (f += "marker-end='url(#markerTriangle_" + u + ")' "), f += "/>"); break; case "plus": Wa = .25; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = parseInt(Ua.substr(4)) / 1e5), f += " <polygon points='" + Wa * D + " 0," + Wa * D + " " + Wa * S + ",0 " + Wa * S + ",0 " + (gr = 1 - Wa) * S + "," + Wa * D + " " + gr * S + "," + Wa * D + " " + S + "," + gr * D + " " + S + "," + gr * D + " " + gr * S + "," + D + " " + gr * S + "," + +D + " " + Wa * S + "," + gr * D + " " + Wa * S + "," + gr * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "teardrop": var Br, Nr, Or, Fr, Er = Wa = 96e5 / 914400, qr = 192e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = 96 * parseInt(Ua.substr(4)) / 914400), dl = Wa < 0 ? 0 : Wa > qr ? qr : Wa, Nr = (Br = Math.sqrt(2)) * (D / 2) * dl / Er, Or = (cl = Br * (S / 2)) * dl / Er, Fr = 45 * Math.PI / 180, zi = (D / 2 + (ji = D / 2 + (Ui = Nr * Math.cos(Fr)))) / 2, Bi = (S / 2 + (Ri = S / 2 - (Gi = Or * Math.cos(Fr)))) / 2, f += "<path   d='" + (Xd = y(D / 2, S / 2, D / 2, S / 2, 180, 270, !1) + "Q " + zi + ",0 " + ji + "," + Ri + "Q " + D + "," + Bi + " " + D + "," + S / 2 + y(D / 2, S / 2, D / 2, S / 2, 0, 90, !1).replace("M", "L") + y(D / 2, S / 2, D / 2, S / 2, 90, 180, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "plaque": Wa = 1600032 / 914400, Er = 48e5 / 914400, qr = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = 96 * parseInt(Ua.substr(4)) / 914400), zi = D - (ji = (dl = Wa < 0 ? 0 : Wa > Er ? Er : Wa) * Math.min(D, S) / qr), Bi = S - ji, f += "<path   d='" + (Xd = "M0," + ji + y(0, 0, ji, ji, 90, 0, !1).replace("M", "L") + " L" + zi + ",0" + y(D, 0, ji, ji, 180, 90, !1).replace("M", "L") + " L" + D + "," + Bi + y(D, S, ji, ji, 270, 180, !1).replace("M", "L") + " L" + ji + "," + S + y(0, S, ji, ji, 0, -90, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "sun": Wa = 25e3 * (Oi = 96 / 914400), Xa = 12500 * Oi, Va = 46875 * Oi; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Wa = parseInt(Ua.substr(4)) * Oi); var Hr, Ur = 5e4 * Oi, Qr = 1e5 * Oi, Xr = Ur - (dl = Wa < Xa ? Xa : Wa > Va ? Va : Wa), Vr = (Hr = Xr * (30274 * Oi) / (32768 * Oi)) + Ur, Yr = (ge = Xr * (12540 * Oi) / (32768 * Oi)) + Ur, Wr = D * (18436 * Oi) / (21600 * Oi), Jr = S * (3163 * Oi) / (21600 * Oi), Zr = D * (3163 * Oi) / (21600 * Oi), $r = S * (18436 * Oi) / (21600 * Oi), Kr = D * (ye = Ur + (ke = Xr * (23170 * Oi) / (32768 * Oi))) / Qr, at = D * (we = Ur - ke) / Qr, rt = D * (Ge = Qr - (Ce = (Ie = 3 * (be = Ur - Hr) / 4) + 3662 * Oi)) / Qr, tt = D * (Se = Qr - (_e = (Pe = 3 * (Me = Ur - ge) / 4) + 36620 * Oi)) / Qr, et = D * (je = Qr - (xe = Pe + 12500 * Oi)) / Qr, st = S * ye / Qr, ot = S * we / Qr, it = S * Ce / Qr, lt = S * _e / Qr, nt = S * xe / Qr, dt = S * (De = Qr - Ie) / Qr, ht = S * Ge / Qr, ct = S * Se / Qr, pt = S * je / Qr; f += "<path   d='" + (Xd = "M" + D + "," + S / 2 + " L" + (Hs = D * De / Qr) + "," + pt + " L" + Hs + "," + nt + "z M" + Wr + "," + Jr + " L" + rt + "," + ct + " L" + (Qs = D * _e / Qr) + "," + it + "z M" + D / 2 + ",0 L" + et + "," + (Lt = S * Ie / Qr) + " L" + (Xs = D * xe / Qr) + "," + Lt + "z M" + Zr + "," + Jr + " L" + tt + "," + it + " L" + (Us = D * Ce / Qr) + "," + ct + "z M0," + S / 2 + " L" + (Ys = D * Ie / Qr) + "," + nt + " L" + Ys + "," + pt + "z M" + Zr + "," + $r + " L" + Us + "," + lt + " L" + tt + "," + ht + "z M" + D / 2 + "," + S + " L" + Xs + "," + dt + " L" + et + "," + dt + "z M" + Wr + "," + $r + " L" + Qs + "," + ht + " L" + rt + "," + lt + " z M" + D * dl / Qr + "," + S / 2 + y(D / 2, S / 2, ih = D * Xr / Qr, oh = S * Xr / Qr, 180, 540, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "heart": f += "<path   d='" + (Xd = "M" + D / 2 + "," + S / 4 + "C" + (Ti = D / 2 + (Si = 10 * D / 48)) + "," + (Ri = -S / 3) + " " + (ft = D / 2 + (Ui = 49 * D / 48)) + "," + S / 4 + " " + D / 2 + "," + S + "C" + (ji = D / 2 - Ui) + "," + S / 4 + " " + (zi = D / 2 - Si) + "," + Ri + " " + D / 2 + "," + S / 4 + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "lightningBolt": var ft = 8757 * D / 21600, ut = (at = 13917 * D / 21600, 7437 * S / 21600), Lt = 14277 * S / 21600; f += "<path d='" + (Xd = "M" + (Ti = 8472 * D / 21600) + ",0 L" + (Kr = 12860 * D / 21600) + "," + (Bi = 6080 * S / 21600) + " L" + (zi = 11050 * D / 21600) + "," + (Ni = 6797 * S / 21600) + " L" + 16577 * D / 21600 + "," + (Do = 12007 * S / 21600) + " L" + (Ko = 14767 * D / 21600) + "," + (mi = 12877 * S / 21600) + " L" + D + "," + S + " L" + (ai = 10012 * D / 21600) + "," + 14915 * S / 21600 + " L" + ($o = 12222 * D / 21600) + "," + (st = 13987 * S / 21600) + " L" + (ji = 5022 * D / 21600) + "," + (Go = 9705 * S / 21600) + " L" + (Ys = 7602 * D / 21600) + "," + (ot = 8382 * S / 21600) + " L0," + (Ri = 3890 * S / 21600) + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "cube": Qa = 25e3 * (Oi = 96 / 914400); void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) * Oi); Va = 1e5 * Oi; f += "<path d='" + (Xd = "M0," + (Ri = (qe = Math.min(D, S)) * (Ai = Qa < 0 ? 0 : Qa > Va ? Va : Qa) / Va) + " L" + Ri + ",0 L" + D + ",0 L" + D + "," + (ut = S - Ri) + " L" + (ft = D - Ri) + "," + S + " L0," + S + " zM0," + Ri + " L" + ft + "," + Ri + " M" + ft + "," + Ri + " L" + D + ",0M" + ft + "," + Ri + " L" + ft + "," + S) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bevel": Qa = 12500 * (Oi = 96 / 914400); void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) * Oi); Xa = 5e4 * Oi, Va = 1e5 * Oi; f += "<path d='" + (Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = (qe = Math.min(D, S)) * (Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa) / Va) + "," + ji + " L" + (zi = D - ji) + "," + ji + " L" + zi + "," + (Bi = S - ji) + " L" + ji + "," + Bi + " z M0,0 L" + ji + "," + ji + " M0," + S + " L" + ji + "," + Bi + " M" + D + ",0 L" + zi + "," + ji + " M" + D + "," + S + " L" + zi + "," + Bi) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "foldedCorner": Qa = 16667 * (Oi = 96 / 914400); void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) * Oi); Xa = 5e4 * Oi, Va = 1e5 * Oi; f += "<path d='" + (Xd = "M" + (ji = D - (Qi = (qe = Math.min(D, S)) * (Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa) / Va)) + "," + S + " L" + (zi = ji + (Gi = Qi / 5)) + "," + (Ri = (Bi = S - Qi) + Gi) + " L" + D + "," + Bi + " L" + ji + "," + S + " L0," + S + " L0,0 L" + D + ",0 L" + D + "," + Bi) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "cloud": case "cloudCallout": var vt, mt; ji = 4693 * D / 43200, zi = 6928 * D / 43200, Ti = 16478 * D / 43200, ft = 28827 * D / 43200, ai = 34129 * D / 43200, Ko = 41798 * D / 43200, $o = 38324 * D / 43200, Kr = 29078 * D / 43200, at = 22141 * D / 43200, Ys = 14e3 * D / 43200, 4127 * D / 43200, mt = 14370 * S / 43200, Ri = 26177 * S / 43200, Bi = 34899 * S / 43200, Ni = 39090 * S / 43200, ut = 34751 * S / 43200, mi = 22954 * S / 43200, Go = 15354 * S / 43200, Do = 5426 * S / 43200, st = 3952 * S / 43200, ot = 4720 * S / 43200, Lt = 5192 * S / 43200, 15789 * S / 43200; var gt, bt, Mt, kt, yt, wt, It, Pt, Ct, _t, xt, Dt, Gt, St, jt, zt, Tt, At, Rt, Bt, Nt = 6753 * D / 43200, Ot = 9190 * S / 43200, Ft = 5333 * D / 43200, Et = 7267 * S / 43200, qt = 4365 * D / 43200, Ht = 5945 * S / 43200, Ut = 4857 * D / 43200, Qt = 6595 * S / 43200, Xt = 7273 * S / 43200, Vt = 6775 * D / 43200, Yt = 9220 * S / 43200, Wt = 5785 * D / 43200, Jt = 7867 * S / 43200, Zt = 6752 * D / 43200, $t = 9215 * S / 43200, Kt = 7720 * D / 43200, ae = 10543 * S / 43200, re = 4360 * D / 43200, te = 5918 * S / 43200, ee = 4345 * D / 43200, se = -11429249 / 6e4, oe = -8646143 / 6e4, ie = -8748475 / 6e4, le = -7859164 / 6e4, ne = -4722533 / 6e4, de = -46.26725, he = 37501 / 6e4, ce = 22.4516, pe = 3974558 / 6e4, fe = -16496525 / 6e4, ue = -246.8285; xt = (gt = y((vt = 3900 * D / 43200) - Nt * Math.cos(se * Math.PI / 180), mt - Ot * Math.sin(se * Math.PI / 180), Nt, Ot, se, se + 7426832 / 6e4, !1).replace("M", "L")).substr(gt.lastIndexOf("L") + 1).split(" "), Dt = (bt = y(He = parseInt(xt[0]) - Ft * Math.cos(oe * Math.PI / 180), Ue = parseInt(xt[1]) - Et * Math.sin(oe * Math.PI / 180), Ft, Et, oe, -54.15715, !1).replace("M", "L")).substr(bt.lastIndexOf("L") + 1).split(" "), Gt = (Mt = y(Q = parseInt(Dt[0]) - qt * Math.cos(ie * Math.PI / 180), W = parseInt(Dt[1]) - Ht * Math.sin(ie * Math.PI / 180), qt, Ht, ie, ie + 5983381 / 6e4, !1).replace("M", "L")).substr(Mt.lastIndexOf("L") + 1).split(" "), St = (kt = y(ba = parseInt(Gt[0]) - Ut * Math.cos(le * Math.PI / 180), X = parseInt(Gt[1]) - Qt * Math.sin(le * Math.PI / 180), Ut, Qt, le, le + 7034504 / 6e4, !1).replace("M", "L")).substr(kt.lastIndexOf("L") + 1).split(" "), jt = (yt = y(V = parseInt(St[0]) - Ft * Math.cos(ne * Math.PI / 180), Ma = parseInt(St[1]) - Xt * Math.sin(ne * Math.PI / 180), Ft, Xt, ne, ne + 6541615 / 6e4, !1).replace("M", "L")).substr(yt.lastIndexOf("L") + 1).split(" "), zt = (wt = y(parseInt(jt[0]) - Vt * Math.cos(de * Math.PI / 180), parseInt(jt[1]) - Yt * Math.sin(de * Math.PI / 180), Vt, Yt, de, de + 130.269, !1).replace("M", "L")).substr(wt.lastIndexOf("L") + 1).split(" "), Tt = (It = y(parseInt(zt[0]) - Wt * Math.cos(he * Math.PI / 180), parseInt(zt[1]) - Jt * Math.sin(he * Math.PI / 180), Wt, Jt, he, 114.65835, !1).replace("M", "L")).substr(It.lastIndexOf("L") + 1).split(" "), At = (Pt = y(parseInt(Tt[0]) - Zt * Math.cos(ce * Math.PI / 180), parseInt(Tt[1]) - $t * Math.sin(ce * Math.PI / 180), Zt, $t, ce, 137.62415, !1).replace("M", "L")).substr(Pt.lastIndexOf("L") + 1).split(" "), Rt = (Ct = y(parseInt(At[0]) - Kt * Math.cos(pe * Math.PI / 180), parseInt(At[1]) - ae * Math.sin(pe * Math.PI / 180), Kt, ae, pe, pe + 4542661 / 6e4, !1).replace("M", "L")).substr(Ct.lastIndexOf("L") + 1).split(" "), Bt = (_t = y(parseInt(Rt[0]) - re * Math.cos(fe * Math.PI / 180), parseInt(Rt[1]) - te * Math.sin(fe * Math.PI / 180), re, te, fe, fe + 8804134 / 6e4, !1).replace("M", "L")).substr(_t.lastIndexOf("L") + 1).split(" "); var Le = "M" + vt + "," + mt + gt + bt + Mt + kt + yt + wt + It + Pt + Ct + _t + y(parseInt(Bt[0]) - ee * Math.cos(ue * Math.PI / 180), parseInt(Bt[1]) - Ht * Math.sin(ue * Math.PI / 180), ee, Ht, ue, -94.30965, !1).replace("M", "L") + " z"; if ("cloudCallout" == L) { Wa = -20833 * (Oi = 96 / 914400), gr = 62500 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) } Va = 1e5 * Oi; var ve, me, ge, be, Me, ke, ye, we, Ie, Pe, Ce, _e, xe, De, Ge, Se, je, ze, Te, Ae, Re, Be, Ne, Oe, Fe, Ee, qe = Math.min(D, S); ts = (wa = D / 2) + (as = D * Wa / Va), es = (Sa = S / 2) + (rs = S * gr / Va), ve = Sa * Math.cos(Math.atan(rs / as)), me = wa * Math.sin(Math.atan(rs / as)), ge = wa * Math.cos(Math.atan(me / ve)), Vr = Sa * Math.sin(Math.atan(me / ve)), Wa >= 0 ? (Yr = wa + ge, be = Sa + Vr) : (Yr = wa - ge, be = Sa - Vr), Me = Yr - ts, ke = be - es, Se = (De = (_e = (Pe = (Ie = (ye = Math.sqrt(Me * Me + ke * ke)) - (we = 6600 * qe / 21600)) / 3) + (Ce = 1800 * qe / 21600)) * ke / ye) + es, Be = (Re = (Te = (je = 4800 * qe / 21600) + (ze = 2 * Pe)) * ke / ye) + es, Fe = (Ge = (xe = _e * Me / ye) + ts) + (Ne = 1200 * qe / 21600), Ee = (Ae = Te * Me / ye) + ts + Ce, Le += Xd = y(ts + (Oe = 600 * qe / 21600) - Oe, es, Oe, Oe, 0, 360, !1) + " z M" + Fe + "," + Se + y(Fe - Ne, Se, Ne, Ne, 0, 360, !1).replace("M", "L") + " z M" + Ee + "," + Be + y(Ee - Ce, Be, Ce, Ce, 0, 360, !1).replace("M", "L") + " z" } f += "<path d='" + Le + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "smileyFace": Qa = 4653 * (Oi = 96 / 914400); void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) * Oi); Xa = 5e4 * Oi, Va = 1e5 * Oi, Sr = 4653 * Oi, qe = Math.min(D, S); wa = D / 2, Sa = S / 2, ji = 4969 * D / 21699, Ti = 13135 * D / 21600, ft = 16640 * D / 21600, Ri = 7570 * S / 21600, Bi = (Ni = 16515 * S / 21600) - (Qi = S * (Ai = Qa < -Sr ? -Sr : Qa > Sr ? Sr : Qa) / Va), mi = (ut = Ni + Qi) + (Xi = S * Ai / Xa), oh = 1125 * S / 21600; var He = (zi = 6215 * D / 21600) - (ih = 1125 * D / 21600) * Math.cos(Math.PI), Ue = Ri - oh * Math.sin(Math.PI); Q = Ti - ih * Math.cos(Math.PI); f += "<path d='" + (Xd = y(He, Ue, ih, oh, 180, 540, !1) + y(Q, Ue, ih, oh, 180, 540, !1) + " M" + ji + "," + Bi + " Q" + wa + "," + mi + " " + ft + "," + Bi + " Q" + wa + "," + mi + " " + ji + "," + Bi + " M0," + Sa + y(wa, Sa, wa, Sa, 180, 540, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "verticalScroll": case "horizontalScroll": Qa = 12500 * (Oi = 96 / 914400); void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = parseInt(Ua.substr(4)) * Oi); Xa = 25e3 * Oi, Va = 1e5 * Oi; var Qe, Xe, Ve, Ye = 0, We = 0; zr = S, Ar = D; if (Xe = (Qe = (qe = Math.min(D, S)) * (Ai = Qa < 0 ? 0 : Qa > Xa ? Xa : Qa) / Va) / 2, Ve = Qe / 4, "verticalScroll" == L) ft = Qe + Qe, $o = Ar - Xe, ai = (Ko = Ar - Qe) - Xe, ut = zr - Xe, Xd = "M" + Qe + "," + (Ni = zr - Qe) + " L" + Qe + "," + Xe + y(Ti = Qe + Xe, Xe, Xe, Xe, 180, 270, !1).replace("M", "L") + " L" + $o + "," + Ye + y($o, Xe, Xe, Xe, 270, 450, !1).replace("M", "L") + " L" + Ko + "," + Qe + " L" + Ko + "," + ut + y(ai, ut, Xe, Xe, 0, 90, !1).replace("M", "L") + " L" + Xe + "," + zr + y(Xe, ut, Xe, Xe, 90, 270, !1).replace("M", "L") + " z M" + Ti + "," + Ye + y(Ti, Xe, Xe, Xe, 270, 450, !1).replace("M", "L") + y(Ti, Ti / 2, Ve, Ve, 90, 270, !1).replace("M", "L") + " L" + ft + "," + Xe + " M" + Ko + "," + Qe + " L" + Ti + "," + Qe + " M" + Qe + "," + ut + y(Xe, ut, Xe, Xe, 0, 270, !1).replace("M", "L") + y(Xe, (ut + Ni) / 2, Ve, Ve, 270, 450, !1).replace("M", "L") + " z M" + Qe + "," + ut + " L" + Qe + "," + Ni; else if ("horizontalScroll" == L) { ut = Qe + Qe, Do = zr - Xe, mi = (Go = zr - Qe) - Xe, Ti = Ar - Qe, ft = Ar - Xe, Xd = "M" + We + "," + (Ni = Qe + Xe) + y(Xe, Ni, Xe, Xe, 180, 270, !1).replace("M", "L") + " L" + Ti + "," + Qe + " L" + Ti + "," + Xe + y(ft, Xe, Xe, Xe, 180, 360, !1).replace("M", "L") + " L" + Ar + "," + mi + y(ft, mi, Xe, Xe, 0, 90, !1).replace("M", "L") + " L" + Qe + "," + Go + " L" + Qe + "," + Do + y(Xe, Do, Xe, Xe, 0, 180, !1).replace("M", "L") + " zM" + ft + "," + Qe + y(ft, Xe, Xe, Xe, 90, -180, !1).replace("M", "L") + y((Ti + ft) / 2, Xe, Ve, Ve, 180, 0, !1).replace("M", "L") + " z M" + ft + "," + Qe + " L" + Ti + "," + Qe + " M" + Xe + "," + ut + " L" + Xe + "," + Ni + y(Ni / 2, Ni, Ve, Ve, 180, 360, !1).replace("M", "L") + y(Xe, Ni, Xe, Xe, 0, 180, !1).replace("M", "L") + " M" + Qe + "," + Ni + " L" + Qe + "," + Go } f += "<path d='" + Xd + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "wedgeEllipseCallout": Wa = -20833 * (Oi = 96 / 914400), gr = 62500 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) } var Je, Ze, $e, Ke; Xa = 96e5 / 914400, Ya = 11 * Math.PI / 180, qe = Math.min(D, S); ts = (U = D / 2) + (as = D * Wa / Xa), es = (H = S / 2) + (rs = S * gr / Xa), Je = as * S, Ze = rs * D, lh = ($e = Math.atan(Ze / Je)) + Ya, hl = $e - Ya, console.log("dxPos: ", as, "dyPos: ", rs), Ui = U * Math.cos(lh), Gi = H * Math.sin(lh), Si = U * Math.cos(hl), Qi = H * Math.sin(hl), as >= 0 ? (ji = U + Ui, Ri = H + Gi, zi = U + Si, Bi = H + Qi) : (ji = U - Ui, Ri = H - Gi, zi = U - Si, Bi = H - Qi), f += "<path d='" + (Xd = "M" + ji + "," + Ri + " L" + ts + "," + es + " L" + zi + "," + Bi + y(U, H, U, H, 0, 360, !0)) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "wedgeRectCallout": Wa = -20833 * (Oi = 96 / 914400), gr = 62500 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) } Ro = (ts = (U = D / 2) + (as = D * Wa / (Xa = 96e5 / 914400))) - U, xo = (es = (H = S / 2) + (rs = S * gr / Xa)) - H, ss = as * S / D, ji = D * (as > 0 ? 7 : 2) / 12, Ri = S * (rs > 0 ? 7 : 2) / 12, is = as > 0 ? 0 : ts, ns = rs > 0 ? ji : ts, hs = as > 0 ? ts : D, ps = rs > 0 ? ts : ji, us = as > 0 ? Ri : es, vs = rs > 0 ? 0 : es, gs = as > 0 ? es : Ri, Ms = rs > 0 ? es : S, f += "<path d='" + (Xd = "M0,0 L" + ji + ",0 L" + (ds = (os = Math.abs(rs) - Math.abs(ss)) > 0 ? ns : ji) + "," + (ms = os > 0 ? vs : 0) + " L" + (zi = D * (as > 0 ? 10 : 5) / 12) + ",0 L" + D + ",0 L" + D + "," + Ri + " L" + (cs = os > 0 ? D : hs) + "," + (bs = os > 0 ? Ri : gs) + " L" + D + "," + (Bi = S * (rs > 0 ? 10 : 5) / 12) + " L" + D + "," + S + " L" + zi + "," + S + " L" + (fs = os > 0 ? ps : ji) + "," + (ks = os > 0 ? Ms : S) + " L" + ji + "," + S + " L0," + S + " L0," + Bi + " L" + (ls = os > 0 ? 0 : is) + "," + (Ls = os > 0 ? Ri : us) + " L0," + Ri + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "wedgeRoundRectCallout": Wa = -20833 * (Oi = 96 / 914400), gr = 62500 * Oi, br = 16667 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4)) * Oi) } var as, rs, ts, es, ss, os, is, ls, ns, ds, hs, cs, ps, fs, us, Ls, vs, ms, gs, bs, Ms, ks; Xa = 96e5 / 914400, qe = Math.min(D, S); ts = (U = D / 2) + (as = D * Wa / Xa), es = (H = S / 2) + (rs = S * gr / Xa), ss = as * S / D, ji = D * (as > 0 ? 7 : 2) / 12, zi = D * (as > 0 ? 10 : 5) / 12, Ri = S * (rs > 0 ? 7 : 2) / 12, Bi = S * (rs > 0 ? 10 : 5) / 12, is = as > 0 ? 0 : ts, ls = (os = Math.abs(rs) - Math.abs(ss)) > 0 ? 0 : is, ns = rs > 0 ? ji : ts, ds = os > 0 ? ns : ji, hs = as > 0 ? ts : D, cs = os > 0 ? D : hs, ps = rs > 0 ? ts : ji, fs = os > 0 ? ps : ji, us = as > 0 ? Ri : es, Ls = os > 0 ? Ri : us, vs = rs > 0 ? 0 : es, ms = os > 0 ? vs : 0, gs = as > 0 ? es : Ri, bs = os > 0 ? Ri : gs, Ms = rs > 0 ? es : S, ks = os > 0 ? Ms : S, xl = D - (_l = qe * br / Xa), td = S - _l, f += "<path d='" + (Xd = "M0," + _l + y(_l, _l, _l, _l, 180, 270, !1).replace("M", "L") + " L" + ji + ",0 L" + ds + "," + ms + " L" + zi + ",0 L" + xl + ",0" + y(xl, _l, _l, _l, 270, 360, !1).replace("M", "L") + " L" + D + "," + Ri + " L" + cs + "," + bs + " L" + D + "," + Bi + " L" + D + "," + td + y(xl, td, _l, _l, 0, 90, !1).replace("M", "L") + " L" + zi + "," + S + " L" + fs + "," + ks + " L" + ji + "," + S + " L" + _l + "," + S + y(_l, td, _l, _l, 90, 180, !1).replace("M", "L") + " L0," + Bi + " L" + ls + "," + Ls + " L0," + Ri + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "accentBorderCallout1": case "accentBorderCallout2": case "accentBorderCallout3": case "borderCallout1": case "borderCallout2": case "borderCallout3": case "accentCallout1": case "accentCallout2": case "accentCallout3": case "callout1": case "callout2": case "callout3": Wa = 18750 * (Oi = 96 / 914400), gr = -8333 * Oi, br = 18750 * Oi; var ys, ws, Is, Ps = -16667 * Oi, Cs = 1e5 * Oi, _s = -16667 * Oi, xs = 112963 * Oi, Ds = -8333 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4)) * Oi) : "adj4" == ll ? (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = parseInt(ol.substr(4)) * Oi) : "adj5" == ll ? (il = Y(Ji[Aa], ["attrs", "fmla"]), Cs = parseInt(il.substr(4)) * Oi) : "adj6" == ll ? (ys = Y(Ji[Aa], ["attrs", "fmla"]), _s = parseInt(ys.substr(4)) * Oi) : "adj7" == ll ? (ws = Y(Ji[Aa], ["attrs", "fmla"]), xs = parseInt(ws.substr(4)) * Oi) : "adj8" == ll && (Is = Y(Ji[Aa], ["attrs", "fmla"]), Ds = parseInt(Is.substr(4)) * Oi) } Xa = 1e5 * Oi; var Gs = !0; switch (L) { case "borderCallout1": case "callout1": Gs = "borderCallout1" == L, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 112500 * Oi, Ps = -38333 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa); break; case "borderCallout2": case "callout2": Gs = "borderCallout2" == L, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 18750 * Oi, Ps = -16667 * Oi, Cs = 112500 * Oi, _s = -46667 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa) + " L" + (Ti = D * _s / Xa) + "," + (Ni = S * Cs / Xa) + " L" + zi + "," + Bi; break; case "borderCallout3": case "callout3": Gs = "borderCallout3" == L, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 18750 * Oi, Ps = -16667 * Oi, Cs = 1e5 * Oi, _s = -16667 * Oi, xs = 112963 * Oi, Ds = -8333 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa) + " L" + (Ti = D * _s / Xa) + "," + (Ni = S * Cs / Xa) + " L" + (ft = D * Ds / Xa) + "," + (ut = S * xs / Xa) + " L" + Ti + "," + Ni + " L" + zi + "," + Bi; break; case "accentBorderCallout1": case "accentCallout1": Gs = "accentBorderCallout1" == L, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 112500 * Oi, Ps = -38333 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa) + " M" + ji + ",0 L" + ji + "," + S; break; case "accentBorderCallout2": case "accentCallout2": Gs = "accentBorderCallout2" == L, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 18750 * Oi, Ps = -16667 * Oi, Cs = 112500 * Oi, _s = -46667 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa) + " L" + (Ti = D * _s / Xa) + "," + (Ni = S * Cs / Xa) + " L" + zi + "," + Bi + " M" + ji + ",0 L" + ji + "," + S; break; case "accentBorderCallout3": case "accentCallout3": Gs = "accentBorderCallout3" == L, Gs = !0, void 0 === Ji && (Wa = 18750 * Oi, gr = -8333 * Oi, br = 18750 * Oi, Ps = -16667 * Oi, Cs = 1e5 * Oi, _s = -16667 * Oi, xs = 112963 * Oi, Ds = -8333 * Oi), Xd = "M0,0 L" + D + ",0 L" + D + "," + S + " L0," + S + " z M" + (ji = D * gr / Xa) + "," + (Ri = S * Wa / Xa) + " L" + (zi = D * Ps / Xa) + "," + (Bi = S * br / Xa) + " L" + (Ti = D * _s / Xa) + "," + (Ni = S * Cs / Xa) + " L" + (ft = D * Ds / Xa) + "," + (ut = S * xs / Xa) + " L" + Ti + "," + Ni + " L" + zi + "," + Bi + " M" + ji + ",0 L" + ji + "," + S }console.log("shapType: ", L, ",isBorder:", Gs), f += "<path d='" + Xd + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftRightRibbon": Wa = 5e4 * (Oi = 96 / 914400), gr = 5e4 * Oi, br = 16667 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4)) * Oi) } Xa = 33333 * Oi, Sr = 2e5 * Oi; var Ss, js, zs, Ts, As, Rs, Bs, Ns, Os = 4e5 * Oi; vr = (Va = 1e5 * Oi) - (Li = br < 0 ? 0 : br > Xa ? Xa : br), Lr = Va * ((U = D / 2) - (Es = D / 32)) / (qe = Math.min(D, S)), ft = D - (ji = qe * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Va), js = (H = S / 2) + (Gi = S * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr) - (Qi = S * Li / -Sr), Ts = S - (zs = (Ss = H + Qi - Gi) + Gi), Rs = S - (As = 2 * zs), zi = U - Es, Ti = U + Es, Bi = (Ns = S - (Bs = As - Ss)) - (oh = Li * qe / Os), f += "<path d='" + (Xd = "M0," + zs + "L" + ji + ",0L" + ji + "," + Ss + "L" + U + "," + Ss + y(U, Ri = Ss + oh, Es, oh, 270, 450, !1).replace("M", "L") + y(U, Bi, Es, oh, 270, 90, !1).replace("M", "L") + "L" + ft + "," + Ns + "L" + ft + "," + Rs + "L" + D + "," + Ts + "L" + ft + "," + S + "L" + ft + "," + js + "L" + U + "," + js + y(U, js - oh, Es, oh, 90, 180, !1).replace("M", "L") + "L" + zi + "," + Bs + "L" + ji + "," + Bs + "L" + ji + "," + As + " zM" + Ti + "," + Ri + "L" + Ti + "," + Ns + "M" + zi + "," + Bi + "L" + zi + "," + Bs) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "ribbon": case "ribbon2": Wa = 1600032 / 914400, gr = 48e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } Va = 3199968 / 914400, Sr = 72e5 / 914400, Os = 96e5 / 914400, Ye = 0, We = 0, zr = S; if (Ys = (Ar = D) - (Fs = D / 8), Ti = (zi = (U = D / 2) - (Si = D * (ql = gr < (Xa = 24e5 / 914400) ? Xa : gr > Sr ? Sr : gr) / (Ws = 192e5 / 914400))) + (Es = D / 32), Kr = (at = U + Si) - Es, ft = (ai = zi + Fs) - Es, $o = (Ko = at - Fs) + Es, oh = S * (dl = Wa < 0 ? 0 : Wa > Va ? Va : Wa) / (Di = 384e5 / 914400), "ribbon2" == L) Bi = zr - (Qi = S * dl / Os), Go = zr - oh, Do = (Ri = zr - (Gi = S * dl / Ws)) - oh, Xd = "M" + We + "," + zr + " L" + Fs + "," + (Ni = ((ut = Ye + Qi) + zr) / 2) + " L" + We + "," + ut + " L" + zi + "," + ut + " L" + zi + "," + oh + y(Ti, oh, Es, oh, 180, 270, !1).replace("M", "L") + " L" + Kr + "," + Ye + y(Kr, oh, Es, oh, 270, 360, !1).replace("M", "L") + " L" + at + "," + ut + " L" + at + "," + ut + " L" + Ar + "," + ut + " L" + Ys + "," + Ni + " L" + Ar + "," + zr + " L" + $o + "," + zr + y($o, Go, Es, oh, 90, 270, !1).replace("M", "L") + " L" + Kr + "," + Ri + y(Kr, Do, Es, oh, 90, -90, !1).replace("M", "L") + " L" + Ti + "," + Bi + y(Ti, Do, Es, oh, 270, 90, !1).replace("M", "L") + " L" + ft + "," + Ri + y(ft, Go, Es, oh, 270, 450, !1).replace("M", "L") + " z M" + ai + "," + Bi + " L" + ai + "," + Go + "M" + Ko + "," + Go + " L" + Ko + "," + Bi + "M" + zi + "," + Do + " L" + zi + "," + ut + "M" + at + "," + ut + " L" + at + "," + Do; else if ("ribbon" == L) { Ri = S * dl / Ws, Ni = (ut = zr - (Bi = S * dl / Os)) / 2, mi = zr - oh, Go = Bi - oh, Xd = "M" + We + "," + Ye + " L" + ft + "," + Ye + y(ft, oh, Es, oh, 270, 450, !1).replace("M", "L") + " L" + Ti + "," + Ri + y(Ti, Go, Es, oh, 270, 90, !1).replace("M", "L") + " L" + Kr + "," + Bi + y(Kr, Go, Es, oh, 90, -90, !1).replace("M", "L") + " L" + $o + "," + Ri + y($o, oh, Es, oh, 90, 270, !1).replace("M", "L") + " L" + Ar + "," + Ye + " L" + Ys + "," + Ni + " L" + Ar + "," + ut + " L" + at + "," + ut + " L" + at + "," + mi + y(Kr, mi, Es, oh, 0, 90, !1).replace("M", "L") + " L" + Ti + "," + zr + y(Ti, mi, Es, oh, 90, 180, !1).replace("M", "L") + " L" + zi + "," + ut + " L" + We + "," + ut + " L" + Fs + "," + Ni + " z M" + ai + "," + oh + " L" + ai + "," + Bi + "M" + Ko + "," + Bi + " L" + Ko + "," + oh + "M" + zi + "," + ut + " L" + zi + "," + Go + "M" + at + "," + Go + " L" + at + "," + ut } f += "<path d='" + Xd + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "doubleWave": case "wave": Wa = "doubleWave" == L ? 6e5 / 914400 : 12e5 / 914400, gr = 0; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } Va = -96e4 / 914400, Sr = 48e5 / 914400, Os = 96e5 / 914400, U = D / 2, Ye = 0, We = 0, zr = S, Ar = D; var Fs = D / 8, Es = D / 32; if ("doubleWave" == L) { var qs, Hs, Us, Qs, Xs; Xa = 12e5 / 914400; Xd = "M" + (zi = We - (Si = (Vs = D * (ql = gr < Va ? Va : gr > Os ? Os : gr) / Sr) > 0 ? 0 : Vs)) + "," + (Ri = S * (dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa) / Os) + " C" + (Ti = zi + (wo = (Si + (Kr = Ar - (qs = Vs > 0 ? Vs : 0))) / 6)) + "," + (Bi = Ri - (Qi = 10 * Ri / 3)) + " " + (ft = zi + (no = (Si + Kr) / 3)) + "," + (Ni = Ri + Qi) + " " + (ai = (zi + Kr) / 2) + "," + Ri + " C" + (Ko = ai + wo) + "," + Bi + " " + ($o = (Ko + Kr) / 2) + "," + Ni + " " + Kr + "," + Ri + " L" + (Hs = Ar + Si) + "," + (ut = zr - Ri) + " C" + (Xs = ((Qs = (Us = ((at = We + qs) + Hs) / 2) + wo) + Hs) / 2) + "," + (Go = ut + Qi) + " " + Qs + "," + (mi = ut - Qi) + " " + Us + "," + ut + " C" + (at + no) + "," + Go + " " + (Ys = at + wo) + "," + mi + " " + at + "," + ut + " z" } else if ("wave" == L) { var Vs, Ys, Ws = 192e4 / 914400; Xd = "M" + (zi = We - (Si = (Vs = D * (ql = gr < Va ? Va : gr > Os ? Os : gr) / Sr) > 0 ? 0 : Vs)) + "," + (Ri = S * (dl = Wa < 0 ? 0 : Wa > Ws ? Ws : Wa) / Os) + " C" + (Ti = zi + (wo = (Si + (ai = Ar - (mo = Vs > 0 ? Vs : 0))) / 3)) + "," + (Bi = Ri - (Qi = 10 * Ri / 3)) + " " + (ft = (Ti + ai) / 2) + "," + (Ni = Ri + Qi) + " " + ai + "," + Ri + " L" + (Ys = Ar + Si) + "," + (ut = zr - Ri) + " C" + (Kr = (($o = (Ko = We + mo) + wo) + Ys) / 2) + "," + (Go = ut + Qi) + " " + $o + "," + (mi = ut - Qi) + " " + Ko + "," + ut + " z" } f += "<path d='" + Xd + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "ellipseRibbon": case "ellipseRibbon2": Wa = 24e5 / 914400, gr = 48e5 / 914400, br = 12e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } var Js, Zs, $s, Ks, ao, ro; Sr = 72e5 / 914400, Os = 96e5 / 914400, Ye = 0, We = 0; if (ft = (Ar = D) - (Ti = (zi = (U = D / 2) - (Si = D * (ql = gr < (Xa = 24e5 / 914400) ? Xa : gr > Sr ? Sr : gr) / (Ws = 192e5 / 914400))) + (Fs = D / 8)), ai = Ar - zi, Ko = Ar - Fs, kn = Ti - (Mn = Ti * Ti / D), Ks = Ar - ($s = Ti / 2), Xi = (Mn = S * (dl = Wa < 0 ? 0 : Wa > Os ? Os : Wa) / Os) - (Gi = S * (Li = br < (Js = 0 > (zn = dl - (Sn = (Gn = Os - dl) / 2)) ? 0 : zn) ? Js : br > dl ? dl : br) / Os), In = (Zs = 4 * Gi / D) * (wn = zi - zi * zi / D), oo = (zr = S) - Mn, Cn = 14 * Gi / 16, Dn = Zs * (ao = zi / 2), ro = Ar - ao, "ellipseRibbon" == L) Mn + Mn - (Do = (Ri = Zs * kn) + Xi), st = zr - Gi, Xd = "M" + We + "," + Ye + " Q" + $s + "," + (to = Zs * $s) + " " + Ti + "," + Ri + " L" + zi + "," + (Ni = In + Xi) + " Q" + U + "," + (so = (Pn = Gi + Xi - Ni + Gi) + Xi) + " " + ai + "," + Ni + " L" + ft + "," + Ri + " Q" + Ks + "," + to + " " + Ar + "," + Ye + " L" + Ko + "," + (Bi = (Cn + oo) / 2) + " L" + Ar + "," + oo + " Q" + ro + "," + (io = Dn + oo) + " " + ai + "," + (mi = In + oo) + " L" + ai + "," + (Go = Ni + oo) + " Q" + U + "," + (so + oo) + " " + zi + "," + Go + " L" + zi + "," + mi + " Q" + ao + "," + io + " " + We + "," + oo + " L" + Fs + "," + Bi + " zM" + zi + "," + mi + " L" + zi + "," + Ni + "M" + ai + "," + Ni + " L" + ai + "," + mi + "M" + Ti + "," + Ri + " L" + Ti + "," + Do + "M" + ft + "," + Do + " L" + ft + "," + Ri; else if ("ellipseRibbon2" == L) { var to, eo, so, oo, io; zr - (Mn + Mn - (Sl = (_l = Zs * kn) + Xi)), Xd = "M" + We + "," + zr + " L" + Fs + "," + (Bi = zr - (xl = (Cn + oo) / 2)) + " L" + We + "," + Mn + " Q" + ao + "," + (io = zr - (Dn + oo)) + " " + zi + "," + (mi = zr - (In + oo)) + " L" + zi + "," + (Go = zr - ((Dl = In + Xi) + oo)) + " Q" + U + "," + (zr - ((eo = (Pn = Gi + Xi - Dl + Gi) + Xi) + oo)) + " " + ai + "," + Go + " L" + ai + "," + mi + " Q" + ro + "," + io + " " + Ar + "," + Mn + " L" + Ko + "," + Bi + " L" + Ar + "," + zr + " Q" + Ks + "," + (to = zr - Zs * $s) + " " + ft + "," + (Ri = zr - _l) + " L" + ai + "," + (Ni = zr - Dl) + " Q" + U + "," + (so = zr - eo) + " " + zi + "," + Ni + " L" + Ti + "," + Ri + " Q" + $s + "," + to + " " + We + "," + zr + " zM" + zi + "," + Ni + " L" + zi + "," + mi + "M" + ai + "," + mi + " L" + ai + "," + Ni + "M" + Ti + "," + (Do = zr - Sl) + " L" + Ti + "," + Ri + "M" + ft + "," + Ri + " L" + ft + "," + Do } f += "<path d='" + Xd + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "line": case "straightConnector1": case "bentConnector4": case "bentConnector5": case "curvedConnector2": case "curvedConnector3": case "curvedConnector4": case "curvedConnector5": f += m ? "<line x1='" + D + "' y1='0' x2='0' y2='" + S + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' " : "<line x1='0' y1='0' x2='" + D + "' y2='" + S + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' ", void 0 === E || "triangle" !== E.type && "arrow" !== E.type || (f += "marker-start='url(#markerTriangle_" + u + ")' "), void 0 === q || "triangle" !== q.type && "arrow" !== q.type || (f += "marker-end='url(#markerTriangle_" + u + ")' "), f += "/>"; break; case "rightArrow": Na = .25, Oa = .5; var lo = D / S; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = .5 - parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = 1 - parseInt(el.substr(4)) / 1e5 / lo } } f += " <polygon points='" + D + " " + S / 2 + "," + Oa * D + " 0," + Oa * D + " " + Na * S + ",0 " + Na * S + ",0 " + (1 - Na) * S + "," + Oa * D + " " + (1 - Na) * S + ", " + Oa * D + " " + S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftArrow": Na = .25, Oa = .5, lo = D / S; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = .5 - parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 1e5 / lo } } f += " <polygon points='0 " + S / 2 + "," + Oa * D + " " + S + "," + Oa * D + " " + (1 - Na) * S + "," + D + " " + (1 - Na) * S + "," + D + " " + Na * S + "," + Oa * D + " " + Na * S + ", " + Oa * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "downArrow": case "flowChartOffpageConnector": Na = .25, Oa = .5, lo = S / D; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 1e5 / lo } } "flowChartOffpageConnector" == L && (Na = .5, Oa = .212), f += " <polygon points='" + (.5 - Na) * D + " 0," + (.5 - Na) * D + " " + (1 - Oa) * S + ",0 " + (1 - Oa) * S + "," + D / 2 + " " + S + "," + D + " " + (1 - Oa) * S + "," + (.5 + Na) * D + " " + (1 - Oa) * S + ", " + (.5 + Na) * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "upArrow": Na = .25, Oa = .5, lo = S / D; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 1e5 / lo } } f += " <polygon points='" + D / 2 + " 0,0 " + Oa * S + "," + (.5 - Na) * D + " " + Oa * S + "," + (.5 - Na) * D + " " + S + "," + (.5 + Na) * D + " " + S + "," + (.5 + Na) * D + " " + Oa * S + ", " + D + " " + Oa * S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftRightArrow": Na = .25, Oa = .25, lo = D / S; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = .5 - parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 1e5 / lo } } f += " <polygon points='0 " + S / 2 + "," + Oa * D + " " + S + "," + Oa * D + " " + (1 - Na) * S + "," + (1 - Oa) * D + " " + (1 - Na) * S + "," + (1 - Oa) * D + " " + S + "," + D + " " + S / 2 + ", " + (1 - Oa) * D + " 0," + (1 - Oa) * D + " " + Na * S + "," + Oa * D + " " + Na * S + "," + Oa * D + " 0' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "upDownArrow": Na = .25, Oa = .25, lo = S / D; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { if ("adj1" == (ll = Y(Ji[Aa], ["attrs", "name"]))) tl = Y(Ji[Aa], ["attrs", "fmla"]), Na = .5 - parseInt(tl.substr(4)) / 2e5; else if ("adj2" == ll) { el = Y(Ji[Aa], ["attrs", "fmla"]), Oa = parseInt(el.substr(4)) / 1e5 / lo } } f += " <polygon points='" + D / 2 + " 0,0 " + Oa * S + "," + Na * D + " " + Oa * S + "," + Na * D + " " + (1 - Oa) * S + ",0 " + (1 - Oa) * S + "," + D / 2 + " " + S + ", " + D + " " + (1 - Oa) * S + "," + (1 - Na) * D + " " + (1 - Oa) * S + "," + (1 - Na) * D + " " + Oa * S + "," + D + " " + Oa * S + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "quadArrow": Wa = 216e4 / 914400, gr = 216e4 / 914400, br = 216e4 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } U = D / 2; ui = (Mn = Va - (vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr))) / 2, f += "<path d='" + (Xd = "M0," + (H = S / 2) + " L" + (ji = (Mo = Math.min(D, S)) * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) + "," + (Bi = H - (Si = Mo * ql / Va)) + " L" + ji + "," + (Ni = H - (wo = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (Ti = U - wo) + "," + Ni + " L" + Ti + "," + ji + " L" + (zi = U - Si) + "," + ji + " L" + U + ",0 L" + (ai = U + Si) + "," + ji + " L" + (ft = U + wo) + "," + ji + " L" + ft + "," + Ni + " L" + (Ko = D - ji) + "," + Ni + " L" + Ko + "," + Bi + " L" + D + "," + H + " L" + Ko + "," + (mi = H + Si) + " L" + Ko + "," + (ut = H + wo) + " L" + ft + "," + ut + " L" + ft + "," + (Go = S - ji) + " L" + ai + "," + Go + " L" + U + "," + S + " L" + zi + "," + Go + " L" + Ti + "," + Go + " L" + Ti + "," + ut + " L" + ji + "," + ut + " L" + ji + "," + mi + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftRightUpArrow": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } H = S / 2, U = D / 2; ui = (Mn = Va - (vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr))) / 2, f += "<path d='" + (Xd = "M0," + (ut = S - (Si = (Mo = Math.min(D, S)) * ql / Va)) + " L" + (ji = Mo * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) + "," + (Bi = S - (Qi = Mo * ql / Xa)) + " L" + ji + "," + (Ni = ut - (wo = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (Ti = U - wo) + "," + Ni + " L" + Ti + "," + ji + " L" + (zi = U - Si) + "," + ji + " L" + U + ",0 L" + (ai = U + Si) + "," + ji + " L" + (ft = U + wo) + "," + ji + " L" + ft + "," + Ni + " L" + (Ko = D - ji) + "," + Ni + " L" + Ko + "," + Bi + " L" + D + "," + ut + " L" + Ko + "," + S + " L" + Ko + "," + (mi = ut + wo) + " L" + ji + "," + mi + " L" + ji + "," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftUpArrow": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } var no; H = S / 2, U = D / 2; ui = Va - (vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr)), f += "<path d='" + (Xd = "M0," + (ut = S - (no = (Mo = Math.min(D, S)) * ql / Va)) + " L" + (ji = Mo * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) + "," + (Bi = S - (Si = Mo * ql / Xa)) + " L" + ji + "," + (Ni = ut - (wo = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (Ti = (ft = D - no) - wo) + "," + Ni + " L" + Ti + "," + ji + " L" + (zi = D - Si) + "," + ji + " L" + ft + ",0 L" + D + "," + ji + " L" + (ai = ft + wo) + "," + ji + " L" + ai + "," + (mi = ut + wo) + " L" + ji + "," + mi + " L" + ji + "," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bentUpArrow": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } H = S / 2, U = D / 2; dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa, f += "<path d='" + (Xd = "M0," + (Bi = S - (Qi = (Mo = Math.min(D, S)) * dl / Va)) + " L" + (zi = (Ti = D - (wo = Mo * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr) / Va)) - (Si = Mo * dl / Sr)) + "," + Bi + " L" + zi + "," + (Ri = Mo * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) + " L" + (ji = D - (Ui = Mo * ql / Xa)) + "," + Ri + " L" + Ti + ",0 L" + D + "," + Ri + " L" + (ft = Ti + Si) + "," + Ri + " L" + ft + "," + S + " L0," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "bentArrow": var ho; Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 42e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr), ko = Va * ((fo = D - (Ao = (Mo = Math.min(D, S)) * (Li = br < 0 ? 0 : br > Xa ? Xa : br) / Va)) < (ho = S - (po = (No = Mo * ql / Va) - (fl = (cl = Mo * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Va) / 2))) ? fo : ho) / Mo, Ti = cl + (vo = (Lo = (uo = Mo * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va) - cl) > 0 ? Lo : 0), ft = D - Ao, ut = (Ni = po + cl) + po, Go = Ni + vo, f += "<path d='" + (Xd = "M0," + S + " L0," + (mi = po + uo) + y(uo, mi, uo, uo, 180, 270, !1).replace("M", "L") + " L" + ft + "," + po + " L" + ft + ",0 L" + D + "," + No + " L" + ft + "," + ut + " L" + ft + "," + Ni + " L" + Ti + "," + Ni + y(Ti, Go, vo, vo, 270, 180, !1).replace("M", "L") + " L" + cl + "," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "uturnArrow": var co, po, fo, uo, Lo, vo; Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 42e5 / 914400, Cs = 72e5 / 914400, Xa = 24e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll ? (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) : "adj5" == ll && (il = Y(Ji[Aa], ["attrs", "fmla"]), Cs = 96 * parseInt(il.substr(4)) / 914400) } vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr), ui = (Va - (kn = (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) * (Mo = Math.min(D, S)) / S)) * S / Mo, ko = Va * ((fo = (at = D - (po = (No = Mo * ql / Va) - (fl = (cl = Mo * dl / Va) / 2))) / 2) < (ut = (mi = S * (nl = Cs < (co = (Mn = (Li = br < 0 ? 0 : br > ui ? ui : br) + dl) * Mo / S) ? co : Cs > Va ? Va : Cs) / Va) - (Ao = Mo * Li / Va)) ? fo : ut) / Mo, Ti = cl + (vo = (Lo = (uo = Mo * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va) - cl) > 0 ? Lo : 0), ft = at - uo, ai = ($o = (Ko = (Kr = D - No) - No) + po) - vo, cx = (cl + $o) / 2; f += "<path d='" + (Xd = "M0," + S + " L0," + uo + y(uo, uo, uo, uo, 180, 270, !1).replace("M", "L") + " L" + ft + ",0" + y(ft, uo, uo, uo, 270, 360, !1).replace("M", "L") + " L" + at + "," + ut + " L" + D + "," + ut + " L" + Kr + "," + mi + " L" + Ko + "," + ut + " L" + $o + "," + ut + " L" + $o + "," + Ti + y(ai, Ti, vo, vo, 0, -90, !1).replace("M", "L") + " L" + Ti + "," + cl + y(Ti, Ti, vo, vo, 270, 180, !1).replace("M", "L") + " L" + cl + "," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "stripedRightArrow": Wa = 48e5 / 914400, gr = 48e5 / 914400, Xa = 96e5 / 914400, Va = 192e5 / 914400, Sr = 81e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } var mo; H = S / 2; Lr = Sr * D / (Mo = Math.min(D, S)); var go = Mo / 16, bo = Mo / 32; f += "<path d='" + (Xd = "M0," + (Ri = H - (Gi = S * (dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa) / Va)) + " L" + bo + "," + Ri + " L" + bo + "," + (Bi = H + Gi) + " L0," + Bi + " z M" + go + "," + Ri + " L" + (Fi = Mo / 8) + "," + Ri + " L" + Fi + "," + Bi + " L" + go + "," + Bi + " z M" + (ft = 5 * Mo / 32) + "," + Ri + " L" + (ai = D - (mo = Mo * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Xa)) + "," + Ri + " L" + ai + ",0 L" + D + "," + H + " L" + ai + "," + S + " L" + ai + "," + Bi + " L" + ft + "," + Bi + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "notchedRightArrow": Wa = 48e5 / 914400, gr = 48e5 / 914400, Xa = 96e5 / 914400, Va = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) } Sa = H = S / 2; Lr = Xa * D / (Mo = Math.min(D, S)), f += "<path d='" + (Xd = "M0," + (Ri = H - (Gi = S * (dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa) / Va)) + " L" + (zi = D - (Si = Mo * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Xa)) + "," + Ri + " L" + zi + ",0 L" + D + "," + H + " L" + zi + "," + S + " L" + zi + "," + (Bi = H + Gi) + " L0," + Bi + " L" + (ji = Gi * Si / Sa) + "," + H + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "homePlate": Qa = 48e5 / 914400, Xa = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); H = S / 2; Tr = Xa * D / (Mo = Math.min(D, S)), f += "<path  d='" + (Xd = "M0,0 L" + (ji = D - (Ui = Mo * (Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa) / Xa)) + ",0 L" + D + "," + H + " L" + ji + "," + S + " L0," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "chevron": Qa = 48e5 / 914400, Xa = 96e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400); var Mo; H = S / 2; Tr = Xa * D / (Mo = Math.min(D, S)), f += "<path d='" + (Xd = "M0,0 L" + (zi = D - (ji = Mo * (Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa) / Xa)) + ",0 L" + D + "," + H + " L" + zi + "," + S + " L0," + S + " L" + ji + "," + H + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "rightArrowCallout": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 6237792 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } H = S / 2, Ar = D, zr = S, We = 0, Ye = 0; Lr = Xa * S / (qe = Math.min(D, S)), vr = 2 * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr), ui = Va * D / qe, ko = Ha - (kn = (Li = br < 0 ? 0 : br > ui ? ui : br) * qe / D), ji = (zi = D * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va) / 2, f += "<path d='" + (Xd = "M" + We + "," + Ye + " L" + zi + "," + Ye + " L" + zi + "," + (Bi = H - (Qi = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (Ti = Ar - (wo = qe * Li / Va)) + "," + Bi + " L" + Ti + "," + (Ri = H - (Gi = qe * ql / Va)) + " L" + Ar + "," + H + " L" + Ti + "," + (ut = H + Gi) + " L" + Ti + "," + (Ni = H + Qi) + " L" + zi + "," + Ni + " L" + zi + "," + zr + " L" + We + "," + zr + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "downArrowCallout": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 6237792 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } U = D / 2, Ar = D, zr = S, We = 0, Ye = 0; Lr = Xa * D / (qe = Math.min(D, S)), vr = 2 * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr), ui = Va * S / qe, ko = Va - (kn = (Li = br < 0 ? 0 : br > ui ? ui : br) * qe / S), Ri = (Bi = S * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va) / 2, f += "<path d='" + (Xd = "M" + We + "," + Ye + " L" + Ar + "," + Ye + " L" + Ar + "," + Bi + " L" + (Ti = U + (Si = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + "," + Bi + " L" + Ti + "," + (Ni = zr - (Xi = qe * Li / Va)) + " L" + (ft = U + (Ui = qe * ql / Va)) + "," + Ni + " L" + U + "," + zr + " L" + (ji = U - Ui) + "," + Ni + " L" + (zi = U - Si) + "," + Ni + " L" + zi + "," + Bi + " L" + We + "," + Bi + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftArrowCallout": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 6237792 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } H = S / 2, Ar = D, zr = S, We = 0, Ye = 0; Lr = Xa * S / (qe = Math.min(D, S)), vr = 2 * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr), ui = Va * D / qe, ko = Va - (kn = (Li = br < 0 ? 0 : br > ui ? ui : br) * qe / D), Ti = ((zi = Ar - (Si = D * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va)) + Ar) / 2, f += "<path d='" + (Xd = "M" + We + "," + H + " L" + (ji = qe * Li / Va) + "," + (Ri = H - (Gi = qe * ql / Va)) + " L" + ji + "," + (Bi = H - (Qi = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + zi + "," + Bi + " L" + zi + "," + Ye + " L" + Ar + "," + Ye + " L" + Ar + "," + zr + " L" + zi + "," + zr + " L" + zi + "," + (Ni = H + Qi) + " L" + ji + "," + Ni + " L" + ji + "," + (ut = H + Gi) + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "upArrowCallout": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 6237792 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } U = D / 2, Ar = D, zr = S, We = 0, Ye = 0; Lr = Xa * D / (qe = Math.min(D, S)), vr = 2 * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr), ui = Va * S / qe, ko = Va - (kn = (Li = br < 0 ? 0 : br > ui ? ui : br) * qe / S), Ni = ((Bi = zr - (Qi = S * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Va)) + zr) / 2, f += "<path d='" + (Xd = "M" + We + "," + Bi + " L" + (zi = U - (Si = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + "," + Bi + " L" + zi + "," + (Ri = qe * Li / Va) + " L" + (ji = U - (Ui = qe * ql / Va)) + "," + Ri + " L" + U + "," + Ye + " L" + (ft = U + Ui) + "," + Ri + " L" + (Ti = U + Si) + "," + Ri + " L" + Ti + "," + Bi + " L" + Ar + "," + Bi + " L" + Ar + "," + zr + " L" + We + "," + zr + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftRightArrowCallout": Wa = 24e5 / 914400, gr = 24e5 / 914400, br = 24e5 / 914400, Ps = 4619808 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } H = S / 2, U = D / 2, Ar = D, zr = S, We = 0, Ye = 0; Lr = Xa * S / (qe = Math.min(D, S)), vr = 2 * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr), ui = Xa * D / qe, ko = Va - (kn = (Li = br < 0 ? 0 : br > ui ? ui : br) * qe / wa), f += "<path d='" + (Xd = "M" + We + "," + H + " L" + (ji = qe * Li / Va) + "," + (Ri = H - (Gi = qe * ql / Va)) + " L" + ji + "," + (Bi = H - (Qi = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (zi = U - (Si = D * (yo = Ps < 0 ? 0 : Ps > ko ? ko : Ps) / Sr)) + "," + Bi + " L" + zi + "," + Ye + " L" + (Ti = U + Si) + "," + Ye + " L" + Ti + "," + Bi + " L" + (ft = Ar - ji) + "," + Bi + " L" + ft + "," + Ri + " L" + Ar + "," + H + " L" + ft + "," + (ut = H + Gi) + " L" + ft + "," + (Ni = H + Qi) + " L" + Ti + "," + Ni + " L" + Ti + "," + zr + " L" + zi + "," + zr + " L" + zi + "," + Ni + " L" + ji + "," + Ni + " L" + ji + "," + ut + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "quadArrowCallout": Wa = 1777440 / 914400, gr = 1777440 / 914400, br = 1777440 / 914400, Ps = 4619808 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) : "adj4" == ll && (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = 96 * parseInt(ol.substr(4)) / 914400) } var ko, yo, wo; U = D / 2, Ar = D, zr = S, Ye = 0; vr = 2 * (ql = gr < 0 ? 0 : gr > Xa ? Xa : gr), ui = Xa - ql, ko = Va - (kn = 2 * (Li = br < 0 ? 0 : br > ui ? ui : br)), f += "<path d='" + (Xd = "M" + (We = 0) + "," + (H = S / 2) + " L" + (Ao = (qe = Math.min(D, S)) * Li / Va) + "," + (Ni = H - (Si = qe * ql / Va)) + " L" + Ao + "," + (ut = H - (wo = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Sr)) + " L" + (zi = U - (Ui = D * (yo = Ps < dl ? dl : Ps > ko ? ko : Ps) / Sr)) + "," + ut + " L" + zi + "," + (Bi = H - (Gi = S * yo / Sr)) + " L" + (ft = U - wo) + "," + Bi + " L" + ft + "," + Ao + " L" + (Ti = U - Si) + "," + Ao + " L" + U + "," + Ye + " L" + (Ko = U + Si) + "," + Ao + " L" + (ai = U + wo) + "," + Ao + " L" + ai + "," + Bi + " L" + ($o = U + Ui) + "," + Bi + " L" + $o + "," + ut + " L" + (Kr = Ar - Ao) + "," + ut + " L" + Kr + "," + Ni + " L" + Ar + "," + H + " L" + Kr + "," + (Go = H + Si) + " L" + Kr + "," + (mi = H + wo) + " L" + $o + "," + mi + " L" + $o + "," + (Do = H + Gi) + " L" + ai + "," + Do + " L" + ai + "," + (st = zr - Ao) + " L" + Ko + "," + st + " L" + U + "," + zr + " L" + Ti + "," + st + " L" + ft + "," + st + " L" + ft + "," + Do + " L" + zi + "," + Do + " L" + zi + "," + mi + " L" + Ao + "," + mi + " L" + Ao + "," + Go + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "curvedDownArrow": Wa = 24e5 / 914400, gr = 48e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } H = S / 2, U = D / 2, wa = D / 2, Ar = D, zr = S, We = 0, Ye = 0, Pa = 270, Ia = 180, ya = 90; Lr = Xa * D / (qe = Math.min(D, S)), Gn = (Cn = (Pn = 2 * (ih = wa - (Mn = ((cl = qe * (dl = Wa < 0 ? 0 : Wa > Va ? Va : Wa) / Va) + (zo = qe * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Va)) / 4))) * Pn) - (Dn = cl * cl), ui = Va * (To = (Sn = Math.sqrt(Gn)) * S / Pn) / qe, Li = br < 0 ? 0 : br > ui ? ui : br, Ti = ih + cl, wn = (kn = S * S) - (Ao = qe * br / Va) * Ao, ft = (ai = ih + (Ro = (In = Math.sqrt(wn)) * ih / S)) - (Bo = (zo - cl) / 2), Kr = ($o = Ti + Ro) + Bo, Ko = Ar - (No = zo / 2), Ri = zr - Ao; var Io = 180 * (nh = Math.atan(Ro / Ao)) / Math.PI; Oo = -Io, zr - To, (ih + Ti) / 2, zn = cl / 2; var Po = 180 * (Fo = Math.atan(zn / To)) / Math.PI; Uo = Pa - Po, Eo = Po - ya, Ho = ya + Po, f += "<path d='" + (Xd = "M" + Ko + "," + zr + " L" + ft + "," + Ri + " L" + ai + "," + Ri + y(ih, S, ih, S, lh = Pa + Io, lh + Oo, !1).replace("M", "L") + " L" + Ti + "," + Ye + y(Ti, S, ih, S, Pa, Pa + Io, !1).replace("M", "L") + " L" + (ai + cl) + "," + Ri + " L" + Kr + "," + Ri + " zM" + Ti + "," + Ye + y(Ti, S, ih, S, Uo, Uo + Eo, !1).replace("M", "L") + y(ih, S, ih, S, Ia, Ia + Ho, !1).replace("M", "L")) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "curvedLeftArrow": Wa = 24e5 / 914400, gr = 48e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } var Co, _o; H = S / 2, U = D / 2, Sa = S / 2, Ar = D, zr = S, We = 0, Ye = 0, Pa = 270, Ia = 180, ya = 90; Lr = Xa * S / (qe = Math.min(D, S)), ql = gr < 0 ? 0 : gr > Lr ? Lr : gr, Gn = (Cn = (Pn = 2 * (oh = Sa - (Mn = ((cl = qe * (dl = Wa < 0 ? 0 : Wa > ql ? ql : Wa) / Va) + (zo = qe * ql / Va)) / 4))) * Pn) - (Dn = cl * cl), ui = Va * (o = (Sn = Math.sqrt(Gn)) * D / Pn) / qe, Ni = oh + cl, wn = (kn = D * D) - (Ao = qe * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) * Ao, ut = (mi = oh + (xo = (In = Math.sqrt(wn)) * oh / D)) - (Bo = (zo - cl) / 2), st = (Do = Ni + xo) + Bo, Go = zr - (No = zo / 2), ji = We + Ao, Oo = -(nh = Math.atan(xo / Ao)), We + o, (oh + Ni) / 2, zn = cl / 2, Eo = (Fo = Math.atan(zn / o)) - nh, Ho = nh + Fo, qo = -Fo, Xo = 180 * nh / Math.PI, Co = 180 * Eo / Math.PI, 180 * Ho / Math.PI, _o = 180 * qo / Math.PI, f += "<path d='" + (Xd = "M" + Ar + "," + Ni + y(We, oh, D, oh, 0, -ya, !1).replace("M", "L") + " L" + We + "," + Ye + y(We, Ni, D, oh, Pa, Pa + ya, !1).replace("M", "L") + " L" + Ar + "," + Ni + y(We, Ni, D, oh, 0, Xo, !1).replace("M", "L") + " L" + ji + "," + Do + " L" + ji + "," + st + " L" + We + "," + Go + " L" + ji + "," + ut + " L" + ji + "," + mi + y(We, oh, D, oh, Xo, Xo + Co, !1).replace("M", "L") + y(We, oh, D, oh, 0, -ya, !1).replace("M", "L") + y(We, Ni, D, oh, Pa, Pa + ya, !1).replace("M", "L")) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "curvedRightArrow": Wa = 24e5 / 914400, gr = 48e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } var xo, Do, Go, So, jo; H = S / 2, U = D / 2, Sa = S / 2, Ar = D, zr = S, We = 0, Ye = 0, Pa = 270, Ia = 180, ya = 90; Lr = Xa * S / (qe = Math.min(D, S)), ql = gr < 0 ? 0 : gr > Lr ? Lr : gr, Gn = (Cn = (Pn = 2 * (oh = Sa - (Mn = ((cl = qe * (dl = Wa < 0 ? 0 : Wa > ql ? ql : Wa) / Va) + (zo = qe * ql / Va)) / 4))) * Pn) - (Dn = cl * cl), ui = Va * (o = (Sn = Math.sqrt(Gn)) * D / Pn) / qe, Ni = oh + cl, wn = (kn = D * D) - (Ao = qe * (Li = br < 0 ? 0 : br > ui ? ui : br) / Va) * Ao, ut = (mi = oh + (xo = (In = Math.sqrt(wn)) * oh / D)) - (Bo = (zo - cl) / 2), st = (Do = Ni + xo) + Bo, Go = zr - (No = zo / 2), ji = Ar - Ao, nh = Math.atan(xo / Ao), lh = Math.PI + 0 - nh, Oo = -nh, Ar - o, (oh + Ni) / 2, zn = cl / 2, Eo = (Fo = Math.atan(zn / o)) - Math.PI / 2, Ho = Math.PI / 2 + Fo, qo = Math.PI - Fo, So = 180 * lh / Math.PI, jo = 180 * Oo / Math.PI, Xo = 180 * nh / Math.PI, Vo = 180 * Eo / Math.PI, f += "<path d='" + (Xd = "M" + We + "," + oh + y(D, oh, D, oh, Ia, Ia + jo, !1).replace("M", "L") + " L" + ji + "," + mi + " L" + ji + "," + ut + " L" + Ar + "," + Go + " L" + ji + "," + st + " L" + ji + "," + Do + y(D, Ni, D, oh, So, So + Xo, !1).replace("M", "L") + " L" + We + "," + oh + y(D, oh, D, oh, Ia, Ia + ya, !1).replace("M", "L") + " L" + Ar + "," + cl + y(D, Ni, D, oh, Pa, Pa + Vo, !1).replace("M", "L")) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "curvedUpArrow": Wa = 24e5 / 914400, gr = 48e5 / 914400, br = 24e5 / 914400, Xa = 48e5 / 914400, Va = 96e5 / 914400; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = 96 * parseInt(el.substr(4)) / 914400) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = 96 * parseInt(sl.substr(4)) / 914400) } var zo, To, Ao, Ro, Bo, No, Oo, Fo, Eo, qo, Ho, Uo, Qo, Xo, Vo; H = S / 2, U = D / 2, wa = D / 2, Ar = D, zr = S, We = 0, Ye = 0, Pa = 270, Ia = 180, ya = 90; Lr = Xa * D / (qe = Math.min(D, S)), Gn = (Cn = (Pn = 2 * (ih = wa - (Mn = ((cl = qe * (dl = Wa < 0 ? 0 : Wa > Va ? Va : Wa) / Va) + (zo = qe * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Va)) / 4))) * Pn) - (Dn = cl * cl), ui = Va * (To = (Sn = Math.sqrt(Gn)) * S / Pn) / qe, Li = br < 0 ? 0 : br > ui ? ui : br, Ti = ih + cl, wn = (kn = S * S) - (Ao = qe * br / Va) * Ao, ft = (ai = ih + (Ro = (In = Math.sqrt(wn)) * ih / S)) - (Bo = (zo - cl) / 2), Kr = ($o = Ti + Ro) + Bo, Ko = Ar - (No = zo / 2), Ri = Ye + Ao, Oo = -(nh = Math.atan(Ro / Ao)), Ye + To, (ih + Ti) / 2, zn = cl / 2, -(Eo = (Fo = Math.atan(zn / To)) - nh), qo = Math.PI / 2 - nh, Ho = nh + Fo, Qo = 180 * (Uo = Math.PI / 2 - Fo) / Math.PI, Vo = 180 * Eo / Math.PI, _o = 180 * qo / Math.PI, Xo = 180 * nh / Math.PI, f += "<path d='" + (Xd = y(ih, 0, ih, S, Qo, Qo + Vo, !1) + " L" + ai + "," + Ri + " L" + ft + "," + Ri + " L" + Ko + "," + Ye + " L" + Kr + "," + Ri + " L" + $o + "," + Ri + y(Ti, 0, ih, S, _o, _o + Xo, !1).replace("M", "L") + " L" + ih + "," + zr + y(ih, 0, ih, S, ya, Ia, !1).replace("M", "L") + " L" + cl + "," + Ye + y(Ti, 0, ih, S, Ia, ya, !1).replace("M", "L")) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "mathDivide": case "mathEqual": case "mathMinus": case "mathMultiply": case "mathNotEqual": case "mathPlus": if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) if (Ji.constructor === Array) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4))) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4))) : "adj3" == ll && (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4))) } else tl = Y(Ji, ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)); Xa = 48e5 / 914400, Va = 96e5 / 914400, Sr = 192e5 / 914400, U = D / 2, H = S / 2, Sa = S / 2; if ("mathNotEqual" == L) { var Yo, Wo, Jo, Zo, $o, Ko, ai, ri, ti, ei, si, oi, ii, li, ni, di, hi; void 0 === Ji ? (Wa = 2257920 / 914400, gr = 110 * Math.PI / 180, br = 1128960 / 914400) : (Wa = 96 * Wa / 914400, gr = gr / 6e4 * Math.PI / 180, br = 96 * br / 914400); Ya = 70 * Math.PI / 180; var ci = 110 * Math.PI / 180; ui = Va - 2 * (dl = Wa < 0 ? 0 : Wa > Xa ? Xa : Wa), ji = U - (Ui = D * (Os = 7055040 / 914400) / Sr), Kr = U + Ui, Ri = (Bi = H - (Qi = S * (Li = br < 0 ? 0 : br > ui ? ui : br) / Sr)) - (Gi = S * dl / Va), ut = (Ni = H + Qi) + Gi, Yo = (gr < Ya ? Ya : gr > ci ? ci : gr) - Math.PI / 2, ri = ($o = U + (Wo = Sa * Math.tan(Yo)) - (Zo = (Jo = Math.sqrt(Wo * Wo + Sa * Sa)) * Gi / Sa) / 2) + Zo, (zi = $o - 2 * Wo) + Zo, ti = Gi * Sa / Jo, Vi = -(Xi = Gi * Wo / Jo), ((ei = Yo > 0 ? $o + ti : ri) + (si = Yo > 0 ? $o : ri - ti)) / 2, ((ni = D - si) + (li = D - ei)) / 2, ((oi = Yo > 0 ? Xi : 0) + (ii = Yo > 0 ? 0 : Vi)) / 2, (Ri + Bi) / 2, (Ni + ut) / 2, ((hi = S - ii) + (di = S - oi)) / 2, Yi = "M" + ji + "," + Ri + " L" + (Ko = $o - Wo * Ri / Sa) + "," + Ri + " L" + si + "," + ii + " L" + ei + "," + oi + " L" + (Ko + Zo) + "," + Ri + " L" + Kr + "," + Ri + " L" + Kr + "," + Bi + " L" + ((ai = $o - Wo * Bi / Sa) + Zo) + "," + Bi + " L" + ((ft = $o - Wo * Ni / Sa) + Zo) + "," + Ni + " L" + Kr + "," + Ni + " L" + Kr + "," + ut + " L" + ((Ti = $o - Wo * ut / Sa) + Zo) + "," + ut + " L" + ni + "," + hi + " L" + li + "," + di + " L" + Ti + "," + ut + " L" + ji + "," + ut + " L" + ji + "," + Ni + " L" + ft + "," + Ni + " L" + ai + "," + Bi + " L" + ji + "," + Bi + " z" } else if ("mathDivide" == L) { var pi, fi, ui, Li, vi, mi; void 0 === Ji ? (Wa = 2257920 / 914400, gr = 564480 / 914400, br = 1128960 / 914400) : (Wa = 96 * Wa / 914400, gr = 96 * gr / 914400, br = 96 * br / 914400); Ws = 3527520 / 914400; ui = (pi = ((Di = 7055040 / 914400) + -(dl = Wa < (Os = 96e3 / 914400) ? Os : Wa > Ws ? Ws : Wa)) / 4) < (fi = Ws * D / S) ? pi : fi, Lr = Di + -4 * (Li = br < Os ? Os : br > ui ? ui : br) - dl, ut = H + (Gi = S * dl / Sr), mi = S - (Ri = (Bi = (Ni = H - Gi) - (Ai = S * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Va + (vi = S * Li / Va))) - vi), ji = U - (Ui = D * Di / Sr), Ti = U + Ui, zi = U - vi; ya = 90, Pa = 270, He = U - Math.cos(Pa * Math.PI / 180) * vi, Ue = Ri - Math.sin(Pa * Math.PI / 180) * vi, Q = U - Math.cos(Math.PI / 2) * vi, W = mi - Math.sin(Math.PI / 2) * vi; Yi = "M" + U + "," + Ri + y(He, Ue, vi, vi, Pa, Pa + 360, !1).replace("M", "L") + " z M" + U + "," + mi + y(Q, W, vi, vi, ya, ya + 360, !1).replace("M", "L") + " z M" + ji + "," + Ni + " L" + Ti + "," + Ni + " L" + Ti + "," + ut + " L" + ji + "," + ut + " z" } else if ("mathEqual" == L) { void 0 === Ji ? (Wa = 2257920 / 914400, gr = 1128960 / 914400) : (Wa = 96 * Wa / 914400, gr = 96 * gr / 914400); var gi; Ws = 3527520 / 914400; gi = Va - 2 * (dl = Wa < 0 ? 0 : Wa > Ws ? Ws : Wa), ((Ri = (Bi = H - (Qi = S * (ql = gr < 0 ? 0 : gr > gi ? gi : gr) / Sr)) - (Gi = S * dl / Va)) + Bi) / 2, ((Ni = H + Qi) + (ut = Ni + Gi)) / 2, Yi = "M" + (ji = U - (Ui = D * (Di = 7055040 / 914400) / Sr)) + "," + Ri + " L" + (zi = U + Ui) + "," + Ri + " L" + zi + "," + Bi + " L" + ji + "," + Bi + " zM" + ji + "," + Ni + " L" + zi + "," + Ni + " L" + zi + "," + ut + " L" + ji + "," + ut + " z" } else if ("mathMinus" == L) { Yi = "M" + (ji = U - (Ui = D * (Di = 7055040 / 914400) / Sr)) + "," + (Ri = H - (Gi = S * (dl = (Wa = void 0 === Ji ? 2257920 / 914400 : 96 * Wa / 914400) < 0 ? 0 : Wa > Va ? Va : Wa) / Sr)) + " L" + (zi = U + Ui) + "," + Ri + " L" + zi + "," + (Bi = H + Gi) + " L" + ji + "," + Bi + " z" } else if ("mathMultiply" == L) { Wa = void 0 === Ji ? 2257920 / 914400 : 96 * Wa / 914400; var bi, Mi, ki, yi, wi, Ii, Pi, Ci, _i, xi, Di = 4988640 / 914400; cl = (qe = Math.min(D, S)) * (dl = Wa < 0 ? 0 : Wa > Di ? Di : Wa) / Va, Ai = Math.atan(S / D), bi = 1 * Math.sin(Ai), Mi = 1 * Math.cos(Ai), ki = 1 * Math.tan(Ai), D - (Ii = Mi * (wi = (yi = Math.sqrt(D * D + S * S)) - yi * Di / Va) / 2), S - (Pi = bi * wi / 2), Yi = "M" + (Xl = Ii - (Ci = bi * cl / 2)) + "," + (Vl = Pi + (_i = Mi * cl / 2)) + " L" + (on = Ii + Ci) + "," + (ln = Pi - _i) + " L" + U + "," + (Pd = (U - on) * ki + ln) + " L" + (an = D - on) + "," + ln + " L" + (Jl = D - Xl) + "," + Vl + " L" + (Vn = Jl - (xi = (H - Vl) / ki)) + "," + H + " L" + Jl + "," + (sn = S - Vl) + " L" + an + "," + (Pl = S - ln) + " L" + U + "," + (S - Pd) + " L" + on + "," + Pl + " L" + Xl + "," + sn + " L" + (Xl + xi) + "," + H + " z" } else if ("mathPlus" == L) { var Gi, Si, ji, zi, Ti; Wa = void 0 === Ji ? 2257920 / 914400 : 96 * Wa / 914400, Yi = "M" + (ji = U - (Ui = D * (Di = 7055040 / 914400) / Sr)) + "," + (Bi = H - (Si = (qe = Math.min(D, S)) * (dl = Wa < 0 ? 0 : Wa > Di ? Di : Wa) / Sr)) + " L" + (zi = U - Si) + "," + Bi + " L" + zi + "," + (Ri = H - (Gi = S * Di / Sr)) + " L" + (Ti = U + Si) + "," + Ri + " L" + Ti + "," + Bi + " L" + (ft = U + Ui) + "," + Bi + " L" + ft + "," + (Ni = H + Si) + " L" + Ti + "," + Ni + " L" + Ti + "," + (ut = H + Gi) + " L" + zi + "," + ut + " L" + zi + "," + Ni + " L" + ji + "," + Ni + " z" } f += "<path d='" + Yi + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "can": case "flowChartMagneticDisk": case "flowChartMagneticDrum": var Ai, Ri, Bi, Ni; Qa = 24e5 / 914400, Xa = 48e5 / 914400, Va = 192e5 / 914400; void 0 !== (Ua = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd", "attrs", "fmla"])) && (Qa = 96 * parseInt(Ua.substr(4)) / 914400), "flowChartMagneticDisk" != L && "flowChartMagneticDrum" != L || (Qa = 48e5 / 914400), Tr = Xa * S / (qe = Math.min(D, S)), Bi = (Ri = qe * (Ai = Qa < 0 ? 0 : Qa > Tr ? Tr : Qa) / Va) + Ri, Ni = S - Ri; Ba = ""; "flowChartMagneticDrum" == L && (Ba = "transform='rotate(90 " + D / 2 + "," + S / 2 + ")'"), f += "<path " + Ba + " d='" + (Yi = y(wa = D / 2, Ri, wa, Ri, 0, Ia = 180, !1) + y(wa, Ri, wa, Ri, Ia, Ia + Ia, !1).replace("M", "L") + " L" + D + "," + Ni + y(wa, Ni, wa, Ri, 0, Ia, !1).replace("M", "L") + " L0," + Ri) + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "swooshArrow": var Oi; Wa = 25e3 * (Oi = 96 / 914400), gr = 16667 * Oi; if (void 0 !== (Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]))) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = parseInt(tl.substr(4)) * Oi) : "adj2" == ll && (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) * Oi) } Xa = 1 * Oi, Sr = 75e3 * Oi, Os = 1e5 * Oi; var Fi, Ei, qi, Hi, Ui, Qi, Xi, Vi, Yi, Wi = S / 6; Lr = (Va = 7e4 * Oi) * D / (qe = Math.min(D, S)), Ei = S * (dl = Wa < Xa ? Xa : Wa > Sr ? Sr : Wa) / Os, on = D - qe * (ql = gr < 0 ? 0 : gr > Lr ? Lr : gr) / Os, ln = Fi = qe / 8, qi = Math.PI / 2 / 14, f += "<path d='" + (Yi = "M0," + S + " Q" + D / 6 + "," + (Wi + (Vi = Wi)) + " " + on + "," + ln + " L" + (Id = on - (Hi = Fi * Math.tan(qi))) + ",0 L" + D + "," + (rn = (Qi = (Zl = (Yn = ln + Ei) + Fi) - 0) / 2 - (Xi = S / 20)) + " L" + (Jl = (Vn = on + (Ui = Ei * Math.tan(qi))) + Hi) + "," + Zl + " L" + Vn + "," + Yn + " Q" + D / 4 + "," + (Yn + Wi / 2) + " 0," + S + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "circularArrow": var Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]); Wa = 12e5 / 914400, gr = 19.03865 * Math.PI / 180, br = 340.96135 * Math.PI / 180, Ps = 180 * Math.PI / 180, Cs = 12e5 / 914400; if (void 0 !== Ji) for (Aa = 0; Aa < Ji.length; Aa++) { "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) / 6e4 * Math.PI / 180) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4)) / 6e4 * Math.PI / 180) : "adj4" == ll ? (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = parseInt(ol.substr(4)) / 6e4 * Math.PI / 180) : "adj5" == ll && (il = Y(Ji[Aa], ["attrs", "fmla"]), Cs = 96 * parseInt(il.substr(4)) / 914400) } H = S / 2, U = D / 2, Ar = D, zr = S, We = 0, Ye = 0, wa = D / 2, Sa = S / 2, qe = Math.min(D, S), Xa = 24e5 / 914400, Va = 96e5 / 914400; var Zi, $i = 1 / 6e4 * Math.PI / 180, Ki = 21599999 / 6e4 * Math.PI / 180, al = 2 * Math.PI; vr = 2 * (nl = Cs < 0 ? 0 : Cs > Xa ? Xa : Cs), hl = br < $i ? $i : br > Ki ? Ki : br, lh = Ps < 0 ? 0 : Ps > Ki ? Ki : Ps, bl = (ml = (Ll = Sa + (fl = (cl = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Va) / 2) - (pl = qe * nl / Va)) - cl) + fl, Ml = (gl = (vl = (ul = wa + fl - pl) - cl) + fl) * Math.sin(hl), kl = bl * Math.cos(hl), Il = U + (yl = gl * Math.cos(Math.atan2(Ml, kl))), Pl = H + (wl = bl * Math.sin(Math.atan2(Ml, kl))), jl = 1 - (Sl = (Gl = (_l = yl * yl) - (Dl = (Cl = vl < ml ? vl : ml) * Cl)) * ((xl = wl * wl) - Dl) / _l / xl), zl = (1 + Math.sqrt(jl)) / (Gl / yl / wl), Al = (Tl = Math.atan2(zl, 1)) + al, Bl = (Rl = (Tl > 0 ? Tl : Al) - hl) + al, Ol = (Nl = Rl > 0 ? Rl : Bl) - al, Fl = Nl - Ia > 0 ? Ol : Nl, Zi = Math.abs(Fl), Hl = hl + (gr < 0 ? 0 : gr > Zi ? Zi : gr), Ul = gl * Math.sin(Hl), Ql = bl * Math.cos(Hl), Xl = U + gl * Math.cos(Math.atan2(Ul, Ql)), Vl = H + bl * Math.sin(Math.atan2(Ul, Ql)), Yl = ul * Math.sin(lh), Wl = Ll * Math.cos(lh), Jl = U + ul * Math.cos(Math.atan2(Yl, Wl)), Zl = H + Ll * Math.sin(Math.atan2(Yl, Wl)), tn = pl * Math.cos(Hl), sn = Pl + pl * Math.sin(Hl), mn = (Ln = (hn = (en = Il + tn) - U) * (pn = ul < Ll ? ul : Ll) / ul) - (fn = (nn = (on = Il - pl * Math.cos(Hl)) - U) * pn / ul), gn = (vn = (cn = sn - H) * pn / Ll) - (un = (dn = (ln = Pl - pl * Math.sin(Hl)) - H) * pn / Ll), Cn = (Pn = (In = pn * pn * (wn = (bn = Math.sqrt(mn * mn + gn * gn)) * bn)) - (yn = (Mn = fn * vn) - (kn = Ln * un)) * yn) > 0 ? Pn : 0, On = Ln - (jn = ((Sn = yn * gn) + (Gn = (Dn = (xn = -1 * gn > 0 ? -1 : 1) * mn) * (_n = Math.sqrt(Cn)))) / wn), Fn = Ln - (Tn = (zn = Sn - Gn) / wn), En = vn - (Bn = ((Rn = yn * mn / -1) + (An = Math.abs(gn) * _n)) / wn), qn = vn - (Nn = (Rn - An) / wn), Hn = Math.sqrt(On * On + En * En), Vn = U + (Qn = ((Un = Math.sqrt(Fn * Fn + qn * qn) - Hn) > 0 ? jn : Tn) * ul / pn), Yn = H + (Xn = (Un > 0 ? Bn : Nn) * Ll / pn), Kn = (Zn = hn * Cl / vl) - (Wn = nn * Cl / vl), ad = ($n = cn * Cl / ml) - (Jn = dn * Cl / ml), id = (od = Cl * Cl * (sd = (rd = Math.sqrt(Kn * Kn + ad * ad)) * rd) - (ed = Wn * $n - (td = Zn * Jn)) * ed) > 0 ? od : 0, vd = Wn - (hd = ((dd = ed * ad) + (nd = xn * Kn * (ld = Math.sqrt(id)))) / sd), md = Wn - (cd = (dd - nd) / sd), gd = Jn - (ud = ((fd = ed * Kn / -1) + (pd = Math.abs(ad) * ld)) / sd), bd = Jn - (Ld = (fd - pd) / sd), Md = Math.sqrt(vd * vd + gd * gd), Id = U + (yd = ((kd = Math.sqrt(md * md + bd * bd) - Md) > 0 ? hd : cd) * vl / Cl), Pd = H + (wd = (kd > 0 ? ud : Ld) * ml / Cl), _d = (Cd = Math.atan2(wd, yd)) + al, Gd = (Dd = lh - (jd = Cd > 0 ? Cd : _d)) - al, zd = Dd > 0 ? Gd : Dd, Td = Vn - Id, Ad = Yn - Pd, Bd = (Rd = Math.sqrt(Td * Td + Ad * Ad) / 2 - pl) > 0 ? Vn : en, Nd = Rd > 0 ? Yn : sn, Od = Rd > 0 ? Id : on, Fd = Rd > 0 ? Pd : ln, qd = (Ed = Math.atan2(Xn, Qn)) + al, Ud = (Hd = (Ed > 0 ? Ed : qd) - lh) + al, nh = Hd > 0 ? Hd : Ud; Dr = (Vd = 180 * lh / Math.PI) + 180 * nh / Math.PI; var rl = (Qd = 180 * jd / Math.PI) + 180 * zd / Math.PI; f += "<path d='" + (Xd = y(D / 2, S / 2, ul, Ll, Vd, Dr, !1) + " L" + Bd + "," + Nd + " L" + Xl + "," + Vl + " L" + Od + "," + Fd + " L" + Id + "," + Pd + y(D / 2, S / 2, vl, ml, Qd, rl, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftCircularArrow": var tl, el, sl, ol, il; Ji = Y(a, ["p:spPr", "a:prstGeom", "a:avLst", "a:gd"]), Wa = 12e5 / 914400, gr = -19.03865 * Math.PI / 180, br = 19.03865 * Math.PI / 180, Ps = 180 * Math.PI / 180, Cs = 12e5 / 914400; if (void 0 !== Ji) for (Aa = 0; Aa < Ji.length; Aa++) { var ll; "adj1" == (ll = Y(Ji[Aa], ["attrs", "name"])) ? (tl = Y(Ji[Aa], ["attrs", "fmla"]), Wa = 96 * parseInt(tl.substr(4)) / 914400) : "adj2" == ll ? (el = Y(Ji[Aa], ["attrs", "fmla"]), gr = parseInt(el.substr(4)) / 6e4 * Math.PI / 180) : "adj3" == ll ? (sl = Y(Ji[Aa], ["attrs", "fmla"]), br = parseInt(sl.substr(4)) / 6e4 * Math.PI / 180) : "adj4" == ll ? (ol = Y(Ji[Aa], ["attrs", "fmla"]), Ps = parseInt(ol.substr(4)) / 6e4 * Math.PI / 180) : "adj5" == ll && (il = Y(Ji[Aa], ["attrs", "fmla"]), Cs = 96 * parseInt(il.substr(4)) / 914400) } var nl, dl, hl, cl, pl, fl, ul, Ll, vl, ml, gl, bl, Ml, kl, yl, wl, Il, Pl, Cl, _l, xl, Dl, Gl, Sl, jl, zl, Tl, Al, Rl, Bl, Nl, Ol, Fl, El, ql, Hl, Ul, Ql, Xl, Vl, Yl, Wl, Jl, Zl, $l, Kl, an, rn, tn, en, sn, on, ln, nn, dn, hn, cn, pn, fn, un, Ln, vn, mn, gn, bn, Mn, kn, yn, wn, In, Pn, Cn, _n, xn, Dn, Gn, Sn, jn, zn, Tn, An, Rn, Bn, Nn, On, Fn, En, qn, Hn, Un, Qn, Xn, Vn, Yn, Wn, Jn, Zn, $n, Kn, ad, rd, td, ed, sd, od, id, ld, nd, dd, hd, cd, pd, fd, ud, Ld, vd, md, gd, bd, Md, kd, yd, wd, Id, Pd, Cd, _d, xd, Dd, Gd, Sd, jd, zd, Td, Ad, Rd, Bd, Nd, Od, Fd, Ed, qd, Hd, Ud; H = S / 2, U = D / 2, Ar = D, zr = S, We = 0, Ye = 0, wa = D / 2, Sa = S / 2, qe = Math.min(D, S), Xa = 24e5 / 914400, Va = 96e5 / 914400, $i = 1 / 6e4 * Math.PI / 180, Ki = 21599999 / 6e4 * Math.PI / 180, al = 2 * Math.PI; vr = 2 * (nl = Cs < 0 ? 0 : Cs > Xa ? Xa : Cs), hl = br < $i ? $i : br > Ki ? Ki : br, lh = Ps < 0 ? 0 : Ps > Ki ? Ki : Ps, bl = (ml = (Ll = Sa + (fl = (cl = qe * (dl = Wa < 0 ? 0 : Wa > vr ? vr : Wa) / Va) / 2) - (pl = qe * nl / Va)) - cl) + fl, Ml = (gl = (vl = (ul = wa + fl - pl) - cl) + fl) * Math.sin(hl), kl = bl * Math.cos(hl), Il = U + (yl = gl * Math.cos(Math.atan2(Ml, kl))), Pl = H + (wl = bl * Math.sin(Math.atan2(Ml, kl))), jl = 1 - (Sl = (Gl = (_l = yl * yl) - (Dl = (Cl = vl < ml ? vl : ml) * Cl)) * ((xl = wl * wl) - Dl) / _l / xl), zl = (1 + Math.sqrt(jl)) / (Gl / yl / wl), Al = (Tl = Math.atan2(zl, 1)) + al, Bl = (Rl = (Tl > 0 ? Tl : Al) - hl) + al, Ol = (Nl = Rl > 0 ? Rl : Bl) - al, Fl = Nl - Ia > 0 ? Ol : Nl, El = -1 * Math.abs(Fl), Hl = hl + ((ql = -1 * Math.abs(gr)) < El ? El : ql > 0 ? 0 : ql), Ul = gl * Math.sin(Hl), Ql = bl * Math.cos(Hl), Xl = U + gl * Math.cos(Math.atan2(Ul, Ql)), Vl = H + bl * Math.sin(Math.atan2(Ul, Ql)), Yl = ul * Math.sin(lh), Wl = Ll * Math.cos(lh), Jl = U + ul * Math.cos(Math.atan2(Yl, Wl)), Zl = H + Ll * Math.sin(Math.atan2(Yl, Wl)), $l = vl * Math.sin(lh), Kl = ml * Math.cos(lh), an = U + vl * Math.cos(Math.atan2($l, Kl)), rn = H + ml * Math.sin(Math.atan2($l, Kl)), tn = pl * Math.cos(Hl), sn = Pl + pl * Math.sin(Hl), mn = (Ln = (hn = (en = Il + tn) - U) * (pn = ul < Ll ? ul : Ll) / ul) - (fn = (nn = (on = Il - pl * Math.cos(Hl)) - U) * pn / ul), gn = (vn = (cn = sn - H) * pn / Ll) - (un = (dn = (ln = Pl - pl * Math.sin(Hl)) - H) * pn / Ll), Cn = (Pn = (In = pn * pn * (wn = (bn = Math.sqrt(mn * mn + gn * gn)) * bn)) - (yn = (Mn = fn * vn) - (kn = Ln * un)) * yn) > 0 ? Pn : 0, On = Ln - (jn = ((Sn = yn * gn) + (Gn = (Dn = (xn = -1 * gn > 0 ? -1 : 1) * mn) * (_n = Math.sqrt(Cn)))) / wn), Fn = Ln - (Tn = (zn = Sn - Gn) / wn), En = vn - (Bn = ((Rn = yn * mn / -1) + (An = Math.abs(gn) * _n)) / wn), qn = vn - (Nn = (Rn - An) / wn), Hn = Math.sqrt(On * On + En * En), Vn = U + (Qn = ((Un = Math.sqrt(Fn * Fn + qn * qn) - Hn) > 0 ? jn : Tn) * ul / pn), Yn = H + (Xn = (Un > 0 ? Bn : Nn) * Ll / pn), Kn = (Zn = hn * Cl / vl) - (Wn = nn * Cl / vl), ad = ($n = cn * Cl / ml) - (Jn = dn * Cl / ml), id = (od = Cl * Cl * (sd = (rd = Math.sqrt(Kn * Kn + ad * ad)) * rd) - (ed = Wn * $n - (td = Zn * Jn)) * ed) > 0 ? od : 0, vd = Wn - (hd = ((dd = ed * ad) + (nd = xn * Kn * (ld = Math.sqrt(id)))) / sd), md = Wn - (cd = (dd - nd) / sd), gd = Jn - (ud = ((fd = ed * Kn / -1) + (pd = Math.abs(ad) * ld)) / sd), bd = Jn - (Ld = (fd - pd) / sd), Md = Math.sqrt(vd * vd + gd * gd), Id = U + (yd = ((kd = Math.sqrt(md * md + bd * bd) - Md) > 0 ? hd : cd) * vl / Cl), Pd = H + (wd = (kd > 0 ? ud : Ld) * ml / Cl), _d = (Cd = Math.atan2(wd, yd)) + al, Gd = (Dd = lh - (xd = Cd > 0 ? Cd : _d)) + al, jd = xd + (Sd = Dd > 0 ? Dd : Gd), zd = -Sd, Td = Vn - Id, Ad = Yn - Pd, Bd = (Rd = Math.sqrt(Td * Td + Ad * Ad) / 2 - pl) > 0 ? Vn : en, Nd = Rd > 0 ? Yn : sn, Od = Rd > 0 ? Id : on, Fd = Rd > 0 ? Pd : ln, qd = (Ed = Math.atan2(Xn, Qn)) + al, Ud = (Hd = (Ed > 0 ? Ed : qd) - lh) - al; var Qd, Xd, Vd = 180 * (lh + (nh = Hd > 0 ? Ud : Hd)) / Math.PI; Dr = 180 * lh / Math.PI; f += "<path d='" + (Xd = "M" + Jl + "," + Zl + " L" + an + "," + rn + y(D / 2, S / 2, vl, ml, Qd = 180 * jd / Math.PI, rl = Qd + 180 * zd / Math.PI, !1).replace("M", "L") + " L" + Od + "," + Fd + " L" + Xl + "," + Vl + " L" + Bd + "," + Nd + " L" + Vn + "," + Yn + y(D / 2, S / 2, ul, Ll, Vd, Dr, !1).replace("M", "L") + " z") + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' />"; break; case "leftRightCircularArrow": case "chartPlus": case "chartStar": case "chartX": case "cornerTabs": case "flowChartOfflineStorage": case "folderCorner": case "funnel": case "lineInv": case "nonIsoscelesTrapezoid": case "plaqueTabs": case "squareTabs": case "upDownArrowCallout": console.log(L, " -unsupported shape type."); break; case void 0: default: console.warn("Undefine shape type.(" + L + ")") }f += "</svg>", f += "<div class='block content " + G(a, r, t, i) + "' _id='" + e + "' _idx='" + o + "' _type='" + i + "' _name='" + s + "' style='" + _(h, c, p) + x(h, c, p) + " z-index: " + l + ";transform: rotate(" + g + "deg);'>", void 0 !== a["p:txBody"] && (f += w(a["p:txBody"], a, r, t, i, n)), f += "</div>" } else if (void 0 !== v) { var Yd = Y(v, ["a:pathLst"]), Wd = Y(Yd, ["a:path", "attrs"]), Jd = (parseInt(Wd.w), parseInt(Wd.h), Y(Yd, ["a:path", "a:close"])), Zd = Y(Yd, ["a:path", "a:moveTo", "a:pt", "attrs"]), $d = (ka = "M" + 96 * parseInt(Zd.x) / 914400 + "," + 96 * parseInt(Zd.y) / 914400, Y(Yd, ["a:path"])), Kd = $d["a:lnTo"], ah = $d["a:cubicBezTo"], rh = $d["a:arcTo"], th = []; if (void 0 !== Kd && Object.keys(Kd).forEach(function (a) { var r = Kd[a]["a:pt"]; void 0 !== r && Object.keys(r).forEach(function (a) { var t = {}, e = r[a], s = e.x, o = e.y, i = e.order; t.type = "lnto", t.order = i, t.x = s, t.y = o, th.push(t) }) }), void 0 !== ah && Object.keys(ah).forEach(function (a) { var r = ah[a]["a:pt"]; void 0 !== r && Object.keys(r).forEach(function (a) { var t = r[a]; Object.keys(t).forEach(function (a) { var r = {}, e = t[a], s = e.x, o = e.y, i = e.order; r.type = "cubicBezTo", r.order = i, r.x = s, r.y = o, th.push(r) }) }) }), void 0 !== rh) { var eh = rh.attrs, sh = eh.order, oh = eh.hR, ih = eh.wR, lh = eh.stAng, nh = eh.swAng, dh = 0, hh = 0, ch = Y(rh, ["a:pt", "attrs"]); void 0 !== ch && (dh = ch.x, hh = ch.y); var ph = { type: "arcTo" }; ph.order = sh, ph.hR = oh, ph.wR = ih, ph.stAng = lh, ph.swAng = nh, ph.shftX = dh, ph.shftY = hh, th.push(ph) } var fh = th.slice(0); fh.sort(function (a, r) { return a.order - r.order }); for (var uh = 0; uh < fh.length;) { if ("lnto" == fh[uh].type) ka += "L" + 96 * parseInt(fh[uh].x) / 914400 + "," + 96 * parseInt(fh[uh].y) / 914400, uh++; else if ("cubicBezTo" == fh[uh].type) { ka += "C" + 96 * parseInt(fh[uh].x) / 914400 + "," + 96 * parseInt(fh[uh].y) / 914400 + " " + 96 * parseInt(fh[uh + 1].x) / 914400 + "," + 96 * parseInt(fh[uh + 1].y) / 914400 + " " + 96 * parseInt(fh[uh + 2].x) / 914400 + "," + 96 * parseInt(fh[uh + 2].y) / 914400, uh += 3 } else if ("arcTo" == fh[uh].type) { oh = 96 * parseInt(fh[uh].hR) / 914400; ka += y(ih = 96 * parseInt(fh[uh].wR) / 914400, oh, ih, oh, lh = parseInt(fh[uh].stAng) / 6e4, Dr = lh + (nh = parseInt(fh[uh].swAng) / 6e4), !1), uh++ } } f += "<path d='" + ka + "' fill='" + (A ? "url(#imgPtrn_" + u + ")" : z ? "url(#linGrd_" + u + ")" : j) + "' stroke='" + F.color + "' stroke-width='" + F.width + "' stroke-dasharray='" + F.strokeDasharray + "' ", void 0 !== Jd ? f += "/>" : (void 0 === E || "triangle" !== E.type && "arrow" !== E.type || (f += "marker-start='url(#markerTriangle_" + u + ")' "), void 0 === q || "triangle" !== q.type && "arrow" !== q.type || (f += "marker-end='url(#markerTriangle_" + u + ")' "), f += "/>"), f += "</svg>", f += "<div class='block content " + G(a, r, t, i) + "' _id='" + e + "' _idx='" + o + "' _type='" + i + "' _name='" + s + "' style='" + _(h, c, p) + x(h, c, p) + " z-index: " + l + ";transform: rotate(" + g + "deg);'>", void 0 !== a["p:txBody"] && (f += w(a["p:txBody"], a, r, t, i, n)), f += "</div>" } else f += "<div class='block content " + G(a, r, t, i) + "' _id='" + e + "' _idx='" + o + "' _type='" + i + "' _name='" + s + "' style='" + _(h, c, p) + x(h, c, p) + T(a, !1, "shape") + N(a, !1, n) + " z-index: " + l + ";transform: rotate(" + g + "deg);'>", void 0 !== a["p:txBody"] && (f += w(a["p:txBody"], a, r, t, i, n)), f += "</div>"; return f } function k(r, t, e) { var s = 1.5 * t, o = s; cy = s, notches = e, radiusO = s, radiusI = t, taperO = 50, taperI = 35, pi2 = 2 * Math.PI, angle = pi2 / (2 * notches), taperAI = angle * taperI * .005, taperAO = angle * taperO * .005, a = angle, toggle = !1; for (var i = " M" + (o + radiusO * Math.cos(taperAO)) + " " + (cy + radiusO * Math.sin(taperAO)); a <= pi2 + angle; a += angle)toggle ? (i += " L" + (o + radiusI * Math.cos(a - taperAI)) + "," + (cy + radiusI * Math.sin(a - taperAI)), i += " L" + (o + radiusO * Math.cos(a + taperAO)) + "," + (cy + radiusO * Math.sin(a + taperAO))) : (i += " L" + (o + radiusO * Math.cos(a - taperAO)) + "," + (cy + radiusO * Math.sin(a - taperAO)), i += " L" + (o + radiusI * Math.cos(a + taperAI)) + "," + (cy + radiusI * Math.sin(a + taperAI))), toggle = !toggle; return i += " " } function y(a, r, t, e, s, o, i) { var l, n = s; if (o >= s) for (; n <= o;) { var d = n * (Math.PI / 180), h = a + Math.cos(d) * t, c = r + Math.sin(d) * e; n == s && (l = " M" + h + " " + c), l += " L" + h + " " + c, n++ } else for (; n > o;) { d = n * (Math.PI / 180), h = a + Math.cos(d) * t, c = r + Math.sin(d) * e; n == s && (l = " M " + h + " " + c), l += " L " + h + " " + c, n-- } return l += i ? " z" : "" } function w(a, r, t, e, s, o) { var i = "", l = o.slideMasterTextStyles; if (void 0 === a) return i; if (a["a:p"].constructor === Array) for (var n = 0; n < a["a:p"].length; n++) { var d = (c = a["a:p"][n])["a:r"]; if (i += "<div  class='" + D(c, t, e, s, l) + "'>", i += I(c, r, t, e, s, o), void 0 === d) i += P(c, r, t, e, s, o); else if (d.constructor === Array) for (var h = 0; h < d.length; h++)i += P(d[h], r, t, e, s, o), void 0 !== c["a:br"] && (i += "<br>"); else i += P(d, r, t, e, s, o); i += "</div>" } else { var c; d = (c = a["a:p"])["a:r"]; if (i += "<div class='slide-prgrph " + D(c, t, e, s, l) + "'>", i += I(c, r, t, e, s, o), void 0 === d) i += P(c, r, t, e, s, o); else if (d.constructor === Array) for (h = 0; h < d.length; h++)i += P(d[h], r, t, e, s, o), void 0 !== c["a:br"] && (i += "<br>"); else i += P(d, r, t, e, s, o); i += "</div>" } return i } function I(a, r, t, e, s, o) { var i, l, n, d, h = o.slideMasterTextStyles, c = Y(a, ["a:r"]); void 0 !== c && c.constructor === Array && (c = c[0]), void 0 !== c ? (i = S(c, r, s, h)[0], l = j(c, t, e, s, h)) : (i = S(a, r, s, h)[0], l = j(a, t, e, s, h)); var p = "", f = a["a:pPr"], u = Y(f, ["attrs", "rtl"]), L = !1; void 0 !== u && "1" == u && (L = !0); var v = parseInt(Y(f, ["attrs", "lvl"])); isNaN(v) && (v = 0); var m = Y(f, ["a:buChar", "attrs", "char"]), g = "TYPE_NONE", b = Y(f, ["a:buAutoNum", "attrs", "type"]), M = Y(f, ["a:buBlip"]); if (void 0 !== m && (g = "TYPE_BULLET"), void 0 !== b && (g = "TYPE_NUMERIC"), void 0 !== M && (g = "TYPE_BULPIC"), "TYPE_NONE" != g) var k = Y(f, ["a:buFont", "attrs"]); var y, w = Y(f, ["a:buClr"]), I = "NoNe"; if (void 0 !== w && (I = q(w)), n = "NoNe" == I ? i : "#" + I, void 0 !== (y = Y(f, ["a:buSzPts", "attrs", "val"]))) d = parseInt(y) / 100 + "pt"; else if (void 0 !== (y = Y(f, ["a:buSzPct", "attrs", "val"]))) { var P = parseInt(y) / 1e5, C = l.substr(0, l.length - 2); d = P * parseInt(C) + "pt" } else d = l; if ("TYPE_BULLET" == g) if (void 0 !== k) { var _ = 96 * parseInt(Y(f, ["attrs", "marL"])) / 914400, x = parseInt(k.pitchFamily); isNaN(_) && (_ = 31545600 / 914400), isNaN(x) && (x = 0), p = "<span style='font-family: " + k.typeface + "; margin-left: " + _ * v + "px; margin-right: " + x + "px;color:" + n + ";font-size:" + d + ";", L && (p += " float: right;  direction:rtl"), p += "'>" + m + "</span>" } else p = "<span style='margin-left: " + (_ = 31545600 / 914400 * v) + "px;'>" + m + "</span>"; else if ("TYPE_NUMERIC" == g) if (void 0 !== k) { _ = 96 * parseInt(Y(f, ["attrs", "marL"])) / 914400, x = parseInt(k.pitchFamily); isNaN(_) && (_ = 31545600 / 914400), isNaN(x) && (x = 0), p = "<span style='margin-left: " + _ * v + "px; margin-right: " + x + "px;color:" + n + ";font-size:" + d + ";", p += L ? " float: right; direction:rtl;" : " float: left; direction:ltr;", p += "' data-bulltname = '" + b + "' data-bulltlvl = '" + v + "' class='numeric-bullet-style'></span>" } else p = "<span style='margin-left: " + (_ = 31545600 / 914400 * v) + "px;", p += L ? " float: right; direction:rtl;" : " float: left; direction:ltr;", p += "' data-bulltname = '" + b + "' data-bulltlvl = '" + v + "' class='numeric-bullet-style'></span>"; else if ("TYPE_BULPIC" == g) { _ = 96 * parseInt(Y(f, ["attrs", "marL"])) / 914400, x = 96 * parseInt(Y(f, ["attrs", "marR"])) / 914400; isNaN(x) && (x = 0), _ = isNaN(_) ? 31545600 / 914400 : 0; var D, G = Y(M, ["a:blip", "attrs", "r:embed"]); if (void 0 !== G) { var z = o.slideResObj[G].target, T = o.zip.file(z).asArrayBuffer(); D = "<img src='data:" + $(z.split(".").pop()) + ";base64," + ia(T) + "' style='width: 100%; height: 100%'/>" } void 0 === G && (D = "&#8227;"), p = "<span style='margin-left: " + _ * v + "px; margin-right: " + x + "px;width:" + d + ";display: inline-block; ", L && (p += " float: right;direction:rtl"), p += "'>" + D + "  </span>" } else p = "<span style='margin-left: " + 31545600 / 914400 * v + "px; margin-right: 0px;'></span>"; return p } function P(a, r, t, e, s, o) { var i = o.slideMasterTextStyles, n = a["a:t"]; "string" != typeof n && "string" != typeof (n = Y(a, ["a:fld", "a:t"])) && (n = "&nbsp;"); var d = S(a, r, s, i), h = "color:" + d[0] + ";text-shadow:" + d[1] + ";font-size:" + j(a, t, e, s, i) + ";font-family:" + function (a, r, t) { var e = Y(a, ["a:rPr", "a:latin", "attrs", "typeface"]); if (void 0 === e) { var s = Y(l, ["a:theme", "a:themeElements", "a:fontScheme"]); e = Y(s, "title" == r || "subTitle" == r || "ctrTitle" == r ? ["a:majorFont", "a:latin", "attrs", "typeface"] : ["a:minorFont", "a:latin", "attrs", "typeface"]) } return void 0 === e ? "inherit" : e }(a, s) + ";font-weight:" + function (a, r, t) { return void 0 !== a["a:rPr"] && "1" === a["a:rPr"].attrs.b ? "bold" : "initial" }(a) + ";font-style:" + function (a, r, t) { return void 0 !== a["a:rPr"] && "1" === a["a:rPr"].attrs.i ? "italic" : "normal" }(a) + ";text-decoration:" + function (a, r, t) { if (void 0 !== a["a:rPr"]) { var e = void 0 !== a["a:rPr"].attrs.u ? a["a:rPr"].attrs.u : "none", s = void 0 !== a["a:rPr"].attrs.strike ? a["a:rPr"].attrs.strike : "noStrike"; return "none" != e && "noStrike" == s ? "underline" : "none" == e && "noStrike" != s ? "line-through" : "none" != e && "noStrike" != s ? "underline line-through" : "initial" } return "initial" }(a) + ";text-align:" + function (a, r, t) { var e = Y(a, ["a:pPr", "attrs", "algn"]), s = "initial"; if (void 0 !== e) switch (e) { case "l": s = "left"; break; case "r": s = "right"; break; case "ctr": s = "center"; break; case "just": case "dist": s = "justify"; break; default: s = "initial" }return s }(a) + ";vertical-align:" + function (a, r, t) { var e = Y(a, ["a:rPr", "attrs", "baseline"]); return void 0 === e ? "baseline" : parseInt(e) / 1e3 + "%" }(a) + ";", c = Y(a, ["a:rPr", "a:highlight"]); void 0 !== c && (h += "background-color:#" + q(c) + ";", h += "Opacity:" + Q(c) + ";"); var f = ""; h in p ? f = p[h].name : (f = "_css_" + (Object.keys(p).length + 1), p[h] = { name: f, text: h }); var u = Y(a, ["a:rPr", "a:hlinkClick", "attrs", "r:id"]); if (void 0 !== u) { var L = o.slideResObj[u].target; return "<span class='text-block " + f + "'><a href='" + (L = na(L)) + "' target='_blank'>" + n.replace(/\s/i, "&nbsp;") + "</a></span>" } return "<span class='text-block " + f + "'>" + n.replace(/\s/i, "&nbsp;") + "</span>" } function C() { var a = ""; for (var r in p) a += "div ." + p[r].name + "{" + p[r].text + "}\n"; return a } function _(a, r, t) { var e = void 0, s = -1, o = -1; return void 0 !== a ? e = a["a:off"].attrs : void 0 !== r ? e = r["a:off"].attrs : void 0 !== t && (e = t["a:off"].attrs), void 0 === e ? "" : (s = 96 * parseInt(e.x) / 914400, o = 96 * parseInt(e.y) / 914400, isNaN(s) || isNaN(o) ? "" : "top:" + o + "px; left:" + s + "px;") } function x(a, r, t) { var e = void 0, s = -1, o = -1; return void 0 !== a ? e = a["a:ext"].attrs : void 0 !== r ? e = r["a:ext"].attrs : void 0 !== t && (e = t["a:ext"].attrs), void 0 === e ? "" : (s = 96 * parseInt(e.cx) / 914400, o = 96 * parseInt(e.cy) / 914400, isNaN(s) || isNaN(o) ? "" : "width:" + s + "px; height:" + o + "px;") } function D(a, r, t, e, s) { var o = Y(a, ["a:pPr", "attrs", "algn"]); if (void 0 === o && void 0 === (o = Y(r, ["p:txBody", "a:p", "a:pPr", "attrs", "algn"])) && void 0 === (o = Y(t, ["p:txBody", "a:p", "a:pPr", "attrs", "algn"]))) switch (e) { case "title": case "subTitle": case "ctrTitle": o = Y(s, ["p:titleStyle", "a:lvl1pPr", "attrs", "alng"]); break; default: o = Y(s, ["p:otherStyle", "a:lvl1pPr", "attrs", "alng"]) }if (void 0 === o) { if ("title" == e || "subTitle" == e || "ctrTitle" == e) return "h-mid"; if ("sldNum" == e) return "h-right" } return "ctr" === o ? "h-mid" : "r" === o ? "h-right" : "h-left" } function G(a, r, t, e, s) { var o = Y(a, ["p:txBody", "a:bodyPr", "attrs", "anchor"]); return void 0 === o && void 0 === (o = Y(r, ["p:txBody", "a:bodyPr", "attrs", "anchor"])) && (o = Y(t, ["p:txBody", "a:bodyPr", "attrs", "anchor"])), "ctr" === o ? "v-mid" : "b" === o ? "v-down" : "v-up" } function S(a, r, t, e) { var s, o, i, l = Y(a, ["a:rPr"]); if (void 0 !== l) if ("SOLID_FILL" == (s = O(l))) o = q(Y(a, ["a:rPr", "a:solidFill"])); else if ("PATTERN_FILL" == s) { o = E(Y(a, ["a:rPr", "a:pattFill"])) } else { var n = Y(r, ["p:style", "a:fontRef"]); void 0 !== n && (o = q(n)) } if (o = void 0 === o || "FFF" === o ? "#000" : "#" + o, void 0 !== Y(a, ["a:rPr", "a:ln"])) { var d = T(a, !1, "text").split(" "), h = parseInt(d[0].substring(0, d[0].indexOf("pt"))) * (4 / 3) + "px", c = d[2]; i = "-" + h + " 0 " + c + ", 0 " + h + " " + c + ", " + h + " 0 " + c + ", 0 -" + h + " " + c + ";" } else i = "none"; return [o, i] } function j(a, r, t, e, s) { var o = void 0; if (void 0 !== a["a:rPr"] && (o = parseInt(a["a:rPr"].attrs.sz) / 100), isNaN(o) || void 0 === o) { var i = Y(r, ["p:txBody", "a:lstStyle", "a:lvl1pPr", "a:defRPr", "attrs", "sz"]); o = parseInt(i) / 100 } if (isNaN(o) || void 0 === o) { if ("title" == e || "subTitle" == e || "ctrTitle" == e) i = Y(s, ["p:titleStyle", "a:lvl1pPr", "a:defRPr", "attrs", "sz"]); else if ("body" == e) i = Y(s, ["p:bodyStyle", "a:lvl1pPr", "a:defRPr", "attrs", "sz"]); else if ("dt" == e || "sldNum" == e) i = "1200"; else if (void 0 === e) i = Y(s, ["p:otherStyle", "a:lvl1pPr", "a:defRPr", "attrs", "sz"]); o = parseInt(i) / 100 } return void 0 === Y(a, ["a:rPr", "attrs", "baseline"]) || isNaN(o) || (o -= 10), isNaN(o) ? "inherit" : o + "pt" } function z(a) { var r = ""; void 0 !== a["a:bottom"] && (r += T({ "p:spPr": { "a:ln": a["a:bottom"]["a:ln"] } }, !1, "shape").replace("border", "border-bottom")); void 0 !== a["a:top"] && (r += T({ "p:spPr": { "a:ln": a["a:top"]["a:ln"] } }, !1, "shape").replace("border", "border-top")); void 0 !== a["a:right"] && (r += T({ "p:spPr": { "a:ln": a["a:right"]["a:ln"] } }, !1, "shape").replace("border", "border-right")); void 0 !== a["a:left"] && (r += T({ "p:spPr": { "a:ln": a["a:left"]["a:ln"] } }, !1, "shape").replace("border", "border-left")); return r } function T(a, r, t) { var e, s; "shape" == t ? (e = "border: ", s = a["p:spPr"]["a:ln"]) : "text" == t && (e = "", s = a["a:rPr"]["a:ln"]); var o = parseInt(Y(s, ["attrs", "w"])) / 12700; isNaN(o) || o < 1 ? e += "1pt " : e += o + "pt "; var i = Y(s, ["a:prstDash", "attrs", "val"]), l = "0"; switch (i) { case "solid": e += "solid", l = "0"; break; case "dash": e += "dashed", l = "5"; break; case "dashDot": e += "dashed", l = "5, 5, 1, 5"; break; case "dot": e += "dotted", l = "1, 5"; break; case "lgDash": e += "dashed", l = "10, 5"; break; case "lgDashDotDot": e += "dashed", l = "10, 5, 1, 5, 1, 5"; break; case "sysDash": e += "dashed", l = "5, 2"; break; case "sysDashDot": e += "dashed", l = "5, 2, 1, 5"; break; case "sysDashDotDot": e += "dashed", l = "5, 2, 1, 5, 1, 5"; break; case "sysDot": e += "dotted", l = "2, 5"; break; case void 0: default: e += "solid", l = "0" }if (void 0 === (n = Y(s, ["a:solidFill", "a:srgbClr", "attrs", "val"])) && void 0 !== (d = Y(s, ["a:solidFill", "a:schemeClr"]))) var n = X("a:" + Y(d, ["attrs", "val"]), void 0); if (void 0 === n) { var d; if (void 0 !== (d = Y(a, ["p:style", "a:lnRef", "a:schemeClr"]))) n = X("a:" + Y(d, ["attrs", "val"]), void 0); if (void 0 !== n) { var h = Y(d, ["a:shade", "attrs", "val"]); if (void 0 !== h) { h = parseInt(h) / 1e5; var c = new colz.Color("#" + n); c.setLum(c.hsl.l * h), n = c.hex.replace("#", "") } } } return e += " " + (n = void 0 === n ? r ? "none" : "#000" : "#" + n) + " ", r ? { color: n, width: o, type: i, strokeDasharray: l } : e + ";" } function A(a, r, t) { var e = ""; if (void 0 !== a) { for (var s = a["a:gradFill"], o = s["a:gsLst"]["a:gs"], i = [], l = [], n = 0; n < o.length; n++) { var d, h = ""; if (void 0 !== o[n]["a:srgbClr"]) void 0 === r && (h = Y(o[n], ["a:srgbClr", "attrs", "val"])), d = Y(o[n], ["a:srgbClr", "a:tint", "attrs", "val"]); else if (void 0 !== o[n]["a:schemeClr"]) { if (void 0 === r) h = X("a:" + Y(o[n], ["a:schemeClr", "attrs", "val"]), t); d = Y(o[n], ["a:schemeClr", "a:tint", "attrs", "val"]) } i[n] = h, l[n] = void 0 !== d ? parseInt(d) / 1e5 : 1 } var c = s["a:lin"], p = 90; void 0 !== c && (p = Z(c.attrs.ang) + 90), e = "background: linear-gradient(" + p + "deg,"; for (n = 0; n < o.length; n++)n == o.length - 1 ? e += void 0 === r ? "rgba(" + B(i[n]) + "," + l[n] + "));" : "rgba(" + B(r) + "," + l[n] + "));" : e += void 0 === r ? "rgba(" + B(i[n]) + "," + l[n] + "), " : "rgba(" + B(r) + "," + l[n] + "), " } else void 0 === r && (e = "rgba(" + B(r) + ",0);"); return e } function R(a, r, t) { return "background-image: url(" + F(r, a["a:blipFill"], t) + ");  z-index: " + a.attrs.order + ";" } function B(a) { var r = new ArrayBuffer(4); new DataView(r).setUint32(0, parseInt(a, 16), !1); var t = new Uint8Array(r); return t[1] + "," + t[2] + "," + t[3] } function N(a, r, t) { var e, s = O(Y(a, ["p:spPr"])); if ("NO_FILL" == s) return r ? "none" : "background-color: initial;"; if ("SOLID_FILL" == s) e = q(a["p:spPr"]["a:solidFill"]); else if ("GRADIENT_FILL" == s) { e = function (a) { for (var r = a["a:gsLst"]["a:gs"], t = [], e = 0; e < r.length; e++) { var s = q(r[e]); if (void 0 !== r[e]["a:srgbClr"]) { var o = parseInt(Y(a, ["a:srgbClr", "a:lumMod", "attrs", "val"])) / 1e5, i = parseInt(Y(a, ["a:srgbClr", "a:lumOff", "attrs", "val"])) / 1e5; isNaN(o) && (o = 1), isNaN(i) && (i = 0), s = J(s, o, i) } else if (void 0 !== r[e]["a:schemeClr"]) { var o = parseInt(Y(r[e], ["a:schemeClr", "a:lumMod", "attrs", "val"])) / 1e5, i = parseInt(Y(r[e], ["a:schemeClr", "a:lumOff", "attrs", "val"])) / 1e5; isNaN(o) && (o = 1), isNaN(i) && (i = 0), s = J(s, o, i) } t[e] = s } var l = a["a:lin"], n = 0; void 0 !== l && (n = Z(l.attrs.ang) + 90); return { color: t, rot: n } }(a["p:spPr"]["a:gradFill"]) } else if ("PATTERN_FILL" == s) { e = E(a["p:spPr"]["a:pattFill"]) } else if ("PIC_FILL" == s) { e = F("slideBg", a["p:spPr"]["a:blipFill"], t) } void 0 === e && (e = q(Y(a, ["p:style", "a:fillRef"]))); if (void 0 !== e) { if ("GRADIENT_FILL" == s) { if (r) return e; for (var o = e.color, i = "background: linear-gradient(" + e.rot + "deg,", l = 0; l < o.length; l++)l == o.length - 1 ? i += o[l] + ");" : i += o[l] + ", "; return i } return "PIC_FILL" == s ? r ? e : "background-image:url(" + e + ");" : r ? e = new colz.Color(e).rgb.toString() : "background-color: #" + e + ";" } return r ? "none" : "background-color: initial;" } function O(a) { var r = ""; return void 0 !== a["a:noFill"] && (r = "NO_FILL"), void 0 !== a["a:solidFill"] && (r = "SOLID_FILL"), void 0 !== a["a:gradFill"] && (r = "GRADIENT_FILL"), void 0 !== a["a:pattFill"] && (r = "PATTERN_FILL"), void 0 !== a["a:blipFill"] && (r = "PIC_FILL"), r } function F(a, r, t) { var e, s = r["a:blip"].attrs["r:embed"]; if ("slideBg" == a ? e = Y(t, ["slideResObj", s, "target"]) : "layoutBg" == a ? e = Y(t, ["layoutResObj", s, "target"]) : "masterBg" == a && (e = Y(t, ["masterResObj", s, "target"])), void 0 !== (e = na(e))) { var o = e.split(".").pop(); if ("xml" != o) { var i = t.zip.file(e).asArrayBuffer(); return "data:" + $(o) + ";base64," + ia(i) } } } function E(a) { return q(a["a:fgClr"]) } function q(a) { if (void 0 !== a) { var r = "FFF"; if (void 0 !== a["a:srgbClr"]) r = Y(a, ["a:srgbClr", "attrs", "val"]); else if (void 0 !== a["a:schemeClr"]) { r = X("a:" + Y(a, ["a:schemeClr", "attrs", "val"]), void 0) } else if (void 0 !== a["a:scrgbClr"]) { var t = -1 != (o = a["a:scrgbClr"].attrs).r.indexOf("%") ? o.r.split("%").shift() : o.r, e = -1 != o.g.indexOf("%") ? o.g.split("%").shift() : o.g, s = -1 != o.b.indexOf("%") ? o.b.split("%").shift() : o.b; r = H(Number(t) / 100 * 255) + H(Number(e) / 100 * 255) + H(Number(s) / 100 * 255) } else if (void 0 !== a["a:prstClr"]) { r = function (a) { var r, t = ["AliceBlue", "AntiqueWhite", "Aqua", "Aquamarine", "Azure", "Beige", "Bisque", "Black", "BlanchedAlmond", "Blue", "BlueViolet", "Brown", "BurlyWood", "CadetBlue", "Chartreuse", "Chocolate", "Coral", "CornflowerBlue", "Cornsilk", "Crimson", "Cyan", "DarkBlue", "DarkCyan", "DarkGoldenRod", "DarkGray", "DarkGrey", "DarkGreen", "DarkKhaki", "DarkMagenta", "DarkOliveGreen", "DarkOrange", "DarkOrchid", "DarkRed", "DarkSalmon", "DarkSeaGreen", "DarkSlateBlue", "DarkSlateGray", "DarkSlateGrey", "DarkTurquoise", "DarkViolet", "DeepPink", "DeepSkyBlue", "DimGray", "DimGrey", "DodgerBlue", "FireBrick", "FloralWhite", "ForestGreen", "Fuchsia", "Gainsboro", "GhostWhite", "Gold", "GoldenRod", "Gray", "Grey", "Green", "GreenYellow", "HoneyDew", "HotPink", "IndianRed", "Indigo", "Ivory", "Khaki", "Lavender", "LavenderBlush", "LawnGreen", "LemonChiffon", "LightBlue", "LightCoral", "LightCyan", "LightGoldenRodYellow", "LightGray", "LightGrey", "LightGreen", "LightPink", "LightSalmon", "LightSeaGreen", "LightSkyBlue", "LightSlateGray", "LightSlateGrey", "LightSteelBlue", "LightYellow", "Lime", "LimeGreen", "Linen", "Magenta", "Maroon", "MediumAquaMarine", "MediumBlue", "MediumOrchid", "MediumPurple", "MediumSeaGreen", "MediumSlateBlue", "MediumSpringGreen", "MediumTurquoise", "MediumVioletRed", "MidnightBlue", "MintCream", "MistyRose", "Moccasin", "NavajoWhite", "Navy", "OldLace", "Olive", "OliveDrab", "Orange", "OrangeRed", "Orchid", "PaleGoldenRod", "PaleGreen", "PaleTurquoise", "PaleVioletRed", "PapayaWhip", "PeachPuff", "Peru", "Pink", "Plum", "PowderBlue", "Purple", "RebeccaPurple", "Red", "RosyBrown", "RoyalBlue", "SaddleBrown", "Salmon", "SandyBrown", "SeaGreen", "SeaShell", "Sienna", "Silver", "SkyBlue", "SlateBlue", "SlateGray", "SlateGrey", "Snow", "SpringGreen", "SteelBlue", "Tan", "Teal", "Thistle", "Tomato", "Turquoise", "Violet", "Wheat", "White", "WhiteSmoke", "Yellow", "YellowGreen"].indexOf(a); -1 != t && (r = ["f0f8ff", "faebd7", "00ffff", "7fffd4", "f0ffff", "f5f5dc", "ffe4c4", "000000", "ffebcd", "0000ff", "8a2be2", "a52a2a", "deb887", "5f9ea0", "7fff00", "d2691e", "ff7f50", "6495ed", "fff8dc", "dc143c", "00ffff", "00008b", "008b8b", "b8860b", "a9a9a9", "a9a9a9", "006400", "bdb76b", "8b008b", "556b2f", "ff8c00", "9932cc", "8b0000", "e9967a", "8fbc8f", "483d8b", "2f4f4f", "2f4f4f", "00ced1", "9400d3", "ff1493", "00bfff", "696969", "696969", "1e90ff", "b22222", "fffaf0", "228b22", "ff00ff", "dcdcdc", "f8f8ff", "ffd700", "daa520", "808080", "808080", "008000", "adff2f", "f0fff0", "ff69b4", "cd5c5c", "4b0082", "fffff0", "f0e68c", "e6e6fa", "fff0f5", "7cfc00", "fffacd", "add8e6", "f08080", "e0ffff", "fafad2", "d3d3d3", "d3d3d3", "90ee90", "ffb6c1", "ffa07a", "20b2aa", "87cefa", "778899", "778899", "b0c4de", "ffffe0", "00ff00", "32cd32", "faf0e6", "ff00ff", "800000", "66cdaa", "0000cd", "ba55d3", "9370db", "3cb371", "7b68ee", "00fa9a", "48d1cc", "c71585", "191970", "f5fffa", "ffe4e1", "ffe4b5", "ffdead", "000080", "fdf5e6", "808000", "6b8e23", "ffa500", "ff4500", "da70d6", "eee8aa", "98fb98", "afeeee", "db7093", "ffefd5", "ffdab9", "cd853f", "ffc0cb", "dda0dd", "b0e0e6", "800080", "663399", "ff0000", "bc8f8f", "4169e1", "8b4513", "fa8072", "f4a460", "2e8b57", "fff5ee", "a0522d", "c0c0c0", "87ceeb", "6a5acd", "708090", "708090", "fffafa", "00ff7f", "4682b4", "d2b48c", "008080", "d8bfd8", "ff6347", "40e0d0", "ee82ee", "f5deb3", "ffffff", "f5f5f5", "ffff00", "9acd32"][t]); return r }(a["a:prstClr"].attrs.val) } else if (void 0 !== a["a:hslClr"]) { var o = a["a:hslClr"].attrs, i = Number(o.hue) / 1e5, l = Number(-1 != o.sat.indexOf("%") ? o.sat.split("%").shift() : o.sat) / 100, n = Number(-1 != o.lum.indexOf("%") ? o.lum.split("%").shift() : o.lum) / 100, d = (o.hue, o.sat, o.lum, function (a, r, t) { var e, s, o, i, l; s = t <= .5 ? t * (r + 1) : t + r - t * r; return o = 255 * U(e = 2 * t - s, s, 2 + (a /= 60)), i = 255 * U(e, s, a), l = 255 * U(e, s, a - 2), { r: o, g: i, b: l } }(i, l, n)); r = H(d.r) + H(d.g) + H(d.b) } else if (void 0 !== a["a:sysClr"]) { var h = Y(a, ["a:sysClr", "attrs", "lastClr"]); void 0 !== h && (r = h) } return r } } function H(a) { for (var r = a.toString(16); r.length < 2;)r = "0" + r; return r } function U(a, r, t) { return t < 0 && (t += 6), t >= 6 && (t -= 6), t < 1 ? (r - a) * t + a : t < 3 ? r : t < 4 ? (r - a) * (4 - t) + a : a } function Q(a) { if (void 0 !== a) { var r = 1; if (void 0 !== a["a:srgbClr"]) void 0 !== (t = Y(a, ["a:srgbClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5); else if (void 0 !== a["a:schemeClr"]) { void 0 !== (t = Y(a, ["a:schemeClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5) } else if (void 0 !== a["a:scrgbClr"]) { void 0 !== (t = Y(a, ["a:scrgbClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5) } else if (void 0 !== a["a:prstClr"]) { void 0 !== (t = Y(a, ["a:prstClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5) } else if (void 0 !== a["a:hslClr"]) { void 0 !== (t = Y(a, ["a:hslClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5) } else if (void 0 !== a["a:sysClr"]) { var t; void 0 !== (t = Y(a, ["a:sysClr", "a:tint", "attrs", "val"])) && (r = parseInt(t) / 1e5) } return r } } function X(a, r) { "" != n && void 0 !== n || (n = Y(r, ["p:sldMaster", "p:clrMap", "attrs"])); var t = a.substr(2); if (void 0 !== n) switch (t) { case "tx1": case "tx2": case "bg1": case "bg2": a = "a:" + n[t] } else switch (t) { case "tx1": a = "a:dk1"; break; case "tx2": a = "a:dk2"; break; case "bg1": a = "a:lt1"; break; case "bg2": a = "a:lt2" }var e = Y(l, ["a:theme", "a:themeElements", "a:clrScheme", a]), s = Y(e, ["a:srgbClr", "attrs", "val"]); return void 0 === s && void 0 !== e && (s = Y(e, ["a:sysClr", "attrs", "lastClr"])), s } function V(a) { var r = new Array; if (void 0 === a) return r; if (void 0 !== a["c:xVal"]) { var t = new Array; W(a["c:xVal"]["c:numRef"]["c:numCache"]["c:pt"], function (a, r) { return t.push(parseFloat(a["c:v"])), "" }), r.push(t), t = new Array, W(a["c:yVal"]["c:numRef"]["c:numCache"]["c:pt"], function (a, r) { return t.push(parseFloat(a["c:v"])), "" }), r.push(t) } else W(a, function (a, t) { var e = new Array, s = Y(a, ["c:tx", "c:strRef", "c:strCache", "c:pt", "c:v"]) || t, o = {}; return void 0 !== Y(a, ["c:cat", "c:strRef", "c:strCache", "c:pt"]) ? W(a["c:cat"]["c:strRef"]["c:strCache"]["c:pt"], function (a, r) { return o[a.attrs.idx] = a["c:v"], "" }) : void 0 !== Y(a, ["c:cat", "c:numRef", "c:numCache", "c:pt"]) && W(a["c:cat"]["c:numRef"]["c:numCache"]["c:pt"], function (a, r) { return o[a.attrs.idx] = a["c:v"], "" }), void 0 !== Y(a, ["c:val", "c:numRef", "c:numCache", "c:pt"]) && W(a["c:val"]["c:numRef"]["c:numCache"]["c:pt"], function (a, r) { return e.push({ x: a.attrs.idx, y: parseFloat(a["c:v"]) }), "" }), r.push({ key: s, values: e, xlabels: o }), "" }); return r } function Y(a, r) { if (r.constructor !== Array) throw Error("Error of path type! path is not array."); if (void 0 !== a) { for (var t = r.length, e = 0; e < t; e++)if (void 0 === (a = a[r[e]])) return; return a } } function W(a, r) { if (void 0 !== a) { var t = ""; if (a.constructor === Array) for (var e = a.length, s = 0; s < e; s++)t += r(a[s], s); else t += r(a, 0); return t } } function J(a, r, t) { var e = new colz.Color(a); return e.setLum(e.hsl.l * (1 + t)), e.rgb.toString() } function Z(a) { return "" == a || null == a ? 0 : Math.round(a / 6e4) } function $(a) { var r = ""; switch (a.toLowerCase()) { case "jpg": case "jpeg": r = "image/jpeg"; break; case "png": r = "image/png"; break; case "gif": r = "image/gif"; break; case "emf": r = "image/x-emf"; break; case "wmf": r = "image/x-wmf"; break; case "svg": r = "image/svg+xml"; break; case "mp4": r = "video/mp4"; break; case "webm": r = "video/webm"; break; case "ogg": r = "video/ogg"; break; case "avi": r = "video/avi"; break; case "mpg": r = "video/mpg"; break; case "wmv": r = "video/wmv"; break; case "mp3": r = "audio/mpeg"; break; case "wav": r = "audio/wav" }return r } function K(a) { for (var r = 0; r < a.length; r++)aa(a[r].data) } function aa(a) { var r = a.chartID, t = a.chartType, e = a.chartData, s = [], i = null; switch (t) { case "lineChart": s = e, (i = nv.models.lineChart().useInteractiveGuideline(!0)).xAxis.tickFormat(function (a) { return e[0].xlabels[a] || a }); break; case "barChart": s = e, (i = nv.models.multiBarChart()).xAxis.tickFormat(function (a) { return e[0].xlabels[a] || a }); break; case "pieChart": case "pie3DChart": s = e[0].values, i = nv.models.pieChart(); break; case "areaChart": s = e, (i = nv.models.stackedAreaChart().clipEdge(!0).useInteractiveGuideline(!0)).xAxis.tickFormat(function (a) { return e[0].xlabels[a] || a }); break; case "scatterChart": for (var l = 0; l < e.length; l++) { for (var n = [], d = 0; d < e[l].length; d++)n.push({ x: d, y: e[l][d] }); s.push({ key: "data" + (l + 1), values: n }) } (i = nv.models.scatterChart().showDistX(!0).showDistY(!0).color(d3.scale.category10().range())).xAxis.axisLabel("X").tickFormat(d3.format(".02f")), i.yAxis.axisLabel("Y").tickFormat(d3.format(".02f")) }null !== i && (d3.select("#" + r).append("svg").datum(s).transition().duration(500).call(i), nv.utils.windowResize(i.update), o = !0) } function ra(a) { for (var t = a, e = 0; e < t.length; e++) { var s = r(t[e]).find(".numeric-bullet-style"); if (s.length > 0) for (var o = "", i = "", l = 0, n = new Array, d = 0, h = new Array, c = 0; c < s.length; c++) { var p = r(s[c]).data("bulltname"), f = r(s[c]).data("bulltlvl"); 0 == l ? (o = p, i = f, n[d] = l, h[d] = p, l++) : p == o && f == i ? (o = p, i = f, l++, n[d] = l, h[d] = p) : p != o && f == i ? (o = p, i = f, n[++d] = l, h[d] = p, l = 1) : p != o && Number(f) > Number(i) ? (o = p, i = f, n[++d] = l, h[d] = p, l = 1) : p != o && Number(f) < Number(i) && (o = p, i = f, l = n[--d] + 1); var u = ta(h[d], l); r(s[c]).html(u) } } } function ta(a, r) { var t = ""; switch (a) { case "arabicPeriod": t = r + ". "; break; case "arabicParenR": t = r + ") "; break; case "alphaLcParenR": t = oa(r, "lowerCase") + ") "; break; case "alphaLcPeriod": t = oa(r, "lowerCase") + ". "; break; case "alphaUcParenR": t = oa(r, "upperCase") + ") "; break; case "alphaUcPeriod": t = oa(r, "upperCase") + ". "; break; case "romanUcPeriod": t = ea(r) + ". "; break; case "romanLcParenR": t = ea(r) + ") "; break; case "hebrew2Minus": t = sa.format(r) + "-"; break; default: t = r }return t } function ea(a) { if (!+a) return !1; for (var r = String(+a).split(""), t = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], e = "", s = 3; s--;)e = (t[+r.pop() + 10 * s] || "") + e; return Array(+r.join("") + 1).join("M") + e } r("#" + s).prepend(r("<span></span>").attr({ class: "slides-loadnig-msg", style: "display:block; color:blue; font-size:20px; width:50%; margin:0 auto;" }).html("Loading...")), f.slideMode && (jQuery().divs2slides || jQuery.getScript("./js/divs2slides.js")), !1 !== f.jsZipV2 && (jQuery.getScript(f.jsZipV2), "yes" !== localStorage.getItem("isPPTXjsReLoaded") && (localStorage.setItem("isPPTXjsReLoaded", "yes"), location.reload())), f.keyBoardShortCut && r(document).bind("keydown", function (a) { a.preventDefault(); var t = a.keyCode; console.log(t, o), 116 != t || c || (c = !0, r("#" + s + " .slide").hide(), setTimeout(function () { var a = f.slideModeConfig; r(".slides-loadnig-msg").remove(), r("#" + s).divs2slides({ first: a.first, nav: a.nav, showPlayPauseBtn: f.showPlayPauseBtn, navTxtColor: a.navTxtColor, keyBoardShortCut: a.keyBoardShortCut, showSlideNum: a.showSlideNum, showTotalSlideNum: a.showTotalSlideNum, autoSlide: a.autoSlide, randomAutoSlide: a.randomAutoSlide, loop: a.loop, background: a.background, transition: a.transition, transitionTime: a.transitionTime }); var t = f.slidesScale, e = ""; if ("" != t) { var o = parseInt(t) / 100; e = "transform:scale(" + o + "); transform-origin:top" } r("#" + s + " .slide").height(); r("#all_slides_warpper").attr({ style: e }) }, 1500)) }), "" != f.pptxFileUrl ? JSZipUtils.getBinaryContent(f.pptxFileUrl, function (a, r) { var t = new Blob([r]), e = f.pptxFileUrl.split("."); e.pop(), t.name = e[0], FileReaderJS.setupBlob(t, { readAsDefault: "ArrayBuffer", on: { load: function (a, r) { u(a.target.result) } } }) }) : r(".slides-loadnig-msg").remove(), "" != f.fileInputId && r("#" + f.fileInputId).on("change", function (a) { e.html(""); var r = a.target.files[0]; "application/vnd.openxmlformats-officedocument.presentationml.presentation" == r.type ? FileReaderJS.setupBlob(r, { readAsDefault: "ArrayBuffer", on: { load: function (a, r) { u(a.target.result) } } }) : alert("This is not pptx file") }); var sa = function (a) { a.slice().sort(function (a, r) { return r[1].length - a[1].length }); return { format: function (r) { var t = ""; return jQuery.each(a, function () { var a = this[0]; if (parseInt(a) > 0) for (; r >= a; r -= a)t += this[1]; else t = t.replace(a, this[1]) }), t } } }([[1e3, ""], [400, "ת"], [300, "ש"], [200, "ר"], [100, "ק"], [90, "צ"], [80, "פ"], [70, "ע"], [60, "ס"], [50, "נ"], [40, "מ"], [30, "ל"], [20, "כ"], [10, "י"], [9, "ט"], [8, "ח"], [7, "ז"], [6, "ו"], [5, "ה"], [4, "ד"], [3, "ג"], [2, "ב"], [1, "א"], [/יה/, "ט״ו"], [/יו/, "ט״ז"], [/([א-ת])([א-ת])$/, "$1״$2"], [/^([א-ת])$/, "$1׳"]]); function oa(a, r) { a = Number(a) - 1; var t = ""; return "upperCase" == r ? t = ((a / 26 >= 1 ? String.fromCharCode(a / 26 + 64) : "") + String.fromCharCode(a % 26 + 65)).toUpperCase() : "lowerCase" == r && (t = ((a / 26 >= 1 ? String.fromCharCode(a / 26 + 64) : "") + String.fromCharCode(a % 26 + 65)).toLowerCase()), t } function ia(a) { for (var r, t = "", e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = new Uint8Array(a), o = s.byteLength, i = o % 3, l = o - i, n = 0; n < l; n += 3)t += e[(16515072 & (r = s[n] << 16 | s[n + 1] << 8 | s[n + 2])) >> 18] + e[(258048 & r) >> 12] + e[(4032 & r) >> 6] + e[63 & r]; return 1 == i ? t += e[(252 & (r = s[l])) >> 2] + e[(3 & r) << 4] + "==" : 2 == i && (t += e[(64512 & (r = s[l] << 8 | s[l + 1])) >> 10] + e[(1008 & r) >> 4] + e[(15 & r) << 2] + "="), t } function la(a) { return a.substr(2 + (~-a.lastIndexOf(".") >>> 0)) } function na(a) { var r = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#039;" }; return a.replace(/[&<>"']/g, function (a) { return r[a] }) } function da(a, r) { "use strict"; function t() { for (var r = []; a[n];)if (a.charCodeAt(n) == h) { if (a.charCodeAt(n + 1) === u) return (n = a.indexOf(c, n)) + 1 && (n += 1), r; if (a.charCodeAt(n + 1) === L) { if (a.charCodeAt(n + 2) == f) { for (; -1 !== n && (a.charCodeAt(n) !== p || a.charCodeAt(n - 1) != f || a.charCodeAt(n - 2) != f || -1 == n);)n = a.indexOf(c, n + 1); -1 === n && (n = a.length) } else for (n += 2; a.charCodeAt(n) !== p && a[n];)n++; n++; continue } var t = o(); r.push(t) } else { var s = e(); s.trim().length > 0 && r.push(s), n++ } return r } function e() { var r = n; return -2 === (n = a.indexOf(d, n) - 1) && (n = a.length), a.slice(r, n + 1) } function s() { for (var r = n; -1 === g.indexOf(a[n]) && a[n];)n++; return a.slice(r, n) } function o() { var r = {}; n++, r.tagName = s(); for (var e = !1; a.charCodeAt(n) !== p && a[n];) { var o = a.charCodeAt(n); if (o > 64 && 91 > o || o > 96 && 123 > o) { for (var l = s(), d = a.charCodeAt(n); d && d !== v && d !== m && !(d > 64 && 91 > d || d > 96 && 123 > d) && d !== p;)n++, d = a.charCodeAt(n); if (e || (r.attributes = {}, e = !0), d === v || d === m) { var h = i(); if (-1 === n) return r } else h = null, n--; r.attributes[l] = h } n++ } if (a.charCodeAt(n - 1) !== u) if ("script" == r.tagName) { var c = n + 1; n = a.indexOf("<\/script>", n), r.children = [a.slice(c, n - 1)], n += 8 } else if ("style" == r.tagName) { c = n + 1; n = a.indexOf("</style>", n), r.children = [a.slice(c, n - 1)], n += 7 } else -1 == b.indexOf(r.tagName) && (n++, r.children = t()); else n++; return r } function i() { var r = a[n], t = ++n; return n = a.indexOf(r, t), a.slice(t, n) } function l() { var t = new RegExp("\\s" + r.attrName + "\\s*=['\"]" + r.attrValue + "['\"]").exec(a); return t ? t.index : -1 } var n = (r = r || {}).pos || 0, d = "<", h = "<".charCodeAt(0), c = ">", p = ">".charCodeAt(0), f = "-".charCodeAt(0), u = "/".charCodeAt(0), L = "!".charCodeAt(0), v = "'".charCodeAt(0), m = '"'.charCodeAt(0), g = "\n\t>/= ", b = ["img", "br", "input", "meta", "link"], M = null; if (void 0 !== r.attrValue) { r.attrName = r.attrName || "id"; for (M = []; -1 !== (n = l());)-1 !== (n = a.lastIndexOf("<", n)) && M.push(o()), a = a.substr(n), n = 0 } else M = r.parseNode ? o() : t(); return r.filter && (M = da.filter(M, r.filter)), r.simplify && (M = da.simplify(M)), M.pos = n, M } h = 1; da.simplify = function (a) { var r = {}; if (void 0 === a) return {}; if (1 === a.length && "string" == typeof a[0]) return a[0]; for (var t in a.forEach(function (a) { if ("object" == typeof a) { r[a.tagName] || (r[a.tagName] = []); var t = da.simplify(a.children || []); r[a.tagName].push(t), a.attributes && (t.attrs = a.attributes), void 0 === t.attrs ? t.attrs = { order: h } : t.attrs.order = h, h++ } }), r) 1 == r[t].length && (r[t] = r[t][0]); return r }, da.filter = function (a, r) { var t = []; return a.forEach(function (a) { if ("object" == typeof a && r(a) && t.push(a), a.children) { var e = da.filter(a.children, r); t = t.concat(e) } }), t }, da.stringify = function (a) { function r(a) { if (a) for (var r = 0; r < a.length; r++)"string" == typeof a[r] ? e += a[r].trim() : t(a[r]) } function t(a) { for (var t in e += "<" + a.tagName, a.attributes) e += null === a.attributes[t] ? " " + t : -1 === a.attributes[t].indexOf('"') ? " " + t + '="' + a.attributes[t].trim() + '"' : " " + t + "='" + a.attributes[t].trim() + "'"; e += ">", r(a.children), e += "</" + a.tagName + ">" } var e = ""; return r(a), e }, da.toContentString = function (a) { if (Array.isArray(a)) { var r = ""; return a.forEach(function (a) { r = (r += " " + da.toContentString(a)).trim() }), r } return "object" == typeof a ? da.toContentString(a.children) : " " + a }, da.getElementById = function (a, r, t) { var e = da(a, { attrValue: r, simplify: t }); return t ? e : e[0] }, da.getElementsByClassName = function (a, r, t) { return da(a, { attrName: "class", attrValue: "[a-zA-Z0-9-s ]*" + r + "[a-zA-Z0-9-s ]*", simplify: t }) }, da.parseStream = function (a, r) { if ("function" == typeof r && (cb = r, r = 0), "string" == typeof r && (r = r.length + 2), "string" == typeof a) { var t = require("fs"); a = t.createReadStream(a, { start: r }), r = 0 } var e = r, s = ""; return a.on("data", function (r) { 0, s += r; for (var t = 0; ;) { e = s.indexOf("<", e) + 1; var o = da(s, { pos: e, parseNode: !0 }); if ((e = o.pos) > s.length - 1 || t > e) return void (t && (s = s.slice(t), e = 0, t = 0)); a.emit("xml", o), t = e } s = s.slice(e), e = 0 }), a.on("end", function () { console.log("end") }), a }, "object" == typeof module && (module.exports = da) }, function (a) { "object" == typeof exports ? module.exports = a() : "function" == typeof define && define.amd ? define(a) : "undefined" != typeof window ? window.JSZipUtils = a() : "undefined" != typeof global ? global.JSZipUtils = a() : "undefined" != typeof self && (self.JSZipUtils = a()) }(function () { return function a(r, t, e) { function s(i, l) { if (!t[i]) { if (!r[i]) { var n = "function" == typeof require && require; if (!l && n) return n(i, !0); if (o) return o(i, !0); throw new Error("Cannot find module '" + i + "'") } var d = t[i] = { exports: {} }; r[i][0].call(d.exports, function (a) { var t = r[i][1][a]; return s(t || a) }, d, d.exports, a, r, t, e) } return t[i].exports } for (var o = "function" == typeof require && require, i = 0; i < e.length; i++)s(e[i]); return s }({ 1: [function (a, r) { "use strict"; function t() { try { return new window.XMLHttpRequest } catch (a) { } } var e = { _getBinaryFromXHR: function (a) { return a.response || a.responseText } }, s = window.ActiveXObject ? function () { return t() || function () { try { return new window.ActiveXObject("Microsoft.XMLHTTP") } catch (a) { } }() } : t; e.getBinaryContent = function (a, r) { try { var t = s(); t.open("GET", a, !0), "responseType" in t && (t.responseType = "arraybuffer"), t.overrideMimeType && t.overrideMimeType("text/plain; charset=x-user-defined"), t.onreadystatechange = function () { var s, o; if (4 === t.readyState) if (200 === t.status || 0 === t.status) { s = null, o = null; try { s = e._getBinaryFromXHR(t) } catch (a) { o = new Error(a) } r(o, s) } else r(new Error("Ajax error for " + a + " : " + this.status + " " + this.statusText), null) }, t.send() } catch (a) { r(new Error(a), null) } }, r.exports = e }, {}] }, {}, [1])(1) }), function (a, r) { if ("function" == typeof define) define(r); else if ("undefined" != typeof module && module.exports) module.exports = r(); else { var t = r(), e = this, s = e.colz; t.noConflict = function () { return e.colz = s, t }, e.colz = t } }(0, function () { var a, r, t, e, s, o, i, l, n, d = Math.round, h = h || {}; (a = h.Rgb = function (a) { this.r = a[0], this.g = a[1], this.b = a[2] }).prototype.toString = function () { return "rgb(" + this.r + "," + this.g + "," + this.b + ")" }, (r = h.Rgba = function (a) { this.r = a[0], this.g = a[1], this.b = a[2], this.a = a[3] }).prototype.toString = function () { return "rgba(" + this.r + "," + this.g + "," + this.b + "," + this.a + ")" }, (t = h.Hsl = function (a) { this.h = a[0], this.s = a[1], this.l = a[2] }).prototype.toString = function () { return "hsl(" + this.h + "," + this.s + "%," + this.l + "%)" }, (e = h.Hsla = function (a) { this.h = a[0], this.s = a[1], this.l = a[2], this.a = a[3] }).prototype.toString = function () { return "hsla(" + this.h + "," + this.s + "%," + this.l + "%," + this.a + ")" }; var c = (s = h.Color = function () { this.hex = this.r = this.g = this.b = this.h = this.s = this.l = this.a = this.hsl = this.hsla = this.rgb = this.rgba = null, this.init(arguments) }).prototype; c.init = function (s) { "string" == typeof s[0] && ("#" !== s[0].charAt(0) && (s[0] = "#" + s[0]), s[0].length < 7 && (s[0] = "#" + s[0][1] + s[0][1] + s[0][2] + s[0][2] + s[0][3] + s[0][3]), this.hex = s[0].toLowerCase(), this.rgb = new a(i(this.hex)), this.r = this.rgb.r, this.g = this.rgb.g, this.b = this.rgb.b, this.a = 1, this.rgba = new r([this.r, this.g, this.b, this.a])), "number" == typeof s[0] && (this.r = s[0], this.g = s[1], this.b = s[2], void 0 === s[3] ? this.a = 1 : this.a = s[3], this.rgb = new a([this.r, this.g, this.b]), this.rgba = new r([this.r, this.g, this.b, this.a]), this.hex = n([this.r, this.g, this.b])), s[0] instanceof Array && (this.r = s[0][0], this.g = s[0][1], this.b = s[0][2], void 0 === s[0][3] ? this.a = 1 : this.a = s[0][3], this.rgb = new a([this.r, this.g, this.b]), this.rgba = new r([this.r, this.g, this.b, this.a]), this.hex = n([this.r, this.g, this.b])), this.hsl = new t(h.rgbToHsl([this.r, this.g, this.b])), this.h = this.hsl.h, this.s = this.hsl.s, this.l = this.hsl.l, this.hsla = new e([this.h, this.s, this.l, this.a]) }, c.setHue = function (a) { this.h = a, this.hsl.h = a, this.hsla.h = a, this.updateFromHsl() }, c.setSat = function (a) { this.s = a, this.hsl.s = a, this.hsla.s = a, this.updateFromHsl() }, c.setLum = function (a) { this.l = a, this.hsl.l = a, this.hsla.l = a, this.updateFromHsl() }, c.setAlpha = function (a) { this.a = a, this.hsla.a = a, this.rgba.a = a }, c.updateFromHsl = function () { this.rgb = null, this.rgb = new a(h.hslToRgb([this.h, this.s, this.l])), this.r = this.rgb.r, this.g = this.rgb.g, this.b = this.rgb.b, this.rgba.r = this.rgb.r, this.rgba.g = this.rgb.g, this.rgba.b = this.rgb.b, this.hex = null, this.hex = n([this.r, this.g, this.b]) }, h.randomColor = function () { var a = "#" + Math.random().toString(16).slice(2, 8); return new s(a) }, i = h.hexToRgb = function (a) { var r = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a); return r ? [parseInt(r[1], 16), parseInt(r[2], 16), parseInt(r[3], 16)] : null }, l = h.componentToHex = function (a) { var r = a.toString(16); return 1 === r.length ? "0" + r : r }, n = h.rgbToHex = function () { var a, r, t, e; return (a = arguments).length > 1 ? (r = a[0], t = a[1], e = a[2]) : (r = a[0][0], t = a[0][1], e = a[0][2]), "#" + l(r) + l(t) + l(e) }, h.rgbToHsl = function () { var a, r, t, e, s, o, i, l, n, h; if ("number" == typeof (a = arguments)[0] ? (r = a[0], t = a[1], e = a[2]) : (r = a[0][0], t = a[0][1], e = a[0][2]), r /= 255, t /= 255, e /= 255, i = ((n = Math.max(r, t, e)) + (h = Math.min(r, t, e))) / 2, n === h) s = o = 0; else { switch (l = n - h, o = i > .5 ? l / (2 - n - h) : l / (n + h), n) { case r: s = (t - e) / l + (t < e ? 6 : 0); break; case t: s = (e - r) / l + 2; break; case e: s = (r - t) / l + 4 }s /= 6 } return [s = d(360 * s), o = d(100 * o), i = d(100 * i)] }, h.hue2rgb = function (a, r, t) { return t < 0 && (t += 1), t > 1 && (t -= 1), t < 1 / 6 ? a + 6 * (r - a) * t : t < .5 ? r : t < 2 / 3 ? a + (r - a) * (2 / 3 - t) * 6 : a }, h.hslToRgb = function () { var a, r, t, e, s, o, i, l, n; return "number" == typeof (a = arguments)[0] ? (s = a[0] / 360, o = a[1] / 100, i = a[2] / 100) : (s = a[0][0] / 360, o = a[0][1] / 100, i = a[0][2] / 100), 0 === o ? r = t = e = i : (n = 2 * i - (l = i < .5 ? i * (1 + o) : i + o - i * o), r = h.hue2rgb(n, l, s + 1 / 3), t = h.hue2rgb(n, l, s), e = h.hue2rgb(n, l, s - 1 / 3)), [d(255 * r), d(255 * t), d(255 * e)] }, h.rgbToHsb = function (a, r, t) { var e, s, o, i, l, n; if (a /= 255, r /= 255, t /= 255, l = e = Math.max(a, r, t), n = e - (s = Math.min(a, r, t)), i = 0 === e ? 0 : n / e, e === s) o = 0; else { switch (e) { case a: o = (r - t) / n + (r < t ? 6 : 0); break; case r: o = (t - a) / n + 2; break; case t: o = (a - r) / n + 4 }o /= 6 } return [o = d(360 * o), i = d(100 * i), l = d(100 * l)] }, h.hsbToRgb = function (a, r, t) { var e, s, o, i, l, n, d, h; return 0 === t ? [0, 0, 0] : (n = (t /= 100) * (1 - (r /= 100)), d = t * (1 - r * (l = (a /= 60) - (i = Math.floor(a)))), h = t * (1 - r * (1 - l)), 0 === i ? (e = t, s = h, o = n) : 1 === i ? (e = d, s = t, o = n) : 2 === i ? (e = n, s = t, o = h) : 3 === i ? (e = n, s = d, o = t) : 4 === i ? (e = h, s = n, o = t) : 5 === i && (e = t, s = n, o = d), [e = Math.floor(255 * e), s = Math.floor(255 * s), o = Math.floor(255 * o)]) }, h.hsbToHsl = function (a, r, t) { return h.rgbToHsl(h.hsbToRgb(a, r, t)) }, h.hsvToHsl = h.hsbToHsl, h.hsvToRgb = h.hsbToRgb; var p = (o = h.ColorScheme = function (a, r) { this.palette = [], void 0 === r && a instanceof Array ? this.createFromColors(a) : this.createFromAngles(a, r) }).prototype; return p.createFromColors = function (a) { for (var r in a) a.hasOwnProperty(r) && this.palette.push(new s(a[r])); return this.palette }, p.createFromAngles = function (a, r) { for (var t in this.palette.push(new s(a)), r) if (r.hasOwnProperty(t)) { var e = (this.palette[0].h + r[t]) % 360; this.palette.push(new s(h.hslToRgb([e, this.palette[0].s, this.palette[0].l]))) } return this.palette }, o.Compl = function (a) { return new o(a, [180]) }, o.Triad = function (a) { return new o(a, [120, 240]) }, o.Tetrad = function (a) { return new o(a, [60, 180, 240]) }, o.Analog = function (a) { return new o(a, [-45, 45]) }, o.Split = function (a) { return new o(a, [150, 210]) }, o.Accent = function (a) { return new o(a, [-45, 45, 180]) }, h }) }(jQuery);